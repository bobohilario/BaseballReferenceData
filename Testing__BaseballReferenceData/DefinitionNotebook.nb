Notebook[{

Cell[CellGroupData[{
Cell["Testing: BaseballReferenceData", "Title",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Name", "TemplateCell", "Title"},
 CellID->1613035345,ExpressionUUID->"dde10f72-2812-4705-8f36-908812b28f5a"],

Cell["Import data from baseball-reference.com", "Text",
 Deletable->False,
 TaggingRules->{},
 CellTags->{"Description", "TemplateCell"},
 CellID->451483687,ExpressionUUID->"ba714dbb-1767-4b18-8b91-b001d55929f4"],

Cell[CellGroupData[{

Cell["Paclet", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Paclet"},
 CellTags->{"Paclet", "TemplateSection"},
 CellID->864524491,ExpressionUUID->"13c9d53c-970e-4f15-8277-e2515876593d"],

Cell[CellGroupData[{

Cell["Paclet Directory", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletDirectory"},
 DefaultNewCellStyle->"LocalDirectoryInput",
 CellTags->{"Paclet Directory", "PacletDirectory", "TemplateCellGroup"},
 CellID->838143232,ExpressionUUID->"cd75f43e-5d39-4a19-a81e-1c545106a2fe"],

Cell[BoxData[
 RowBox[{"File", "[", 
  "\"\</Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData\>\"", 
  "]"}]], "LocalDirectoryInput",
 Deletable->False,
 TaggingRules->{},
 CellID->1026602558,ExpressionUUID->"3b05a39c-72f6-42fb-b2ed-ea349183d200"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manifest", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "PacletFiles"},
 CellFrameLabels->{{None, 
    Cell[
     BoxData[
      ButtonBox[
      "\"Refresh\"", ButtonFunction :> 
       Block[{$ContextPath}, Needs["PacletResource`DefinitionNotebook`"]; 
         PacletResource`DefinitionNotebook`RefreshNotebookPacletFiles[]], 
       Appearance :> 
       FEPrivate`FrontEndResource[
        "FEExpressions", "GrayButtonNinePatchAppearance"], 
       FrameMargins -> {{5, 5}, {0, 0}}, 
       BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, Method -> 
       "Queued"]]]}, {None, None}},
 CellTags->{"Manifest", "PacletFiles", "TemplateCellGroup"},
 CellID->355131546,ExpressionUUID->"ee0acf34-2ae8-4736-a728-5ce338e9e523"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Documentation\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"069ff750-3f87-4181-8b5c-927f96d967ee"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDocumentationIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1225572308,ExpressionUUID->"25b9beee-3aa8-46f8-b225-1404a5ad4ab5"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"English\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"8e0cda83-700f-4cf0-acfb-167acd38e000"]], \
"FileManagerDirectory",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1678122179,ExpressionUUID->"77fc8da3-2e1e-41b2-9d18-b407c57f85e7"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Guides\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bf981f48-10a5-4f31-9987-0cc29ed5925d"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1296726402,ExpressionUUID->"2881cf92-03b1-4246-a4ab-0305f55e14b6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BaseballReferenceData.nb\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides/BaseballReferenceData.nb"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides/BaseballReferenceData.nb"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1416588658,ExpressionUUID->"380b737d-1693-43b4-8759-b909a52d550f"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"temp\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides/temp"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides/temp"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerUnknownIconTemplate"]], Background -> None],
     Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1601864364,ExpressionUUID->"45afd57f-d7a5-4a3c-ab82-7319d539be96"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"ReferencePages\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"da26dec7-212d-425a-8d9a-fb00ecaae0e6"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1679366956,ExpressionUUID->"f3e6771e-5a35-4701-997c-7ddcc36651c1"],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Symbols\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[3]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages/Symbols"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"f6077b76-4dcf-4ae1-a8fd-1acdcd54f925"]], \
"FileManagerDirectory",
 CellMargins->{{69 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 130},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->742856971,ExpressionUUID->"2ea9911f-5def-469b-92f8-3434b5a60538"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PlayerHomers.nb\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages/Symbols/PlayerHomers.nb"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages/Symbols/PlayerHomers.nb"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1874671586,ExpressionUUID->"8c7a972c-1286-4001-82b4-8722bc65271b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PlayerSearch.nb\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages/Symbols/PlayerSearch.nb"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[4]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
ReferencePages/Symbols/PlayerSearch.nb"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{92 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 140},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerNBIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1872760765,ExpressionUUID->"fb0d3856-3d89-4aac-a474-62c2bcf52940"]
}, Open  ]]
}, Open  ]],

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Tutorials\"\>", {"\<\"Open/Close Group\"\>":>(
    SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[2]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Tutorials"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"bb09b54d-351c-4803-929e-594392613bd7"]], \
"FileManagerDirectory",
 CellMargins->{{46 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 120},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1969846923,ExpressionUUID->"72b36f9c-40c4-4d91-9175-bcf9001f4dc8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 InterpretationBox[
  TagBox[
   ActionMenuBox["\<\"Kernel\"\>", {"\<\"Open/Close Group\"\>":>(SelectionMove[
      ParentCell[
       EvaluationCell[]], All, Cell]; FrontEndTokenExecute[
      EvaluationNotebook[], "OpenCloseGroup"]), "\<\"Open Directory\"\>":>
    DefinitionNotebookClient`FileTreeOpen[
     ParentCell[
      EvaluationCell[]]], "\<\"Un/Mark as Excluded\"\>":>
    DefinitionNotebookClient`FileTreeExclusionToggle[
     ParentCell[
      EvaluationCell[]]], "\<\"Copy Path to Clipboard\"\>":>
    DefinitionNotebookClient`FileTreeCopy[
     ParentCell[
      EvaluationCell[]]]},
    Appearance->None,
    BaseStyle->{"Text"}],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel"],
  BaseStyle->{
   "Text"}]],ExpressionUUID->"224dcef9-4f8c-460b-9bef-ea4349adc3ff"]], \
"FileManagerDirectory",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerKernelIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1609332709,ExpressionUUID->"c65d3bd9-5ad4-4158-b1f5-c431c5f68180"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"BaseballReferenceData.m\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/\
BaseballReferenceData.m"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/\
BaseballReferenceData.m"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->498306198,ExpressionUUID->"a0f02fe2-eebc-40ae-85c1-54b3d5a34d7a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"Endpoints.m\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/Endpoints.m"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/Endpoints.m"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1993530133,ExpressionUUID->"e70b4f0b-e0e1-4d3f-a170-b9e3521036fc"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"TopLevel.m\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/TopLevel.m"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/TopLevel.m"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->221084837,ExpressionUUID->"b89e80ac-6403-444f-ab11-07bb5d964a68"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"XMLRules.m\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/XMLRules.m"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[1]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Kernel/XMLRules.m"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{23 + Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 110},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerWLIconTemplate"]], Background -> None], 
    Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->626146149,ExpressionUUID->"b3e08187-98d2-47d5-8fdc-42e80cfcbae7"]
}, Closed]],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   TemplateBox[{"\"PacletInfo.wl\"", 
     File[
     "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/PacletInfo.wl"]},
    "FileManagerFileOpenerTemplate"],
   Annotation[#, 
    DefinitionNotebookClient`TemplateCells`PackagePrivate`fileDepth[0]]& ],
  File["/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/PacletInfo.wl"],
  BaseStyle->{"Text"}]], "FileManagerFile",
 CellMargins->{{Inherited, Inherited}, {Inherited, Inherited}},
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellFrameLabels->{{
    Cell[
     BoxData[
      TemplateBox[{}, "FileManagerPacletInfoIconTemplate"]], Background -> 
     None], Inherited}, {Inherited, Inherited}},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->968455943,ExpressionUUID->"2bc09864-792d-452e-baa0-16d8862a22ec"],

Cell["", "FileManagerBottomSpacer",
 CellGroupingRules->{"SectionGrouping", 100},
 TaggingRules->{},
 CellTags->{"FileManagerCell", "FileManager-PacletFiles"},
 CellID->1060473388,ExpressionUUID->"1ed91ff4-b897-4bdc-af67-db9f8aeff84b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Web Content",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"WebContent", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "[[ Provide content that you want to display on the main landing page \
for your paclet. ]]", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoWebContent"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "1b62a845-3cf8-4971-8388-34f91968d5c1"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "WebContent"},
 CellTags->{"TemplateSection", "Web Content", "WebContent"},
 CellID->175269525,ExpressionUUID->"589ee573-dc24-41c5-a704-5af5a8145c53"],

Cell[CellGroupData[{

Cell[TextData[{
 "Headline Image",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"HeroImage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "[[ Give an image that you want to display on the main landing page \
for your paclet. This will be displayed along side the basic description \
that's given below. ]]", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoHeroImage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "79d5a11f-e320-4a5c-a4fe-fa97e32a3885"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "HeroImage"},
 CellTags->{"Headline Image", "HeroImage", "TemplateCellGroup"},
 CellID->676431590,ExpressionUUID->"d5906a4e-95a2-4387-84b8-8bca7504e675"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvXe4XUW5+H8gtEBCJHQSSqgmSJEYegktFKlKyQ2ilJAghBaaXKkiiHSk
CUhL+AqiIE0BRTpIC6BIR0IRVJqXInpvcvb8Pr/1edb7zFlr752T0PHMH/uZ
vdasqW+fd94ZtNt+Xxszc0dHx4Fz8PO1XQ9df/z4XQ/7+hf4s/2+B3577L57
jN5s34P2GLvH+NV368XDkZRdd6aOjv8/n4o0depUfn/729/y5MYbb4wnPelT
lRqNxjQLmD7mdpumzs5OfidNmvT888/nlbz66qsfYt8+H8nJeeqpp954443U
bMKnTJnC75lnngmG/u53v4vn4ilP/n/0P/DA1IO53UgfHEGA7f/7v/8zz4S7
OvHqf//3fwV+E29pkWK2y4eRcbHywtNMfsUnVEtD1vB/RYrmbIIyQQ14wnOe
dAc8/ARQfOedd/IngNnf/va39GFMIDXcdNNNv/rVrz5gPR96ct6mqzy/Dz74
oGSt/m0rzPVDyu+www682meffZp+3pMiAcP//ve/2xQQE02im3mxIDKmziLl
n8ffHKPffffdwCxf5RjEJ6z7Sy+9RLGcCHyQZN9AvX/961/5k6Abn3i67777
XnvttfRh0IFPc3JBTznlFNDzjjvuyF85cMjvG0X6ZPr3WUji1B//+Mezzz47
zSh986t77733oIMOMv/LX/7y+9//fiqlnUcffXTUqFEPPfRQKlftrLPO6tu3
70YbbfQ///M/IA7U9dlnn+X52LFjJ0yYkIpl3XTTTQ8//HAW99Zbb02tBSc+
p11YFbyPb7feemt+rZP0j3/8gzJ05uCDD37zzTcffvhhKjzppJN4OG7cOLqB
ULfxxhu/+OKLqdsCfOXJDMzYZyU5usmTJyMMpG6Dh189+eSTb7/9NuT3lVde
SV0nyvzSSy89YMCAeGjlKLmsUfq8T+yHmIINVZITOHr0aMB7m222WW+99U48
8USwb+edd15hhRX+8Ic//P73v19llVV+/etfg2ggBX+feOKJ3r17Dxs2LBVo
xS+FebX77rvvsssuX//613mywQYb8IRf8nfeeSf5Pffc87TTTiNzzz338HCB
BRa4/vrrycwzzzzQgdQMc+0bv0OHDuXDWWedlV+6Csz89a9/JU9vLfnf//3f
/t1vv/223XZbH26//fazzz77qquuyocAZ9MmPuakMP/J9qGeWEQkn+6Xdwj3
338/pPKZZ555+umnUzNMXHTRRZdYYomUrSO/lP/pT3+airX4tE3FR2F1+eiS
lBB0C9S49NJLUWHIHHfccUwvFBU8hXjCQ3kI1oBxZM4//3w+fP/99/ldbbXV
+JbMqaeeqiGRtzPPPHPojFTVUSSoAX/POeec+eef/5///Cf5b3zjG5tvvnlq
i1aPP/748ssvz+eDBg1C0PIhKAlumn/ggQd23HFHiABlvve97/nw2GOPtdFL
Lrkklar3Z2hpPusJzF188cVTpkeD4zys8+ieNANJ4RZEE3MXWmihVHLJ119/
PRW4ucgii/C3T58+J598Mk8QXPkr5VR9BonmmGMOMtdccw2vKKD9ELJsK8jM
SLY8GTJkSCqEW+pMBd348pe//IUvfEGht9VqSgHOO+88SYcPYehIzg5BwEAe
oMDRRx9tgfHjx/OXESE52BZqdY895MNKYQxstWo5zw2Ge8MNN3yCgker3voQ
Qe4vf/lL+oxQFTH3xz/+sewJcZe/t9xyC3m0V8vstttu/P35z3+eyrHDhS+7
7DLY380338xDJGeekPnZz35GSfAUvSlndvLTXXfdVYSFRQ4cOBB8fO+99+ac
c05kWnAqNdOznMMtttgC/YgMn1900UVkoCr9+/dfcsklZfoows45TJl8KkgK
BGHw4MHSGbRgGiUD5KRPgdj8n5Aq0rLpI9oK/IAprDeqcp8J8i4MA+1a6TX3
3X777fwFL/7+97+jIcJt11xzTfKbbLIJjO+2227jLU9AWDIvvvjiZpttRuaw
ww4bPnw4/JcajjjiCJ4ss8wy6FATJ05ceumlkY1RkNdYY41ULB/MF8X5mGOO
odgVV1yRmmGTE/jUU0+B2qAk+QMOOGDfffcl89xzz80222x8Cz+97rrryOyx
xx48R1X/zne+kwrrJar0iBEjJk2axNtx48ZBZMgccsghTdvqSR96qmNuWC81
O3yc+GtbkPdpyurTu0c2Y8ldzhn+PFBDHRbG5HOkXFkwzFeAB/VGjx4tlvGw
X79+rMtiiy2GannjjTfeeuut4NG66677t7/9TckWDEI1phicDiFk7bXXdsMX
dmwTIPILL7wAAsI9Q3WtJKf3tddeO+WUU4488shXX30VTiqTJUEHjj/+eCon
Tweuuuoqq4WPW+DNN998++23+Uuv3ORq09bnOzVq6WNotI65Esztttvu8ssv
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
26x1BudfUHK++eZDhNblqU4h8xbzrZPKzkgqeQeZn/zkJwj/9U6+XyS07A8F
wnvSpzYJDwA50OjuYSu1tJsWqnvuuQceiuKjVa0V26U2tFdY0m9+8xtYTyoO
GamICf9o+pVdfoE2etJ9lTxkGwU/3ZBkInr1h3U6l5GaVmVJRFz5uH+1Wuf6
S1QYHqFo5Wh8wW1jRNFQzo9SoYEqHrdHwGioB0//05Lwr3Lq/kIFQytyeD1V
MPe1117Lt59effVVneimCVo5+NFcRNBKXT1PcrWo6S5/XmFuc871tQ+YkGy7
E6u5UXOhrMhdU7ueVogeIskj52tYzocQn+c61JSul1e2kRl60ucpCfl33nnn
ggsuOAMOVKmGuX/605+QUR988EFVxTCt1KvVqmASH/Od2Vz5muHUKPfrIU3o
y1YIw0VQf+CBB9zN+fWvf42WKnkRTVJXbqjqFxa/QDcdh1o1HVWFJUGEanV0
Ikw6qfALnXnmmbUw56JFxaABgruPhsIedqoPOGM96bOSQsldccUVlVpzfAE2
tPc+8sgjraC0grmgAPWsvfbampend5uJVuI21e50vj2s2rpb3uCCBihdgGaZ
ZRaH9rOf/WyuueZqA/ndNBfUP0EHmTBhgpuSzCTUA4X3nXfecWi//OUvl1tu
uf/+7//2E8RjBn7RRRe5x3TYYYf16tWLybzrrrvQqd2t4HMyVOjVYFCk+eef
f++99+7du/d2222Xpn+2m6Z8JyJX5FvJ9t0vkFu9mspCTZtuZGe+Qo6KfC50
haUl5JDc4BYt5mJMpUuRrxgZ8l7lZYLe1vezlLhaDSE0vqYbYZWamy4rmpc8
cfTo0XXN9P3333frENbZypmq6S2cb775pn5f9WQx2l1qqaWOO+64xx9/HCn9
4YcfHjp06N133/3YY48tsMAC4lF9Ry+s/RUhs2lDKfP3oM7YK9H9o2/fvkoF
yL1rrLGGo0PvRtknD6UyLE8qPCvgyyjdZ5xxRiqc07773e8yafxFukg1dPbv
TTfdtPXWW2vZZjaOPvpoSJl+y6Khfsv6UYCh/L3lllugIeutt14qvXEmT56s
pV0ic9ZZZ7n5NWzYMHRn3S9ppU+fPvbEPQK7EVCRr34FhHJor+v4ueCdT3s+
+fnb/G/ld3rTDHzVCt4+f8n532WXXWafffall14auj3TTDPpiDhdpLu+K/Ti
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
NfIMGzZskUUWUY49/fTT466Qpr2dWgvZ2ln6QXnYlhrcQatcbKS64QaQl6Sg
PlgVSsSSSy7prmjKqJb+zP3793/iiSegBlrtUmFhhj6MGzeOpbGffKtP+KRJ
k4xQZywj/QpmGHNbaQGtSOg0U1Ndr5W2OM18o3VE05za57avKJxLWXV/y3oP
mz7sTj4yuYiVl8m1s7xM+0M3jcyBs5KQxGRDIOlJJ51UWUSqUmhsmup6bqO0
Jt1zzz1uC05TnU/FVqA+uu3ZdKM0iM0555zubOrAoB/F9ddfL+tJRfB2kDQ+
EaR32203N+tfe+010GTuueceO3ZsKvZhUSERFSQ+TTvM9EIZtt122y9+8Yvu
ZJ133nlex8kU7bzzzijmfO7NufRKhKJaBJJll13W3S7393UDy41vOnvIc42U
5cbfWmutNXz4cO0AGg3WXHPNbbbZJhXeI2Z02zj++ONTGfUlxIAAzqbOwFOy
WywrnsMBSAFjjRY+vfXnlV9TfVkrKkMFyOuttFqXvN3pTfVhRlc7a87MlTFW
bK35RE2zV1Fzo/WJgLzyVlX5ys10xDZDfOet1Ke00gdQqU+fPoqpPjn77LMr
9/60+RwmON988wnwaVrIm2/sig4o5npZCJwi6WmnnabHBcq7IcJScaRCB2ae
8xa884Bwv3796DCIGc5F9fkHKRZeeOGOImqrkfFgeUi2qbAP5FFbQV4mRNUD
1ZVedZTXE+j9qBdEviK6LEoQ9MzRSMW0wHC9lFlzN+xYxKcVXbi9uGSG9Vw7
QHO5q22jFKXOOeccVfXUNSBSvhkUn/AwoidFqKV8k5Qa8hhNeUyq6DkfxtZz
RDSCd8SeI0Dyu/KCyAkTJkhs+er888/XOY3C4XHx/PPPX3DBBaonLNMll1xi
Z5hk/UJTaSa1wvfeey/viePNHZUjlFZnEckhtK0YF2JVRLKdUgR3tQzV0gEt
P0xplGGSIfKyzmeeeUY1k6po0V7BUE4++eTJkyenZtgEXzj66KMRAqHkenx1
k4jFEue7Qo3ME7t9clBx/6x41B5zwzpEeQ/CwK/h+AcccIAY4TLpjcYkG1NR
x3uAHyR15kFDN24mF+55CLdqDXq8VOQTu7T55psvsMACEe6MT2afffZUeP54
N8R11123zDLLuGVvtcgh9KejvODbcKDQNMrk5jsxV/U2PCT1hjJk1nbbbadn
3brrrivCwpoNQqjrsocvgNjDDjvMOGwMXC9ZGjrwwANVDS699NJ99tlHKn3i
iSd+5zvfkfpRm9cbGf1PuqGTnroSFYI7qgl+axlAjowOS0BRoMzgwYN1YIO+
MWnMBlOKwNOrVy9XeZMipa5ugVA8dJzll19ehN1ss83WW2+9VB7BkDUY3w+8
U8WQFB9zzDHkDUKL8NZRHOLwqDKwAZgZyRadzkus9C3U1gdeCCG6rCvJoBPF
YbQRI0bQK5YMjKMGGQE0LTYo999/fwrrqKnTjjYf+hOOfAbX1WnTMjqYQYrD
C8gwwm7BIFypA+oyFC7xORYwIbplGmpY+Ml3hYDMHMzyFNIyTMcgaXYSTpH7
NbVKYq6xzQO866J+vUVW1gM+AKRadkd5jMhFZ6SGxhIR9G5yxgyICnjoeKlX
IaTAUKLOZ5jLTNLh8ePHi6E2QbfRSVNBK4YMGSLBb5S7qyy6dj95LqiRSsxd
ZZVVFlpoIYHcGRBzdeEWfnR6ZPmASXoC5KAsUww1wT7ImvnECNI+9A5i+C+Q
AMTyCnhTFPf6b/fKEa1Z0JlnnplV08UOnBo0aFAqDWtSfgPqemTJK4xVLvRJ
g1aDsJo30fcZ+EorrQQIMVcazXSxBqoDel0y0F/ZwwJPP/00eQZIl9CwyK+x
xhoKAIhSHqwwKqA7IBAxJoGmoWkrrrjirrvumgoRC41JEwcdRlGSOo0aNQq8
0+mLjJKJ88CKyK915pk4caJxp23ReZC5L7HEEh5i9bSa9EG/a2mjk6BXjzRE
wZXm+NYIt6mQoJjGVLhbzzXXXHIT0I0yroKcRf4OC/A4mOdZXJEK5kJLmVL6
AyQPGzZMJ/AoAxyirLVCw+C5qI3SjVRGjs13eRq1uDFReSqOtYq5a6+9dsos
sY3MEStPPvHSECNRIzV1lFfniFbf//73DY2lG6RKogGo6ZiuyJIyY4MbXt7F
uvzyy0W01FXVAjIpgMzjK761PGwLVkJzAD+wLZrL65l2odEKARU6w9++ffvK
sxwLTYMIrBR/HZf4AsBTEilo3nnnpRWKuY4QBOB/5MiRwAwtrrbaalIh2BDk
S94EIOmgwgwA3h4PZOA77LCDrsjAFZzOJWB+9BxGQhszZoxaNuwJsUQUgBsC
JGpA9lbXcbFYdgN+wTVskZ7IzYGcuOOAPseFAn8uknkeBjensKJjKgiaZWgx
CiOONg2qAC7HXkMrL7W6cu2cgGiSUERx4ZZW6IkFEL/V4yhDSQVXWmE1nT0m
JwIUg/7OXj0hIcetsowxAJspCq3TylNBwLUvMa7wXf8QU85zI4R4N1Nn6TqL
BAiQeAbEYMWxBE0P/eVuz/qEe0ROLqYHnSFemSjVQKNei7lKLBtuuGFHeVMJ
Egt0HqgzNohR93Mq5y/YNOuss0YgaB0sqd+D8FBO8AvpRVYCT4RnQWM9B+dh
ulQgF6JmJVIfA2T5PIAGb2XUikwQAZaP1YytcIbGUlYmxH2xfKJamSYqZpaU
kdbK8/qr8JTmCX0QO5gZej6ljECYx+VuWlVOCSsPo3zuTtm0vPsFjczxpuJX
GfJSHjog3+Obml0+ns9Y3o28xVYzWf/NP2zlvdPIzHpTs8i6TQlL+z5MzVIr
xgqw1aM5Bc9FVlEjS4WKt8UWW0g5nSt0NKXQnIEClkhKMA5tqqIY4hbqlQID
WNynT5+617Rw4mEfDRfwNXhZbEvRVbgV8gbEHN0TSQyZLRUO/8hXajc0Rw3y
R6YOPku7asoamjxGVLf55E/siRzfXe8TTjihIwsmU5/tmLdW85yn+v5C7r4+
pUz50ueW4dygFB9OyeJf5T7q+e5J1JbnpwlXTbGv0XUHpDKiSuFKvo62raau
MntNC7RKja6G5fbd7pyWv3Gjtbm4boSv5Kc5gd1MlgcfEQshsLfccouCU71R
t2ncuzQhcXmKSjgHB42KHC7oqZCRPArKr7zVo20kv/VMXzgUVRoFPRFdgnHH
HSIfJFmb1q08WlSrFIQLmXaXXXZ58MEHkXU1qsj6xaM8BGtnFoylUlVTHGmF
Mk178pGmSh/aA+F/ePo0zEMrSDM1Smm5d+/eceDRBNyqHVssD4sRqAcjPv74
45EetcdCGc4//3x+42Y3BNT67X71DtShfUoZdKiRyVSdZdSmVNuLD/dsegKl
igv+upNogk4+88wzCLo33nhjdyzkPenznVoJBp9IakPqK3ouzBQtDwVfs0kq
zLDT3KvtjhRUeV7ZDe/uSLqXuj/zlZKtzhT0pP+cpAz54SZ5aJtUP7lWF9jy
V6mQlhEX43pKQffdd98NQ2KYXCqSVTQaT3J3u/bs/qNLlS2h7qSYolbniXrS
f0gSXCdMmNBeVvzEU2Du3HPPHeG2etIHTB/Wcn9qweZzn1599dVwJ6un6V0X
eQH4dcABB6DKHVFLRx555KGHHuquR+iPqbyy/M9//nNTdpwKaXn22WcPT4xU
+CGgwIZzwqdK7P/Y0kc66v/MKf3PTPk2qHGWKsmHeexHYeO+++576aWX7rrr
rnow4TCu5p4YqRA483tO/8NTo4UjSivUiwC89ZRvZdafVwojsDWN09uTPurU
nqiG08j01vnYY49NmjTp4WbpoYcemq7tleC5+fncnmRC03++dhta+yT2XXHF
FU0/bGQ7+Mx5q3PTYbv7zW9+M12xwXvSx5OuvfbaViFT2qQZWMTKMah6bXpi
VA4ZNa0kbDjTpDlNmchnJQXi6Pj69ttvk4/49k7aE088YYTqiidPKtzhDAtc
WSzEmMcffxwdBGZ66qmnGjtUUerpp5/WKeWzO2k9aZppats0XUsf9L9Pnz6V
/dxpfpgfKI6HU7NbP1oJmZ+VFA5p77zzDkhaMVlMbRaAzlSnrs7D1VdfPW7c
OGStl19+Wd/jYMFISsau9DILv+rZn/p0pg9CXZvaN9rAUpt6UulD5TG0pgnZ
AC34H0WCNTz33HMeC6rUk/+lTLhnf0ZTo3ZeGxYcVrv2H9YnJBWba6JnPUCx
9cPHf/3rX3tQsQdnP2cp5NVG15M4M2arjE/WW289nXVNwW6s//777x82bBi6
G3IgmAsDOvbYYzfaaCPUbQS/k08+WR8qvQfh3WefffYaa6wx33zznXTSSfWj
7h966syiDX8UqVGGC85jmM9wVU2DJPiQaayH6etJn4/kikO6J0+eHH9d98MP
P3y33Xbrjr90noTJPfbY49vf/narFilDc/nZKyS66667TjCOgwxIejpM6uh7
+umn551s36tpSvufddk71TzbWxXrUXU/f8nl3n///Q855JAjjjhi2WWXNaxE
KmJ3LLbYYl/4whdaBQZvleIEnJ72pokTJ3py591330V+Q0ocMmRIGJ/vuOMO
jyHzFq2N5yuuuCJ8GfQ/88wzYcRHHnnks88+u9JKK7U60Z+PqCIttBEe4pXm
rzhBg7Sw7777em3cRwr2H4ME2yMkf/7SlOxK6A022ODf//53//7940iacQwG
DhxYiUOeSmAGs9yxrcC21SLlrrvuuvHwr3/9qydGeQt7jcu1TW+99ZaOnYjK
995775/+9CcwHXQ+5phjJkyYAAbdfvvtf/zjH5s2F8keog5TCa2A73fddRck
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
xQfNhYIFTm9nzpwZx0n0rU2Lww7FrrTSSvgXp556av+btU2s/R2Kgkf/DiQl
blZ86SabbBLblivF3j788MNbbbVVGEge8h6P+/fNN9802Ni3bnQ1Or62PzHt
4FY69i4a1fXSkDtS0c/DDz98kbzCb3erO06o/m8/FZydhLmOP/54iBYf/NBD
D+1xO1jrYpdwft1vvsQSS7gOnmpeed+6uvvuu++0004GyhoCyfrQWzemYaNu
ueWWn/nMZ+o5G9+BEnzHLBg8aVbcRRiPvP7662YkyC0llDKE97vf/U7sUCqV
XfsfhVTscUtv+99FJ59//vkHH3xw/PjxLpH0v8033nhjjz322HvvvQ844IDp
06e74tkrYmj4abaAm7z88svnseU+FyfLPeMzZsxw03Q/29SsEmeFb27QzPWg
fsoEWr7rrrtw9ufPn0/7i6qrxxxzDD0U3rDiiisqvvrjnNqr1VdfHX5JRaq0
WLXvVbP99xHsCZp0ySWXjO2xrSvXr6PAsC+//DK6GI2MtM+doGDwhg9CZnAE
I3zOOeeIaO3PxMUbDzrooH322ScVUENGuJ8ywakx9+bFF1980003xbJIb4kB
47CyXuZUTps2zXQf/emnRc7ddtttZ82a1YceNiw2cuONN7rghag3w0D/1U3Q
CUZ4w8PUelscT8zvESNG7L///ueffz6GBzol9Y9r7NVqq63mCsJVV13FULh6
8nZEq1p31SnGomidhwrRWulb67HFv27H2rERGr/kkktQjssuu+zYsWNb7Opt
p/i9uNiCaVOZaEjZ2+dm/Zz77rtvyJAhKAgXNFUQbc6aHXvmmWfWXHNNdzfn
m0lTYbQwAn2Lgi7snqw1FQbM1KlTUTTXXXcdRqMnInX2tCm1fh0XdtJMIChx
j3LW9Mp3CVWiZNGlGKWK7x/hiHvvvfeoo44KmabB1lmmm8jTtEZTeRSuEg7K
LQTTm7i8GPsfU/cAeL5nueG7Ypv/wQcfvNRSS6UyHttbzqXNp59+us6VvRUp
duaQQw6ZMGFCnddwwMXk4Ajj3QRGjkGuZLXy4sknn9SA/Mtf/sKc8ojWFH8R
p7gGYufqnbQb5557bvgjfXZz7An+18Ybb7zhhhsiBzAX0WWxtBE189hpm+NG
TYNIZ555Jk5ZBCg6m2x4zwkjGCr2S+Y5WlOBgFprrbUiSBU01lkkb4malfQp
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
WWxnt91208LMvw4vwEBB+6USpYdEJV0utA2CgFPBcZV4V8PuVRYs2hTCzUpX
7bDsoLcKlbYY4fp767RU6XZDHmm20BBhq3qzXZmbv7B73pX8FS26GiWnrkoM
MHqSc1OFNRq+622NWLZf8tF4z/Y2OoDyrWy96bH4IE+F6RifjDpYYoklYp9v
w4J+aXi6bq86304nc5oJFsvzGAtCTmWQNmg78rpUwAaVVft8ThuSfWd33HIu
qCu6oBnXVKr1bSgWl/dvcX6x0AwL5NOdU3KvCmQcOy6jza4ia2szN9YX/epX
v6ocDvKv//qvZmaohH+b8UWP5Fqvs5jCF5f3b/nnP//pttBFWCpRX6zcESNG
1P3c1gVfLxy91qWrjdMx6j1czLb/N5RFO9HvulXc59KVrfI3KxWnzIse/VzU
9Af7kOIPQKkEClKT/bNtlmbY4GYL6O2XXtUPs7BXr3iPlHa+NExr9+m0WXwK
tT5s2DCTP9RLQD3PPPPM/ISafEjz2F29fbTzpZde6qpQO25mKlK+9OG80fd4
6cqCY/n9hvjkHCq2oCwBGAtnv7NMSlkJfLWvy7q6R88qgehKhVQLpuXR3Xbe
Fdc+8sADDyyS9Rpbe+qpp3pMm9l/IdCO6/d2l5iahkiMSmm247tHIsEab7FR
t2HxaMhePfL+Ks1IqzKSC1oeFRdFLoZu87glww4Ztx/JrAhShGflzCAv6kky
n3vuufZx7DTy2GOPhWX429/+1tXYhv4Un+8y6CuvvNJwpaZSaKq1ZVg3Sxr2
sP97eNsslTwP7T/Y1XI9NxWzf9dddwWD118EYdx3331iZt588836J1uNxgNz
GBmr4E0VcWexhdBlIzrz+uuv+xZUfI6HbFbamY6GvYprH29/vvogdR29F154
gS+q0Pmdd94Zn4mlIdLs8ccfN9r/9NNP/+u//uv3vve9b3/72+KZ4ZQrr7xS
bPC999571VVXuXVr+eWXd0H8uaKI+RRv1vDTHGSRgW4EY5rGjh3Lq8WWuAH5
xRdfnDx5srkQRVVdcMEFqTDVZs6c+eEPf3jQoEEf//jHKznYGxbYijl99NFH
HQEUbqSKbVgQ+D/96U+hHL7317/+tVCWVGBQ83R27RQ79uqrr9pIi5j/a6+9
1uz0SUfspptuEjDZH4PQZ+EdAQl9I2AxVA3Pz+Wnl19+2WowVH7utn8ZT6Ti
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
XL355puegkoFiYRnv/KVr5h8DFs6d4Tr9lgEyt5dSf4BI+8PcJFOXn31VXP+
LHKygV/qFp1vgfsGDx682WabpfK4Cp0smOK0006D7BEUH/vYx8zNheI7/vjj
4QI03eGHH26SbTNc8feUU04xnVpDJy44sbI/1yBScFlsM3zmmWemTJli+ju5
ElYNjjPCv6hKV4l5yJNpvC/MsMXlfVR6Ze1Y82c/+5lg0YoH4a8wpov1l112
2bhx44wZmkVzq622euONN+A1k56hsIYMGTJy5EiTcG688cbUvPzyyy+55BKP
gPG85haci/s2fPhw/dyucokclrRjeKkq91Tm/Pzud79LBaTHU0899cADD9x1
112oVOzhJ5544tlnn+WnF154wb/oYsPOXEcjTz755L//+78jEg0pp8LwDiHG
zYjV8NVHHnkkI8D33nrrraJzF5fFpZ3y9sV1m+130NuaM2cOajcVK+wi5by/
+uqr6/auu+66yy67rProxBNPNGX3hz/8YXRiKg98/9znPpdzbt3gjH8r+3Pt
2M9//vNXuuf343VmP4PX/vGPf8B9+LA4+Ohlav7tb3/74x//CIsde+yxX//6
14844ojNN99cJwJ1HOeJY2PTyFtvvWVEOhXI80BJ4ZvENQr38ccf/3VREBq8
aBGeJrm4LC6LtsihBx988NSpU1NhDMN9saIKw4qfWX/99dGzci5GsqDE4447
btKkSalcrF9mmWUEiqeedG6OxHAN5e677z733HMD02hNeE05UAmwVK6NwR5z
zDHubakIqP7wXTtbhxaXxeWdL1L1n//852HDhpn22Vz9sbUEhh04cCB+qLh0
00GjncWpoo6XXnrpVEBbzQ0Om7u+D+di5Vb28oSLOmHChPBzMXrRoVrCqcZ3
WOMGpjrL3dyd2W7xSiipq3v2wlRE/GRn3iJS14hr/kh9xbCryZ70xeXtK+9u
uPv9VSRLITQiQsWKb7bZZlyLBdUM/uc///m1r32NC63Zvfbay80jJ510Eh5r
KjxiKnBx4YUXehyMp2KZqbiyZMm/uNIRWxYbcNttt6Ho8U/1RlG+mtOIiNmz
Z6f+IWTelVXyxWVxeZuKvAC/3HTTTeeffz4Xmp2vvfYaHBToMrH92I1chI6W
hePCguGNDaxFDT9ivro6U8G9UAG7Oqzl//zP/zScnordsu4F4O2q2uOPPx43
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
GWfU8ns9WR6OACy2mpgbKBx2s6233pr6HqaDgGDxrFmz0Hlbp13YbLPNpACU
kSNHQn/iJ6+TKE7r0g9Kejtm1113HTp0aJZ7UtWKKIv6QyIGMyPvtsDxwWW9
j5SiTzrpJCauqxjiARwZwsUIpQCMNnoPg/YGG2wQ1r8sv+u36KKLloJULCxR
emQKmI9no/O9tD5ez3I7jNaee+65J665Zfkt1/PPPz9SVLc4iWih5/r8m9/8
ZtCgQcsuu6yWHHicjIbugElk2iy/cQPceiUZIRPINDeNeA3nMggweHTkkUdm
+SU7GwnTljcsYHNwSVrI8ivevDELdjMHEth9YC6Ne3NBZucFTEP0sESGHbY1
ZAZ9mdBwa8WdRJ5XWWUVlGvEdc93IAX8ar6VrBDIKagGWe5A640eUFif4cUX
X/ynP/1plrgAsf7oyKH4Z4WtLL2M0G0pwUBP/Xb+gUqPzsvi8C5cBZrVjDqp
F0FrjOipJ2Fa5nUN2NKwQpZHqwMSkOVgK2mS3L/+9a9IdKaAeeCBB7y807Ad
66+33nrp7c7Srx5NLp0X0FBdcs6cObwEo4866qhaflPvT3/6k4c1sFSY6ZVX
Xrn88sv3799/0003VUQEL3QuBdRXWGGF1GsdCQFNGbRFMxX+wTIa98S2GaxC
oMIb/K233tIjNDYI9VNn4KyIU2GPCMA8M34+QTwOP1K45/Tp06+66iol5Btu
uGHChAnPPfdcLN2UKVMQlSO9EYzYBD1w4ZNPPvk73/mOck6q6lKZX42y4k8P
PfRQpBppVlIHPxoJP896d2kj0oP1dnSleV1Lr8WA+XJITe9x7N5tAcJ/9atf
afz8uBUmAmgxlxa3AACViNpXLfXiwoinEs0qALHImfrTNqQ2VPv2t7+NrLvv
vvuCxUqwwPwiiywiX9tkk0023HBDkIifItlQlquHypB2FLJxStY6ipCkpU4R
U8WadiAwzqeaUafUrhsYkXZaPXdOPTRKp+HNOqoXboR+Htm6e1dCrJLwOlpE
nWapl0qOuB8rabz1OjhUz+V1QW/tz5MV1zfQwpDr9t5772nTpmWVKQdTgCsh
K6qLwRoA4+OOOw7crxehqsPxL8tjspmfLnU5CJNL+Nl2JhnS04JEh7zn7dFm
EmNaqoDXJhm0GhwznCtaNx4tg7mKiGmC3bTTeUlOopINuaGrQwQkbB/kSgyo
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

    "], {{0, 600.}, {318., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{318., 600.},
  PlotRange->{{0, 318.}, {0, 600.}}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{3.8447667236153393`*^9},
 CellTags->"DefaultContent",
 CellID->445097320,ExpressionUUID->"4204004c-8e0d-4184-90f4-f83efc46a2a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Description",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"LongDescription", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "[[ Give a short paragraph explaining your paclet. This is the first \
text that users will see when visiting the main landing page of your paclet. \
]]", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLongDescription"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b9a5828b-aa85-4315-b76d-b3a843a0f702"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "LongDescription"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Basic Description", "LongDescription", "TemplateCellGroup"},
 CellID->903367029,ExpressionUUID->"9c98c42f-8fef-4e52-89e8-ae6123cab02e"],

Cell[TextData[{
 "Baseball-Reference is a well established source of baseball statistics \
dating back to the earliest records available. The data is standardized and \
available via the website ",
 ButtonBox["baseball-reference.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://www.baseball-reference.com/"], None},
  ButtonNote->"https://www.baseball-reference.com/"],
 ". This paclet imports data from specific pages on the website for use in \
the Wolfram Language.\n\nThis paclet will be extended to more statistics via \
updates."
}], "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835431078247982*^9, 3.8354312031220713`*^9}, {
  3.8360357155826883`*^9, 3.836035732052848*^9}},
 CellTags->"DefaultContent",
 CellID->441612482,ExpressionUUID->"a3ea4d1c-596b-45cb-8617-fad31a8784ac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Details",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a detailed explanation of how the function is used and \
configured (e.g. acceptable input types, result formats, options \
specifications, background information). This section may include multiple \
cells, bullet lists, tables, hyperlinks and additional styles/structures as \
needed.\n\nAdd any other information that may be relevant, such as when the \
function was first discovered or how and why it is used within a given field. \
Include all relevant background or contextual information related to the \
function, its development, and its usage.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d93d766f-66e1-405d-ae87-b610013474cf"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Notes"},
 DefaultNewCellStyle->"Notes",
 CellTags->{"Details", "Notes", "TemplateCellGroup"},
 CellID->427358009,ExpressionUUID->"4309917c-31a2-4520-962f-2f3ed429c5c5"],

Cell["Additional information about the paclet.", "Notes",
 TaggingRules->{},
 CellTags->"DefaultContent",
 CellID->889292814,ExpressionUUID->"4a4056f0-771e-4af6-a8b4-d28d5f064730"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Main Guide Page",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"MainGuidePage", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "[[ Choose one of your documentation guide pages to feature as part \
of the main landing page for your paclet. This guide page should correspond \
to a general overview of your paclet. ]]", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoMainGuidePage"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a3f827df-89a9-4cc3-bcdf-a5fa04fae6cc"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "MainGuidePage"},
 DefaultNewCellStyle->"LocalFileInput",
 CellTags->{"Main Guide Page", "MainGuidePage", "TemplateCellGroup"},
 CellID->440966923,ExpressionUUID->"b2d6c13a-1ecc-4951-b7c3-0ab33fc58e5d"],

Cell[BoxData[
 RowBox[{"File", "[", 
  "\"\</Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/Documentation/English/\
Guides/BaseballReferenceData.nb\>\"", "]"}]], "LocalFileInput",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.844766761622038*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->742829957,ExpressionUUID->"0c655cd7-7fa3-4264-993d-65565316dd4e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleNotebook", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Provide examples showing how to install, configure, and load your \
Paclet along with some basic usage. This section will be displayed on the \
main landing page for your Paclet when deployed to the cloud or published in \
the Wolfram Paclet Repository.\n\nThe default content appearing here shows \
the recommended structure for this section, but any of it can be removed or \
changed as desired. Use additional cells and cell styles as needed.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleNotebook"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "73624f98-d51b-484e-a793-bcdb6e36eba7"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "ExampleNotebook"},
 CellTags->{"ExampleNotebook", "Examples", "TemplateCellGroup"},
 CellID->101847994,ExpressionUUID->"36dee90d-39ea-4b15-a292-489c7b106a01"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization for Examples",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"ExampleInitialization", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "[[ Put any initialization code that's needed for evaluating \
examples here.\n\nCells marked as excluded will not appear anywhere in the \
published paclet except for the definition notebook.\n\nCells can be toggled \
as excluded using ", 
           Cell[
            BoxData[
             StyleBox[
              RowBox[{"Tools", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], "Cells", 
                RowBox[{" ", "\[FilledRightTriangle]", " "}], 
                RowBox[{
                  RowBox[{"Mark", "/", "unmark"}], " ", "selected", " ", 
                  "cells", " ", "as", " ", "excluded"}]}], StripOnInput -> 
              False, ShowStringCharacters -> False, FontFamily -> 
              "Source Sans Pro", FontSize -> 14, FontWeight -> "SemiBold", 
              FontColor -> GrayLevel[0.28627]]]], 
           " from the toolbar above. ]]"}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoExampleInitialization"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "c771acec-8368-4ed9-838d-7b3a28f1b397"]
}], "Subsection", "Excluded",
 Editable->False,
 Deletable->True,
 TaggingRules->{"TemplateGroupName" -> "ExampleInitialization"},
 CellTags->{
  "ExampleInitialization", "Initialization for Examples", "TemplateCellGroup"},
 CellID->844085818,ExpressionUUID->"04717525-20b4-4b7e-92c6-771b01d16a44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletDirectoryLoad", "[", 
  InterpretationBox[
   DynamicModuleBox[{Typeset`open = False}, 
    TemplateBox[{"Expression", 
      StyleBox[
      "\"Paclet Directory\"", "IconizedCustomName", StripOnInput -> False], 
      GridBox[{{
         RowBox[{
           TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["Symbol", "IconizedItem"]}]}, {
         RowBox[{
           TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
           TagBox["0", "IconizedItem"]}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
       "Column", 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
      Dynamic[Typeset`open]},
     "IconizedObject"]],
   PacletResource`DefinitionNotebook`$PacletDirectory,
   SelectWithContents->True,
   Selectable->False], "]"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[16]:=",
 CellID->372775486,ExpressionUUID->"3ddcdddc-32e5-465a-8ae1-c4df59d7137b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/bobs/wolfram-workspace/stash/bobs/BobDevTools/Bob\"\>", 
   ",", "\<\"/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/\
Testing__BaseballReferenceData/Testing__BaseballReferenceData\"\>"}], 
  "}"}]], "Output", "Excluded",
 TaggingRules->{},
 CellChangeTimes->{3.844766999815729*^9},
 CellLabel->"Out[16]=",
 CellID->1153435412,ExpressionUUID->"04105edf-c603-4a5a-ac30-0acf79d13514"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", "$ContextPath", "}"}], ",", 
   RowBox[{"Needs", "[", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        StyleBox[
        "\"Paclet Context\"", "IconizedCustomName", StripOnInput -> False], 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Symbol", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["0", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     PacletResource`DefinitionNotebook`$PacletContext,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input", "Excluded",
 TaggingRules->{},
 InitializationCell->True,
 CellLabel->"In[17]:=",
 CellID->996669468,ExpressionUUID->"9c488278-099f-4337-963f-6ee4e33e5b00"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Examples", "Subsection",
 TaggingRules->{},
 CellID->462042388,ExpressionUUID->"14ea7eeb-2e29-466c-ad0c-8ef7392c3f6d"],

Cell["Search Baseball-Reference for a name::", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.844767013689962*^9},
 CellTags->"DefaultContent",
 CellID->319073343,ExpressionUUID->"9d45abd3-d5df-4880-8b8d-93894f5b3a6e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"searchresults", "=", 
  RowBox[{
  "Testing`BaseballReferenceData`PlayerSearch", "[", "\"\<Pujols\>\"", 
   "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.844767006895692*^9, 3.8447670092910833`*^9}},
 CellTags->"DefaultContent",
 CellLabel->"In[18]:=",
 CellID->469682135,ExpressionUUID->"8a7c326d-9d08-42ba-aaab-f92be0cb6ae5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
JCt08ODBO3fuZGBZ8szv+PHjpUkuGnPw4MGbppEGr1u3zkY7rVixgnCnTp26
d+8uhTjUJFYbRIHff/894Q8//PD555+XBD///DM9Qs9s2LCBSZdnNOiZe++9
FwlUA4uASZlWsadMNKFop5o1a+JU7t+/n3+7devGkKIDGzRoQLLp06fnyJGD
eIRt4MCBxNBHFkuVKlWIb9myJYOJV5grV67HH3/81KlThknmmSBNwjU0bODo
OWySmoJ7v/3eSq/5+zu/6v36W0uI2br9RNtX5vDXvsfcQ7+fJWbwB6vqvzyt
abuZX3y9mX+3/BokCTr0mLvvYBK1OHb8n35Dls3zOVi/xdTvpuwgZuqPv7Xs
NLtNV6++g5eF/J3EpZeuOvLO8DVff/8rGeu3nDZr3j5pQ3T01ZFjN7Xo8CPp
+w9ZHhEZY5Md18C4kb3YWFLDpMdPPvmk+yvALIUMI+HLli276667ZJc7MjLy
7rvvXrhwIeE6deq0aNGCAM4RRgQhwXbPnDnThgVR4Pvvv2+YNACSQ1H+/v5M
q02Z3t7ehEePHo08EDh8+DAJyEi/vvnmG8JkkQTIkmGeXSfS19cX+gR1j4iI
cNhNjYyEvepg+qATq1atko1TeaqCv6aIMaqgefPmEv78889Z7GSRxIZJ4MXR
k4doIpDWSGctkaMLN61LtriJh1siUWi5zz77zDD1D9JVt25dSBE8U5pkmNu5
MCK4k+HeOsfeHkkYPozvbJgqnTX72GOPoU4DAwPxfNHthnnkmGEREs66mzBh
Aux3zZo1jAZLMigoiIBoYDwRwr/++mtAQACBGTNmoDFg3SxPNNKBAweIhExu
2rQJ01CxYsVWrVoxhj+ZkMF00RjSy+nEmzbYXjstWLCAcL169eSZBezXRpMw
uZLA3gahyqhCRgyhJTGdmjJlCiZMXA9GA0MmrwYoYbbaIPmUVol2YgxJdujQ
IWKee+45TKc8EKT8S5cuYSixdDgdISEhjBsWDZNKCxk30sDhFy1axLf4QdhH
St6xY4cm4Roa9nC2E37tWnyHHvOatZv589bA0LDLAYH/Nmw1fe3G45iUuT4H
Ovbyvno1/sTJ0MZtZngtOBAWfjkg6EIDSwLyxsUnBJ64ULvRpNffXrL34OmY
K9dWrzvWtO3MPwL/hSUN+/inDz9L2nlYstK3Zp0JEyZvPxMSCceu22JqeEQS
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
lbl+/Xpidu3ahYM/cuRIZuS1114j5ueff5YmYSZYpx07dkS3UN2jjz66b98+
yYL29vPzIzx16tRy5cpR/j333PPmm28SM2LEiKpVqypl3rhxY3nECeN1UbXk
lfF599130Wk5cuR47LHHaANsH06OBmPeUSAkOHz4MDoHq4EPSNU0DI00ZcoU
ZMl6DG/btm3Yo99//50wOk1OtqCHaRI14migBmmSEjl7YMiefPJJ+xFYt24d
ClApQ/TzihUrCHfq1Kl79+6S16EyxM7KZhcl42aKMqxRowau5dChQ8Uzlaln
BGQorAvEYSRzQa937tzJZFEaq+aFF16QtmGRs2XLhqZdtWoViwthQFRYQcYt
vnahoXEbcEhpzIdrSZoB7v32eyu95u/v/Kr3628tIWbr9hNtX5nDX/secw/9
fpaYwR+sqv/ytKbtZn7x9Wb+3fJrkCTo0GPuvoNJ/OHY8X/6DVk2z+dg/RZT
v5uyg5ipP/7WstPsNl29+g5eFvJ3EpdeuurIO8PXfP39r2Ss33LarHlJS5g2
REdfHTl2U4sOP5K+/5DlEZExNtlxDYxkimJjSQ2tHNwSaU7ClZlmJCkTC4v9
sp7xoBDGEJONEyQP7plE7M6nn36K5YqKisKg9+rVi7wUgpU8dOgQRB0JYUaC
goIw0yRwSMLlETYNgC9RICYeGkCAXhjmXtPdd9/t7e1NePTo0UigYVpGEpCR
jn/zzTeEhTmQAGEjsHLlSiLxvBAqqHtERITDcdBIQ9irDmYHesO6M5Ife8lm
Y/v27VnvBPCd27RpI/JAXhIjKoYpDKxlRFGRcDjec889t3Tp0ldeeQX2eOHC
BRctkQJvry55RibLAQ+iZ8+eRjJhg0HlypVr+vTpht1up1vBfnVLePDgwYyA
YXaEZUJf5s6dGxISsn//fhbLjBkzGDFoKvqTQYC7EomeRLczgKx61LVsfQQE
BFy6dIkAK4ssEE5IMqsV5dCiRQvCLDqWv7VMqkMz4JIT+fjjj2/atEk2kFWT
KLxgwYIwYWrEJ4L3Ym4M8/kFGltIOCt9woQJUOU1a9ZQDkqAGZRG8i3OEeFf
f/2V5rmuWoRHRJRc0mx0WnR0NOrof//7n+grJpo0/IvBQr8tXLgQ07Nx40Yi
0TNYNHXoEfWChhRuj4PDwH7//feGKXLoKwbt+PHj9erVw2ehSRB1zNxHH330
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
86dfmCaN/rY/vk3XiXLa/HDs8f5vzCNzaKewZ16cfuBgZiUjx/6v+MyISJX9
g5kezaMxDhcWPn8wkzzESo4NxmQLNKF9h7ygW2fjW6Ih4qCMrDdV4p3lDLAg
u7IUlHO2Avq5detWTbPtfaB4dr+NiPOVbXM4huxTwbJYff3KMspSbUJCgr3a
ffv26cPATJ1+WMAgj/C4ATt69Gg5PcsasfrIGMtx1AKyIYty+PBh+ypQg+Qh
Opaceu2oISe/YE5bROJ5aYtWkBxCM2W7VdSzZ0853xLg5sKt3eja3Llz7VOH
auj7PtrOw7FFocCgQYMaNmyIpsCZN27cWLFiRUy0w0rs3bt3y5Yt9vtHTC/M
U0+jo04KsoIye44uybtBIM/Muf2t4Mq6WyG8HRAByU9C6DPbyjrnJg/4K1v8
7qVpAUZSakBU7L+hw3+ak5PqDKdKlSoRERF8xLLBvWkIPk9vERhdFebLbs3s
c0u7FBRBIl2C01NnQ1bKywwom63T7zOH1YufleXwaOsQdfGqDlvn1gUdNZ8z
UUBn9DEz/eNo9hkmUb/CXbsJZWDgH3jfCVfWKXGouFyLfpw8eWr33iPy5KYk
Jp9Ik01sjxkwLWRw8JNjiSn/3RN7POmMHUtLP30i5YzuY4nIb/+hn9//OLbP
4vC6CUdx91j0cRRjHAINPifhue6DhuPH5nK+q+z+HaXzghSnoLwHTL/iMrtf
zfOYYvbA8w73074Z1ssiQkJCCI6yK+UQG7/2MIdtOX6YTD5C/0qUKCFPNBQ4
En5OuH+1FjNep06d+Ph4BsvYiaRkq1ngUfcdiTnUZe1lChUqJMe87en2OvW1
vsCJwORvueWWRo0aKdu65PqxWYeEQONh3fPnzxcxIDApWrSofo3A+daWXTbv
M+CuEJ1at26dbMsra7lzYes89i2Hieelp8a0GuQDztfo2blx7jIo509eesvp
0IIzOphNcY8k3BiHQIM/SLg7m+bSHl2hyjoPYHeO7qdcs3OjXurx2Ac39Ht6
+Y9nrFChwnXXXSdnokTwsuuPHpSmWAZ5h1uoZG6XLVv2yiuvyELYobO5l8lL
zhyqbR7bsmcTWQoLC5NnSQLfbnjUbgcv9ajsWqGU9Y6pu+66q1SpUjVq1Ljp
ppv69Okjv1jksLruyfRuEOzXWkmVtbP9wAMPTJs2LcM6e++uU651bTK6xYsX
ly1bNjQ0FPX33hP3kO12wF1Qlx04cGDx4sUrVapUtWrVWrVqIcz2bjiqcjdk
70Z2knPOGdAtyj2+BQsW4GSrVasmv5qkIyC3rbM37bZ12ZnHnCTqFIfWnHMS
DAz8gXOScLf0ZWS4Nff8MtjyeG7IVaHTf7mLq2xOCxvjEGjICICd8IACEhgX
F+flB+kM/A3vkV1B1DI3CsQofKjdWJioqCj70Qv/QV5UdV5F9K8h+xXx8fGR
kZHyI63KnzKQwxnA5mPrgsl6GxjkEcFEaTyOxRiHQIMh4dnB7GxfKGQnVEGz
IgVlID7Rbsdg9XMWAQj3/pIP4Z4HPzWUCxQUgTQw8DeCidL4w4Ab+ByGhLvh
V19scE4EpVAVRPhqIRwHM/yN3LWSD32z3131d0M5z2lsnYGBRjB5nxyeFs4O
xjjkDwwJNwg0GKEKEJiFMDAwuKgQTEYvmMYSxPAJCQ+oW6sGBR2IkxGqQIBZ
CAMDg4sKwWT0gmksQY88kvCUlJR0AwMfAXEyQhUIMAthYGBwUSGYjF4wjSWI
kZaWxv+YmJjckXCCrBUrVqxevfr/DAx8BMRp2bJlRqguOMxCGBgYXFQIJqMX
TGMJeqxduxY6bXbCDQIBJn4PEJiFMDAwuKgQTEYvmMYSxMjjTni6ORNu4GuY
k2wBArMQBgYGFxWCyegF01iCHubtKAaBAyNUAQKzEAYGBhcVgsnoBdNYghjm
FYUGgQYjVAECsxAGBgYXFYLJ6AXTWIIYF4qEy+9WyHU+/IqHvTmDAIcxHQEC
vy5E/v8MRD5YAJrw90+C5r8p899vduRkLMZuG+QnfGX0IDX8+aRLuUY+eFJj
HPIOP5FwPJGcOedCT5QUz+GSeazB+ygMggPZCZX86qLKUk832/GY6Nbl8/0B
x1y3pRvS8NifgIUXGy7Dz3XN52UKcog8dinvyMVw7EVOWdCj8McUZdeHPLaS
cwXJYZBifqrP4EIhmLaA8j4WYxzyAfmzE+4uGBsbGx0dLV/RblxcnMdsXmrI
IaSgbs4g8OFdqNya607XiW5W5ibkXnqSx7ZyXnNgIjj8kUx1cnLy9u3bU1NT
/dpWVFTU9OnTMZgqb0vssawkYip37NiRn/LDcPbv3++9VwLvCuJOPKdZzp9V
MzDQ8JXR27L10Ko1e5KSTqpMyfdFz84f+WDAjXHIO/xBwsm2cOHCsWPHjhw5
8ptvvtmyZYukx8fH16lT58svv+R6yJAhZcuWlRquu+660aNHy7WjBtInT568
bds2nW7vA9fCfIYPH37vvfcmJibqPHqfU+r86KOPypUrp7ciNXw7mQY+gVuo
ZOEQpLfffltStm7dioRI7KayJBMBXrx4MZKszpbVPXv22GtDZlatWrV8+XJJ
PKcY5LqtQ4cOYUZiYmL4v3PnTrSMpiFp48aNUwXhVppH7ZZur1y5cubMmfqj
XZvs2qehE6U2Jr9mzZpr165VWafRdBFRaseWiLtOnVnfWXB3SdfMxzVr1lx9
9dUYbd2io8+Oyr0Mx960pEhvZ8yYceWVV5YqVUrWl5G6q9VNyzwMGzYMw5WU
lET61KlTW7Zs2bZtW+RKZVlLMYxi5dLS0ig4ZsyYEiVKpKSkqOxFV/fQY88d
Y+zatWuPHj2UzTDqUjJ1jRo16tChg+6GY3KUSxdymKhsZtk+M6R36tSpe/fu
smqFCxfWq+ZxsAYGPsQ5iavIPv9tWqC0TsgJlDET1jzSZFSXZ6fG7IpV1tEU
B93IquR/ifYKz27OA1FxJ3osnh09U8Y4BBIyfErC9fpWqVIFat2gQYMaNWpc
fvnlzz//POkJCQlNmjQZP3481++9917p0qWlhmLFio0YMUJluS1dQ8mSJevX
r1+1alVq6NWrl8dbFZIyYcKEpk2bHj9+XJ29ISlnWpTF+W+44QZZKceBAd/N
pYFv4JGEs5TQtnfffRdprF27NlQHDUWEfvnlF8nz+uuvQ4GI7CpXrgwTFp0d
OnRoSEhIkSJFkG3J9tNPP1WsWLF8+fLXXnvtnXfeefDgQS9WDuYMR8p1W5iL
4sWLX2sBYb700ku3WSBPVFRURsCfS/FCwlHt3r17K5c7sGuf/aEPR83Q74YN
G27atEnZQm9l8Uz+Dxgw4F//+pfKUk+PdSqb8rq7ZM8m9TMQzIiE89KKoxKP
OGfTjg7cf//9NKePHtkze1xrjGHjxo2xvYQPiEr//v2R7SuuuGLXrl2JiYl8
9c033yibYQQjR47E9Xgn4Y7mvIvZyy+/3LdvX2Xb09Bjl4KPP/54mzZtHN3Q
1Tp0IYeJDJCU999/H7XSjWr//tJLL9ErLlavXq1XLcCVxSA4kJPdY7va2Q9+
w1AkpUnb8V9PXsfFqbNPhtuvz1Kl7Mmwo0UH2c5i/p6LeznY6fHaDWMc8gH+
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
ol27djqD3XYxq25dWL169TkTtYbyn0HRokyadEwkivGqgNcRgyDDOUl4Skq6
/P/9j2NnVOZk+r4D8WlpZxTt6LEUSPiPi6NPpp1KP3XanQEqnpqaWUl8wonY
I0liBhKOphw4dFS3QmZh7LFxyYdjj0uiNhhx8cmHfj9mT3QU9zIWYxwCDb4l
4ZIB18aUQm/U2VtJ5Lz77rvfeeedq666CsaCQyxdurTcIIaj4lluuOGGChUq
LF++nPgL3nLNNdfAu8aPH0+GiRMn3njjjaVKlbruuutGjhwpFcK0CYUeeugh
aFXx4sW//vprSW/WrFnt2rUbNWpUokQJqp09e7akT548mUpopVy5cgsWLCBl
1apV0qXChQs///zz9g7fcsstr732mh4yHnzSpElr166lz8ySssTjpptuksqH
Dx9erVo1mYdvv/3W3VUGKDvheM+OHTvSHEOjkz4/ux4EsAuV3mitU6fOiy++
6JgoVpyZ5KJ///5Vq1aVxClTphQqVEi0FaDCrJ1wYGXtPSIS7kYzXHBkyElb
Ahg+NFJlkSh7B+REwc8//4x4Q9dVYJsRtw0X7aD/6Gm69Yts991331tvvVW+
fPnbb79dWROiVWzhwoVShBlDPSnCf/Ri8ODBaH3OdT8sLMyL2j7zzDOk/PTT
T9Il3ARqRZhz22230dytt966bt06KXLFFVdERUVxPXr06JCQEOq/7LLLROvf
fvvt6tWr61tdWJUXXniBCxjvOS2GzM8//vEPyDOWrVKlSvQB4wYnx/4UKVIE
fSfDr7/+iokgtMdY0TQdw4CMGjUKWbJv8ixbtgzjuXnzZq4xQXKyBTtMl2iR
QKNy5cp0ySFyduDI7rnnHvcMzJ8/H3ulbVeZMmW+++47rjt06NC1a1cp69F2
4Wdls4uaiSjFdtWsWTMuLu7VV1+VyFSWnhmQqbAriMdErTWDBg1ireVm08qV
K1kCOo9E8fHee+9ltsuWLbtjxw4V2JpiEDTwuPNgbcxmWga4d59/RoR9u/7J
pyc/+9IMUpYs39W68zf8te02cdPmA6T0fX1O/eZfNW4zbvDHP/Nx8dIYydCu
28R1GzPd/bYdf/TuN2tS+Mb6zUZ/PmoFKaO//r8WHSa06hTWq++sg79ncumZ
c7b0HzDv4y+WUrB+i6/GT8pUYfqQmJj6zoeLmrX7mvwv9Jsdn5DsKE5ooGzH
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
OXLkqFGjRqlSpf71r39169bN6SFMSZk5c2a9evWuXLmi3b5RKWdauBg1atSz
zz5rbTe9L2u6hlMSzpJB27766iuksVKlSlAdoqfcuXP//vvvkuezzz6DAuXL
l69EiRIwYVHbMWPGFC1aNEuWLMi2ZPvtt9+KFClSoECBnDlzlitX7vz58y6s
HMwZO5Dittq2bZstW7acOhDaRx555IgO8hw+fDjB48+luCDhtWrV6t69u2Zx
B0YtU6OzDhP6Xbt27X379mmOcFggZnnw4MGffvqp5lBDp3VqBiW1dsmYTepn
IJgLCduNxt+1pt+xaVMHqlatKobOmtnpWk+fPr1u3brYXsIHRKV///7I9uOP
P37ixAm8D1/9/PPPmoPPS5FJkyZlypTJNQnXkrCiTtG7d+++fftqhr0LNXYp
+M477zRr1szUDVWtSResiTgXUtasWWPUu3PnzsnwndpnY0RmmkYbNtyK5Owe
GyXRePAbJiIpPs2nz5izi4sbt58MN17fpkpJk2FTiyay7WD+zou7ONjp9NoK
2zikAdxNwitXriyRlExjeHh4SEiIaQ5plKZN25JkCwsLUykqncViEaXCRYsW
PfTQQ1Aj1gWfpXJGR0c7jf6uXbsGreJbzeGIv/7667x58yo5ZKSISkrn0kbq
wCRUIjn+/v7PPPMMF9AVyAnk+erVq1gAgjJN3+dEElauXBkTE0NKo0aNpODE
iRNhwo899hikV2r7+OOP+/XrhwycOXMGYtyzZ0/N2UkS1WgK2goKCtJ0kQsN
Df1DB2JfvXr1atWqidS1aNHCx8dH8/jNcKt2JziOdhQsWJB54Fp2KphPbIgM
h2+Dg4NNBz+wJBBgskVGRgqBVPvV2u0WQKa6adOmly5d4lq1aKyT2eYrqZbV
cdolUuTWgxRhIFh+470zNF3KisWQvRr5l57I7rTrpi9cuKCKkKFixYqdOnXi
W0XyaULlkSEfPXqUgngWRmc0p0yL5KQ5goWZM2dqt4cn4OTJk5SClmfNmpU5
pDb6HGeAyk8l1hkgP4O6KyMpZWvWrInEqgxGI8msGnWhQYMGJG7fvt2a2E+H
Se9MTWu6J0IYjIkSCzNpmg0b7scdKU1sbLx8/vlX1C2VuR5/5lxEXNwtRbsU
FQsJX7M++HrcjfgbN60ZYJHXriVWEhF5NTQsWmQ/8lLsuQuXVCtkFsYeGh5z
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
3BGuhcqqztZ014nJx723lVSj6SKa8w5/JFMdExNz9OjRa9euubWtw4cPL1y4
EDuj3dsSOy0rieHh4ceOHUtL+XFtNpOvC8YQSVnL48ePu6HLNmykEKll9A4F
Xdi241R09HUtUdpTo2d3jzQw4LZxuHe4iYQHBAQcOHBAc0zyvHnztm7dqjkC
KxKNVak9H1O65tj8NIZjKps0+s033+TPn19SVPGIiIgqVar8+OOPXI8aNYoM
ssR16tRp1aqVZlhx8q9evXrq1Km+vr5z5sw5cuSISjf1UIpMmDDh5Zdfvnz5
snUspv6oDGlwBsbLYBUqmc9Dhw59+eWXkhIUFMTCQUjkX5lhBHj9+vVIsmZY
QVOi+go+htgnh5WluC1JvHr1KomiDsDf33/atGlampyOuEc41W7pNuq8ePFi
9a9TDTWWMqnt5s2bK1SosHPnTqnBWER0zbRP4sJoqP0Ta5dUzfy7Y8eOzJkz
w8NVi6Y+myp3MRxj05IivV20aFGGDBly5col68tIrdWqpmUexo4diz2Jjo4m
ff78+Y0aNWrevDnSojmMGHZJc9iruLg4Ck6ZMiV79uyxsbGaM4Ns6qHTnpvG
2KFDh/fee08z2CtVSqbOZDZNk6MlW+8Ep06dktuOXI8ePbpw4cLW+UzmtNuw
keq4I3EV6ePToAWakko5gTJl5o43fSa37zI/5ESoph9NMYmto5L/JRorvL05
JwJvTXRa3OlYbOPgaUhIVRKuMjz77LN9+/aVZYI4PfTQQ2TTHExVYCQh1uuk
BFJd45L4/Prrr3Pnzq2qlbJRUVE+Pj7Tp0/nevjw4XRGlvWdd95p1qyZ5nCa
UmHJkiVz5MhRo0aNUqVK/etf/+rWrVtSpxf4nDlzZr169a5cuaLdHrvJmRZN
5/w0J90wDio9ysb9glMSzgxD27766iuksVKlSlAdgh2W/vfff5c8n332GRQo
X758JUqUQJdl8k2JCY5zLHzVtm3bxx9/fN++fZozPizqTCQOR0pxWyRu2bKF
FEQia9astWrVQsv27NnD9eHDhxM8/u6bCxLOWLp3765Z7J5RKVzcDoB+165d
WybfWL8o9eDBgz/99FPNoTVO69QMOmXtkjGb1M9A0G6JsqUVUyVOccemTR2o
WrUqzalzU8bMTtcaG1W3bl2kgvAhW7Zs/fv3R7YRyxMnThDp89XPP/+sOfi8
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
r75M6tf0XKboPfCUw3l7Jd58WUTp0qUJgpIqZZ1wNdsuE9OOlLdlTZQRQf/y
588vPyCb6Uh4srD9qpphmvEaNWpgMBksYyeSkq1mgW1RrL/g47JON1Be5r77
7pNj3tZ0a53qWl1g1WHyjz32mLyaSa1Lqo25TRig8bDulStXyn0WApM8efKo
1wjcam1JZXM/A84K5dakbMsb5nKnwqall95Zs2WQ2mpoJItbpzTJyGeyGQz7
T166y2lThxs6mERxlyRcGwdPQwaRcOfRC6vjs53KtvlHWetFixYVL168RIkS
FStWLFWqlNyWVWdFXLpUw5V7tXXGVtZlVxXU+3v5j8csWbJkoUKFrL/+6eyM
tUI1UpeVayQFp1DJHG7atGnAgAEy4VaobEkthzNRfZVsZ9LelkoUmfHx8Rk1
alQKW7+zcKndNl7qHIUar6za/v37K1euXLhwYRT50Ucf7dev39WrV+Nv/mV5
l0ptMxFutF4po2HubD///PPz58+PN1/w7qxTrlVtMrr169cXLVrUy8sLNXff
E+eQrfruLKjKDhs2LF++fGXKlClfvny1atUQZsNhjpw1uOxGUpKT7AyoFuVe
3qpVq3CyTz75pPxqkoqAnDJsbdpp01KoCy5VKSXjdZ9TQyMdkSwJd4pefLxT
c28tgyWP64YcFcbH29XNXtxwRcK1cfBAxN/enfBbArEYAhAcHKx+UfoOAskM
Cwtz80N1GukFl0LlUjEzLzLFKNJRu7EwQUFB1qMXGQc6fKuRL9rt5qV/6YXw
8PDAwEDMqXzMOBlI4QxgV7FpnvxosIbGbUaGUprbDJdj0cbB0+CxJNwmJ55z
yEfvbGc0khKqLDPzmWUg6aLdTkX22ADEub+UjvBYg2ZkHoHU0MhoZHkSfqvQ
xiGj4bEk3HB1cOXOIkN9tIZCVjKDmRrptRC3WZFT18pt6Ju6i5rRbaW8fm3T
NDSsyErex/095WShjcPtgSeTcI27E1qoPAR6ITQ0NO4qZCWjl5XGkoWRLiTc
o26tamR2IE5aqDwBeiE0NDTuKmQlo5eVxpLlkUYSHh0dHauhkU5AnLRQeQL0
QmhoaNxVyEpGLyuNJQsjJiaG/yEhIakj4QRZW7Zs2b59+/9paKQTEKdNmzZp
obrj0AuhoaFxVyErGb2sNJYsj4CAAOi03gnX8ATo+N1DoBdCQ0PjrkJWMnpZ
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
VzExMRScNm1a/vz5o6OjDVcG2dZDlz23jbFLly7du3c3LCZOlZKpa9SoUYcO
HVQ3bJNjOHTBmkifVYsU37ZtG0tvVRDbZNo6wH9GWrt27Xvuuee5554ThdUW
WCPjkCxxFenjv0ULDKUTcgJl2swdLzeZ8lqPeSFHQg3zaIqNOCRW8r9Ea4U3
N+eCcjgTXRZPip4Z2jh4EuLTlYSrySlXrlyBAgXq1atXsWLFHDlytGvXjulS
xwkE6mODBg2YQzlDYt1OVJmtpSQDvc2bN++kSZOMRGdna7d8+fL//Oc/e/Xq
5fLUgaQQIDRt2vTixYvGzduYcqaFi9GjRz/00EPOYC0zLnQmgksSzqJA2z77
7DOksXr16lAd4qMiRYr8+uuvkuejjz6CAhUtWrRs2bIwYVHYsWPHli5dOnfu
3Mi2YS4cul+yZMlHH300X758xYsX/+233wxXm9hS/PDhw3Ck1LUltqJHjx5w
v0qVKlEJTJ70nTt3IrpBQUHxHn8uxQ0JR2d79+5tONxBsvorgH43bNhw7969
hiWINkyeyf+hQ4d++OGHRqKiuazTsKihs0vWbFI/A8EgSGBuNf7udTnZpm0d
EDtmM3RWn2XDjBkzGjdujDUjfEAgBw8ejGzfe++9R44ciYqK4qsff/zRsJg4
MHny5Jw5c7on4bbm3ItZ//79Bw4caFh2J9TYpWD9+vXbtGlj64aq1qYLzkSc
CymrV68uVaoUGlewYEHU4fTp0zZn7eyndGb37t3/+Mc/KG6bVQ2NjEBKdo+t
amc9+A3XkJQmbWf8MHsnF3E3nwy3Xt+kSkmTYVuLNrKdyPxdF3dzsNPltRPa
ONwGZAQJB48//jhTbZhTt3btWiZq6dKl8lV4eDjcRu4Lk592q1Wr1q1bt8uX
L8s04l/IoI6aqDpDQkLOnz+vSuXPnx9/ZNy8+iyltMsaLVy4kHYhTlSLR1NE
nYjJZWxIl2hX4ilx01988cUjjzyiFpd5QJDSZ941koZNqETd/Pz8HnzwQS6g
K5AT9PTKlStYAMIuw9znZK1XrFiBFJHSsmVLKUiY1qlTJyLl/fv3S23IIRJy
4cKFkydPwpmbNWtmuDJEqtG0tIXskZP8iOtbb72FeZGG2rdv36RJE5ftehSc
Njw+8Q5giRIlGBfXciMJrcGGyHD4Njg42HbwA0sCASZbRESEEEi1X81/zA7G
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
pUphouPNd9SoW41M0b59+6y3JJhemKdaMludFEQGZPZsXZK7DJBnImXrW8EN
826F8HZABHT0aIKXVGe2DfNBIXnA30h8a6X7pgUYSalB2bH4xOfTaU5OqjMc
AjF/f38+EnfAvWkIPk9vERhVFWZWbs4655Z2KSg/lEC6BKdxN0NWys0MGBYz
qN5nDqsXPyvL4dIMIuriVW1m0KkLKmq2KQjyz7xFmFAKQldt0QR9U6fO5CsG
pX7lQUMjo+F+J9wwT4lDxeVapPLatbijx8/Lk5uSePlKjGxiu8yAaSGDTaQj
o6L/eyz04qUbdiwm9vqV6Bu6jyUiv/WHfv78K/KEyeFVE7bizrGo4yjaOHga
MoiEO5swUvCjk9ZENz/qlJY5V4/mycu+1Hssk/ppvHTvgEaycN5eiTdfFlG6
dGnipqRKJStdAtuDkKmjwSlsy3a7REYE/SPSl8PhmY6EJwvbr6oZphmvUaNG
eHg4g2XsRFKy1SywzZ71F3xc1ukGysvcd999cszbmm6tU12rC5wITP6xxx5r
1KiRYVmXVD82a5MQaLw87SL3WQhM8uTJo14jcKu1JZXN/Qw4K0Sndu7cKdvy
hrncqTCDLvuWwg677L+Gxh3ErRo9KzdOXQbD/pOX7nLadOSGDiZR3CUJ18bB
05BBJNxGP9RHORxic4vWzC4zqHT1lUpx364V6mW8/Mf9lSxZslChQnLwSaTL
2nRSPfdw1pQ14BQqmfZNmzYNGDDA+cM6KptzBV3mdMqSG6SxLWtOETMfH59R
o0YZmcGquNRuGy91jkKNV1Zt//79lStXLly4cMWKFR999NF+/fpdvXrVprwu
J9Op7C6JtGHRX8Pc2X7++efnz58fb77g3VmnXKvaZHTr168vWrSol5cXlsF9
T5xDtpoINyZr2LBh+fLlK1OmTPny5atVqyYvqHcpQi4bSsow2nrifgZUi3L7
b9WqVTjZJ598Un41SUVATtWwNu00g0lZTtsKJqWMLku5yaOhkXFIloQ7hTE+
3qm5t5bBksd1Q44K4x2KYy9uuCLh2jh4IOIzfifcA4GYhYWFufnVOY07CJdC
lZWUzsgko0hH7cbCBAUFWY9eZBzo8K0GyxgENy/9Sy+Eh4cHBgbKY0RGRspA
CmcAm48ZzHTWW0Mj45BJKY1LuByLNg6ehruThCvonW0PRFJClWUWK7MMJF20
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
Yq4aiXqbGj27c7kLAK7BIeWSFiScbEuWLBk3btzo0aMnTpy4bds2lW7jIVLw
22+/zZMnjzArJ0FylnKZbms6ICBg8uTJ+/btc1eJLPqIESPKli0bHR2t8iiC
Z+ubynDP77/4vDiVSuZ/9+7d/fv3V5OP7V+8eNGwqMTatWs3bdok1yoxNDR0
4cKFZ86csaZfvnx5xYoVu3btus0uJaMtlzmR4ODg8ePHG3fldEQKxaV1S7fX
r18/a9YswxJu2Lb6Xe5yKJNnTkqWLLl582YjKaRSRcQ2Xd5QcOKAslmXXbJC
CkuQJUsWeLhq0dZnW+UehmNtWlKktzNnznzooYdy5col68tIndWqpmUehg0b
Bv7ExMSQPm3atHr16jVq1AjN5KuoqKgyZcqAY0aSh4qLi6Pg2LFjc+TIERsb
a7gCZFsPXfbcNkZ/f/927doZFnxTpWTqqlev3rRpU9UN2+TwH8dBn/Eg1m9t
iard8PBwq0bZJtOaU1qnhscff5x54CuZAZdD1qIlVeSWxFUUkP8WKzCUTcgJ
lLETN1WsObpV+2mHDkcY5tEUG2tIquR/idYKb27OBd9wJros7o6eGRocvEkS
UpWEq7kqWrToo48+Wrly5RIlSjz44IONGzfGaziLy8J9/fXXTzzxhAqFXHpG
l6poy2xrulixYn//+987duzo8pSmpBAj1KpVS/iVNRaTMy1cDB48+Mknn5QV
t52FuNXUakmmuCThSKlSpXr37s3HOXPmQF0gPIGBgYa5WPDecuXKPWPKm2++
yUe54dW+fXuo10svvQQ1+u2336S2devW5c6dm2V95JFHwBCXmmkkLff8+fOT
0dbSpUvJfPr0aVtOErdu3Zo1a9Y9e/YkeP3dNw8kvGrVqp06dTIchmk1Ig+3
HqDf1apV27Fjh5EU7YoApPxnlf/9738bSVbmsk7DYoPOLlmzSf0MBDSQqFxa
sVXiUm7ZtK0Dr732Gs05z025nARkwoQJNWrUAHsJH7Jnz96rV6/SpUv/85//
PHz4cHR0NF/98ssvRhKflyKjRo3KnDmzZxJua86zmnXr1q1Hjx6GZWtCjV0K
VqlSpWHDhrZuqGo//fRTrAODKlKkCD7UZaIoyZAhQwoWLPjwww/jaAw3O2NO
YXKyZcs2YsSI2xyOFi0pkdvZPbYqrPXgN0RDUmo2mvDz5C1cXLv5ZLj1+iZT
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
165PCt7WpM3kK1fiDx+JqFZ/XODUbWcjY8IOnaliyUDZuPhrBw+febPqyPZd
Z27efuzS5asLQvbVaDD+Pwf/iou79knfXz/7MjHYnzkvtFT5YcNGrT1+8hwc
++3aAZFRiXx7wJDl1RuM27MPZnZh+pzQq3HXFi6+qXi/gYnURUIGpycFVTQ4
eJukOglX2ZiZN954g8nBN8nhT/xFvnz5JI9wdVSCKX3vvfeg07ItJneiJQ8O
KFu2bFwQrCkHShwnDwLwLQ5LyJjq2CuvvELohGIUKVKEIkLI58yZw+LKEFAw
oi1RsG+++QYPyEX37t0JA1X/qUQcuiLhwhlEA1Nr5rW4E6tSiU3BZFhNGIhh
ao58hdGxKMLMy5cv36pVKykODrDEKHOtWrWIzVUiNWC8H374IQhToUIFQnLi
fTnEK3nQma5duxqahCeJu+MoZcqUGT16tGEeHcmaNat6WpbZK1CgwNGjR1kp
bJbVAWBBTrEypG/fvhiXYRoUJskaAaF8W7VqVbFuEXBD9reRLl26WOtk7VjK
ffv2gRhohSqiugQJh68SgEu64DPgDwTZnitZt27d999/T6JEXqVKlVLAomAh
f/78t2xaTQu6JN0GcGj08OHD1pmEOcshEwR2DQk3TISRA29SQ8eOHWHv8gAm
2MhACEwoS23SSSQoKChjxoxcLFmypESJEqVLlya0ofOQfKaRspiMcwbAPaIh
TMAKg8HBwYa57S93ijENKwxSIUGuYfpZwUNGLTB4+vRpyYMdeba73bt309vt
27fLR0Ihq58lJ4u7fPly1ahYunRS3SCQlSKdgMjQ5qklLcV5c/9MRMzpv6Kh
3InfXrter9lE6LR8O3LcBv8PpvHtseNRYYf+quo3FtZNeo2G41et+y8XIwLW
WzPA2I8cPfv7sahKtQN27/tDKoGND/5+5ZmIiydOnpv36946TRMtd+bcUBi7
ZAg/GgnxPhJ+FoYPGw/57YC1w7bifi0C1bkXJwmH5mlw8DZJCxJuFeZNblVT
9tNPP+VavTl8yJAhBGXvvPNO7dq1mcOdO3eSWLly5caNG8uxf9y3lYTLLVoc
2cMPP4zvJmf79u2NpOME0hyR3dtvv407DgwMVG8XxCdSnLFQJwrGQgsJ//rr
r+WYMQEX5F82keiev78/Ts1IOo4iPHDy5Ml4ZMqijfjH9Hvvw/vFScLnzZsH
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
xTcV7zcwkatIyOD0pKCKBgdvk1Qn4ZIHJ4V3+PXXX1luJjZfvnzBwcE//PCD
BEFyB0GO8ahFlNPjwmeQVq1avfHGG1ww+fnz5z969CgTLjN/+PBh5hwPpe4g
r1mzBg8rnbQ+bvDKK68QLtFEkSJFyCCMa86cOeiDZEbfHnroIdG3b775BofI
Rffu3QkH1BipRPy7IuFCIUQhU3tBtNykVOopDJZPLI71la82bNjAKggzh+ii
MFKcMJn4evv27fIR9mUl4UbS4SJWk8CNiNsww8ZjFkHh5ay4kWTXyWjLMLcO
RGFokWxyVlyqRSG7du1qeDduuDuOUqZMGcJewzw6AgCqp2UZUYECBaymijn/
9NNPYlZI3759sSbDtCAmigmBCfNt1apV1Xkhw3xyRPa3kS5duljrxDuA8/v2
7XvggQdkn0REdQkSDl8FqyVdaDbgD5lXZ8JFiIm+//57EiUaKlWqlDxhBO9V
OGBFHndNq2l57bXXpNsgjMCUdSbxKXLIBAG7IOGGqYRywk1q6NixI+xdHsDE
XTIQAhPKUpt0EgkKCkKXuFiyZEmJEiVKly5NaEPnIflMI2UxGecMAHREQwok
BffAZMPc9pebwiCtFfeoUO5Rgp8CgIxacI+gUvJUqFBB2QKTQ52saa1atVq0
aCGJVgORe5Rid/ICmebNm7/++utcELwQobz66qtct2nThhaNpJsXYjXp3c9q
SS/ipDRnImJO/xUN5U789tr1es0mQqfl25HjNvh/MI1vjx2PCjv0V1W/sbBu
0ms0HL9qXeJp5xEB660ZYOxHjp79/VhUpdoBu/f9IZXAxgd/v/JMxMUTJ8/N
+3VvnaaJljtzbiiMXTKEH42EeB8JPwvDh42H/HbA2mFbcb8Wgerci5OEQ5k0
OHibpC4JN5LmoV27dvXq1evWrZvscvMf9+Tv79+yZUsjyVHinQ1zEeVU7bBh
w1gR1gIngitp3LixnAnHM+K/8N14nOLFixcsWJAIjlDrySeflF1N/uPRUCG8
nu1VkwR6b7/9Nt45MDBQvV0QF0lmhkZO9I2lFBL+9ddfy6ljgoIqVarInhLD
odv4OCPpOIrQwsmTJ+OgKYty4i5dHmDQkjxxkvB58+ZBloQwC4XmGtOTO2XM
fIMGDdAiWQXME0WSk2ksscTg2LvohlS7aNEiEEPu9RvmfbGHH36YCvmPsvGf
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
2UKXXfRVq1ZVqVJl/fr1hmvV0tPTSR8zZkzRokXT0tIMV8jmaW+TxMWLF1Pt
6NGjp0yZEhUVpdKt+WXTkosRI0Y89thjx48fd9Ysg/3iiy9Kly6tNmYVsrEE
GjY4TYfMc3h4+IcffigpkZGRLKionuGSPZQR6UKSDcvKWhMlPSYmZqcJvjpy
5IhxIeXNXlsq8eTJkyT+9ddfUjw4OHjcuHFGnpyOuEy4teHS7TVr1syePVt9
tAq/WzVUiVKbTaOtRUQHbfskzjpVZrV/4uySqpmPf/zxR6FCheDhqkVbn22V
exmOtWlJkd4q8yXrK7bL7SjUPAwfPhw7c+LECdKnT5/epEmTFi1aIC18lZiY
iJHEXhkuD+XW6LldONVDtz23jbFjx44vv/yyYbFjqpRMXd26dcVEqy166+QY
F6cLqt09e/YoifLUN2lIhGTTpk18VaxYMZmK/B4Savg4LkhcRU75b9ECQ+mE
nEAZM/GP5+qP6tB1+s5dWczHpfTOSv6XaK3w/Obc8ApnotvibseijYOvITNH
SbjMT2Bg4AMPPCAZ5s+f/49//OOnn36Sj0899RReBg/C2k2cOJGUF154oVmz
ZvIthPyJJ56gNuVGJX3Dhg116tTZsmWL4fJ3kg6NL1iwoPgjayRllS4lchUq
VGCxatasWbFixX/+85/du3f3cvicvjVo0IBgwVaznGnhYujQof/+97+ln1Y2
5cktalw83JJwZh6l++STTwi9q1WrBtUhCCpZsuTvv/8ued59910oUKlSpcqX
L48uy6JYE3fv3k1KUlISZQsXLsz/IkWKvPrqq4Y7PizmYseOHXCkbLRFokgC
0SgpiAotIt5oGXaD64iIiEyfP5fihYQzlh49ehgOd2BTQ9uFAvRbabS1fngm
/997773//Oc/hkub3NZpWHTN2SVrNqmfgaD1En1LK7ZK3OKCTds6oMyXM7Pb
tR4/fny9evWQCsIHpLFfv37I9vXXX79r167jx4/zlVhO64k+q9Hz0nlrc97F
rHfv3n369DEsBlyNXQrWqlWrefPmtm6oai9SF8CXX34ZEBBw00034YK9d14g
QhIWFkadqMwPP/xg5Fs/q5FfcDG7x1bJtR78hlBISv0W4ydM2cDFmfNPhluv
z1Mlz2TY1qKNbLuYv/viXg52ur12QhuHPEAOknDDNQnff//9jTfeKAwWZwoJ
f/311w3T98FGvv32W8PiB/Fcsoi0UrVq1c6dO6emplLPiRMnSOS/cCebqJB4
7NgxPBTzjz9SHWMgsrdpGyAoW7Ysq2+Y8jNr1ix6BaeiWpydIuo05zZspG/w
MemS9Pyzzz674447VK9ghojTRc65hnfYhEp0Pzg4+LbbbuMCugI5OXDgwMmT
J7EAxFaGuc/Jgi5cuBDhIaVRo0Ykrlu3zpkYExNToECBkJCQQ4cOIS1xcXFu
+6AazV5bjRs3JjE5Obl48eJt2rThAsJJtC7VtmrVqn79+obPb4Y7bXim62jH
3XffzTxwLXeLUA0mU4bDt9HR0baDH8w2BJhsBEFCIK2BNjqL7ZWGZKoJzFFw
rlWL1jqZRr6Salkdt10ihS4px8FAsPzWW2AorJQVxbfeKxH743Y41qYPHjyo
iijzxbfKuNGEyiND3rp1KwWxjYzOak6ZFslJcwQLskFhs0U2o0dttl83Vvmp
xDkD5GdQl2TrpOyLL77YsmVLlcFq65jVC+pCkyZNpCocZbt27f71r39FRkZK
Q9KKQPVNei7LIR3gumjRonLnNJ/6WY38gguS8LS0DPl/6HDyOZU5nbEvNjE9
/ZyiHUtOg4T/uiz6dPqZjDNnnRmg4qdOZVWSmHQy/ugJkfqkY2mxB4+pVsgs
jD0+ITUuPkUSlcFISEw9eCjZmmgr7mUs2jj4GnKWhIvbIuXaa6+V++/PmqhS
pYphLtD1118vjrJMmTJy01bthBNw4X0gSPfffz/+6Omnnx44cGDp0qUfe+yx
tWvXEjeJAz18+DARUMGCBfG5RFK33367+FxITuXKleE8BFM9evSgz+oGivTt
nnvuefvtt9VHPPLkyZOJp0qWLCm8HQd35513zp071zCPo9ANGdfUqVNppUSJ
ErfeequstWGScNkJxxu2bduW/kARq1Wr5uV8lMZFwnZ7RSazevXqPXv2tE3s
hAkTmHku+vXrV7FiRUmcNm0agsTFW2+9ZU1E9lBbWBA6q85HKWQ6YMtwSW1J
InwJabRWIjdfli5dirURdfNlHu604WL36D/6m2H+Itvjjz/+wQcf3HXXXXLz
i7GjLKgGmrt48WIpwowVKVKEIvxHj4YMGcIqoHdyOARVglVShAyrVq3q3bs3
k3PLLbegUOPHjydDUFCQqnPRokWkYBAeeeSRjz/+mBV55ZVXSPntt9+kSyg+
akiYU65cOZq79957N2zYIEUQgIiICK6JhgICAqj/uuuue+2110j58MMPK1Wq
pG6NYWFk34AV9NK0lJX5QQBY9BtvvPG+++6jDxgrODmShgBgH8jw559/YlLK
li2LjaJpOobBGTVqFGJjPS25cuVKnBTGk2tMlhhJeLvN6Fk9lA04qUcffdQ5
A6Ghodg3ZevuuOOOefPmcd26deuOHTtKWbe2Dj8r+yTUjKMUW4dJT0hI6N+/
v0SmhmddwKSr3uLBMbzh4eFcs/o0xIobpmvmes6cOYYZudAH8oiQUITEm2++
OV/7WY38Arc7D+bNtSzLAPfu9U5I0NSNbbpM6frGLFKWr9rVrP1P/LXoNGnL
X7Gk9Hl3fs1GP9ZrPm7IV0v5uGzFTsnQstOkDZuz6EHUtsM9+s6ZHLy5ZsPR
347KOrg7esL/NW49sWm7oO595hw4lMWlZ88P7/fewq++W0HBmo1/HD85S4Xp
w/Hjpz7+fEnDlhPI/3rfuYlJqbbihAaGi4E4Twtr4+CDyFkSLhlSUlJwRlOm
TGE1mb0lS5aw3FSOFytUqJBsMbFY3333nWGScFlEKDp+vGHDhjt37oRXM8Nk
njRpEk2vWbMGxySr07RpU2pjXbZt20ZZ5p+e0yIsHd5OK7/++ishAMTAOP/s
Ch5N7nGTCKGiQtYRnsAFPs4wN6OuueYaus314MGDacUwXScZKIh8fv3111wL
tSADQ+MiJCSExLCwMKQO6p6YmOh2ojQuHk7TweQjUfPnzzdct71ks7FFixYS
3xFQIxhiLSkL3YJmY0ACAwOtiURwkCjW6/nnn4eqQbSo2ctiSdlstIXBSU5O
fuedd+Cos2fPbt++PQKpdt1RAWR7zJgxhm/bDac/kmviZWbAMAeCFoieHjhw
YOPGjczt2LFjmTFoKtYYTUfrSVy+fDnWgAls1KgR5lr2Q6Kjo9FcLlAcikA4
Ickoo9gBrtEpgmtrnTQnR3pIfPDBB7EtsoGsukTlxYoVgwnTIiYa3ou7Mcz7
F3B7IeEo8vDhwzFrCxcupB50HJsjneRbbAjXK1asoHvem5YFFfmhlHR7+/bt
mC+szcMPP0y1+BEWmjx8xGEhFdOnT0c8MFMkYkbwaOrsOtYDwi/cngCHiRUj
ichZjR4xC12CqOPm3n///QEDBsgBnqFDh2Lc6KTbGcCL2WwdTtAwLbDcl5Hl
s9o6QhvJgGxzMXPmTGXrvv32WxrCdF9QF9Bc5sEwDS+WXIVCDIEghZ6T7dNP
P6VmibIxzhRB0qAHJDJkI//7WY38Au874adPZ7TsNLl+83G/Ld8Rf/RE9I4j
LzYZ88uv286cOTspeFOrzlNOncrYtTu+TtOxQdM2HU04Eb0zrpYlA2XTM87s
2BX3dO0fuvaatX7zvtSTpxeERtVrNm77jiPp6WfeHvjzgEFZwf6skLCqNYYP
H7lq/4EkOPbzDUcnJGbx7U+/XFq32diIqEOQ7Rlzw06nn1m46LziHwzO4icS
Mjg9KVZFGwdfQ46TcMmDk8I7/Pzzzyw301umTJng4OBvvvlGgiC5gyDHeBQJ
B0888YSc0T158iQTq57CkxVEZkhn5oW9gMmTJxM6cUFDpMsutGFGW3hM28Hy
Rx55BGJPc+XLl8cdCyGfO3eucDPDlD1qE9n7/PPPcY5cvPnmm0SIarxUIr5e
kXChEyKc2V8GDQusQqWewmDJRONYVvlK6LQw8xo1anTo0EGKYwdYR7hQgwYN
iM0lkQiOxMjIyNjYWEJ7mBXqDLGpXbu2YZJJYsB9LnANpVSbCZfaFon0FgqH
3cCaPfvsswjkHXfcIQeGJQ9C2KtXL8O37Yan4yjVq1cfNWqU4dBTRnTvvffG
xMSwUmIkMbDff/+9qBIYOHAgGmSYWoPeMW/YFr5lFcT2Cp566inZ3wZvvPGG
tU7mk+mNiooi0JZ9EoHqEiScZWVxJV1oNsYfMq/OhAtWr149bNgwEsWeVK1a
VZ4wgvcq3S9btuwFm1bTwvpKt7EqNLpr1y7rTMKc5ZAJgF1Dwg3TjMipNqmh
e/fusHd5ABN3yUAITChrM3oFChTgYvHixZUrVyaWJLSh85B8ppGyqIxzBjBu
REOIpdXWYZMNc9tf7hQjrlZbR4UEnoZposXoMWqxdeIODPNG5wX1jt5u3rxZ
PhIKse5yxxkQnD755JNcELwQoTz66KNcd+7cmRYN180LOSOa3/2sRn6Bk9LE
xZ/4+8hxKHfWt2fONmkzETot3/4wdm3H16bz7b79idE7j9QOHAPrJr1e83G/
r/4vFyNGr7FmgLHvjjm6d1/iCw1Hh0cdkkpg40OHLY+LT4k9kBTyc2Sj1lma
O2teGIxdMuyJSYB4795zFIYPGw/9bZu1w7bige2C1LkXJwmHemnj4GvIWRJu
uObh5ZdfbtKkSe/evYVg8x/3BPlhYg2Xo8Q7G5bjKFT+2GOPMcm4JDLA0vE7
spUtW4u7d++G2Fx33XUst7w4BRpPWERZLvBrDIH8uCGcHRIltznUrV6Cvuef
fx5PHRQUpN4uiLskJwEg2ZA9llVI+GeffSYnkInaatWqJftLtMgQ8HeG6ziK
UMQpU6bgrCmLoMoBdb0TfjlwkvCQkBAEAP5suM7kc43qyZ0yZhsRQt5k5lFP
1pTVRNkbN26sEtF327l91hq7AZOcPXv2TTfdRIX8hyzxn+BRHUjORlv09tix
Y6+//rocTqAgpkaOGUglEDYxUFf21dbe4fawGaEuwSzU1DAtA4qs9LRt27bM
HjQbclipUqVy5cr9+eefRDTo5qeffgrtZBplc8O66QEhf/zxx9FrTAGZ+RZG
3alTJ091hplghrHAksfWJUzHiBEjxETAtKkZfZcicjcNjwOxx6q/9NJLGBBY
N5WMHz+edad4zZo1MV+ktGzZ0nvTsnbqnbd0GyHhI9y+YMGCwof5L2fgX331
1YCAgN9//x2mzTzIcfShQ4fefvvtykbBwL/++mvDlBAMDtkwZYzOZvTkTLin
VXM7A1h4SDsXVlsnfhYHJ48wiLOz2jpxfHB79ez81KlTxdbJcR0M+8XrHe3K
dgqrIJo1adIk5IdoBTXBBePlccFM9ZAhQwwzSqJC5Wfz9bNXGvkFNqN38mR6
my5T6zQd+1L34KzfGDmbGdg26Jdft8kLT4Z+vbx+83Hd+8x5rffsV3vN6tw9
GBLOV3WbZW2VI+OffrnUmuGlbsGQ8P/uOQpLh5aTEyPRqVtwq86TydPtzdld
eszo0TfrQOzMeWGtO0+mRVqBfkPCoeL7YpNqB46N3HaYfmRknKWss/gb/eel
ncpwjkWRcG0cfA25RMLxaHfddVe1atVkckaPHl2+fPkKFSrIbhX0GElQJLxV
q1ZSFl8s78MREi5lDXMnnAlnORISEmAyM2bMkPSffvpJNoUWLFhAunoG6t13
34VCW3/zwjBPoX/00Ue2fs6fP5+aZXT0ChmYPn26YXLsYsWKGeZG3N13361K
IXgik5AKpMI6IdKHH3/80ci3wuAjcJJwqIvSOMN8SXvFihWfe+45VYQAHFol
12PHjhWpeP/997EJKhEqqB6vk4WTfYC4uLjk5OSNGzducQHCDD+Upo8ePZqN
tuQGDeYCAyKJhw8fhu9BPuXjgw8+KJbKl0XF7WPX48aNQ68lRfie0lPopdzc
tPL2xMREeGyNGjWYQxSQImJv5caEaovwpHTp0rIXjZZ16dLFU52G6ylLVdzW
pVtuuUW9jgkSyxJDWTdt2oR279y5k9gKSZBntAFqLo+KEzTBh+HAGAq50wpt
9t607Tw/5gtWzwUGynpjTkArmEQcGe4MnyIS+Pnnn1uf7966dSvTZd2zwpDK
7T+r0UOQKLJy5Uqqws01atQIo8Q1kYv4VucMUFtoaCjhg9XWSZ24Ucpy0a1b
N6utY0plj4uoRNZFQWzdvHnzvvzyS1XEky5IaCMfCcqYPXWPgCli+F27dn32
2WcZNULSo0cP5l/eXalul3DNiHz/+JaGH8Cx85AJZ96xK253TIL57dmm7YMW
hp67ofbt6DWde2QpkbwXRZCWlt6g5XhIONff/LDKmWHr9r/rtxi3Z++5d96+
/PpMORmudrDBjLl/tek85Yz5XCe8HdJON06mpT9Xf9TSFTutHYZ4O4s7x6Ks
ijYOvoYcJ+HiUPAmLATESU7OUz9LLMcvDfNgEpMvxx1ZRBZaSrGy+BHDJOFk
EJZumBN+7bXXiuOrXLlyQEAAzjQsLAwmQzZ6DokqWbIkDo5+4pvUaRPrmXA8
YN++feVpMvUOMSqhV/hHehgYGMj1zJkzDZOEyy1puav+8ccf46NHjhzJNTJm
mFtYxF/Uj7ANGjTo+PHjBw4cIJZE8Izz34GmcamwCpUsE3PLmoaEhBimbiID
8BMWGuZMNA0nF3mDsRCIERyJFMniqsTOnTuTWL9+/YEDByIn27Ztg0s/9thj
nm5bkE672WtLyNju3buvueaaL774AvHo2bMntkIeIpZTuyNGjDB8225kuHtN
DSGzHKTJNF8JYtVTeRx+8ODBmHEUX97aTZxbuHDh6OjopKQkdZNIjvfsMsHM
xMTEQDWrVq1aq1Ytw3z3LDrOQmMH5F00qk55PMdqEJxdIgAntKdmFgWzUK9e
PcOlyNgfbAUXw4YNQ6MJCriWnQHQv39/+C1cWvyCbTjOpmmOBW3fvr04rCpV
qogwICT04ZlnnmEIBBcE7Ewdxo2InkmQtxMICNPUdgHpeBzZBDBMIVFzi6Gz
Gr2CBQvK0nTs2BFJ4z/t8p9JIB3jg+1yzgA9sdk6GRHmVzYW5GSd1db9/PPP
hmmiMa2GGVwoW8ckIMCHDh26SF1g4HjMqVOnohEIhryZgQmkdTK/9dZbhnla
CRNKyCb7/PSHzHIIjanA5Bq+rS8afgDvZ8LTM840bj1hQeg5y7M1+u9n6o6c
MmNL2qmM/QeS1vyRtakLCa/TdJyQ8Khth60ZVq/LetVb1Pa/aweO2bM3USqZ
PT/82Xoj/9i4jzwRWw//GZZ1w3farC0tOk4SEg79Jj9tcf3OB780bj2RoCAx
KXVy8KajCanzf4mqUfd/xcMjs7Yi1VlKGwn3ZB61cbiCyHESrgIuGA4zpu7Y
Vq9evXTp0vJ2LyokRJJNYxYLxycnJAl28MiGedaUDPJuBMN8KAC3Iu9SCA8P
L1++PASYmAhChUvCqxrmeyNJL168OB6KlcWjZboglVSqVIl1NFwMWb6iYx06
dCCkQhqJs3Cj06ZNI1FeA6529WldXiuN75baNm3aRLfh6kuWLKEniBNMA2k8
evSoPo5ymXD7dpQHHnhAto6hNBDyUqVKYUygsnJulvRvvvmGawTg6aefPnLk
iLB3Aj2VKDKM1BGOkYIIIZPYIhEDG+QlSKxv9tpSz3sS0yFIRPRUIq/XIB15
lndBG/nn7SiZrud60GLRVsNUc6Wnki0oKIi5uv3225mK1q1bU+rw4cOFChWS
F7Nz8dBDD6E7ERERZNizZw9KDTu9zUS5cuXkzeGhoaHMNgv0ySefGKYCqjrl
rhk1oJJigbEV1i7xkammKrQSU/DUU0/FxsbSjZSUFFLkPCFkVVQe/4JZgIRn
mm/Blccz33vvPcNlJazDsTatzrPhcSjSu3dvwzRf0GxJJ8qANjMKIi/MFJUP
GDCAnEiCJCLMNDp8+HCslsgAMkMGeLjhOo7C3MoODy7SZvTkBbBuIRNimwH5
gQObrQsODqZpPJ08WmV4sHX4XGzdihUrEGCrrZNXDOG4L0bvVq1aJUrE2PnP
cPDmhuvdOOrNM1xLPGWYZp8aZJXbtWtHhfn6d/E08gXcUpqzrtd9Z2Scbd91
2uIlWRuw8vrB35ZHN2kb1LLT5MC2E4d8tYxskOEWnSatWrtbilszDDbflwKF
bt5h0v7YJFX5qPHr6rcY3+qlyY3bTJwxJ+vIIsy8y+szpNG9+xObd5wkp83j
4lP6DVhI5sB2Qa/0nBl7IKuSkWP/V3x2SJjh+cFMt+ZRG4crixwn4QrQYKHc
Aty39bVaOBH1Yt4dO3bIkpGofoSCa7WfjJAQYSm6Ii+ag+5KEdUx/pMuJ4ed
IKenH63G+coRTVqXfSpYFsKmNtIpGxkZSbxmnQSmSx1nIo6TPX+Ny4fbDdjR
o0fL6VnWCGFASVmOYyYQJFmUuLg4tQqKvVsTBcgVq2l9bs4TRGiz3ZYSHjin
CL8Mqlu3bnK+xZcZuOFOu9HoBQsWWPXIqqfKzjNeUSgwaNCgOnXqoCkYzM2b
N5ctWxYTTU4mU52Hj4mJIbi23j9iJmGe6mXatjqtBsHWJbnLAHnGPljfCm6Y
+y1itAGrLz9AoM5sG2aALw/4G5Yf/PLStODQoUNSA0ts/Q0d/tOcnFRnOBUq
VAgJCeEjNgruTUPwebmLp6oiYLHaTJsNtBo9Ebkz50NWyssMGBZbp95nDqsX
PyvL4dbWKRNts3UXrwv0TZSI8Yoqqc069UsNhvmOd7dmn2yMxZMB19DIKXjf
CTfMU+JQcbkWsT19+szumKPy5KYkpp5Ml01stxkwLWSwsank42n/3ROfcuKc
hKdnnD2Zdk4RsETkt/7Qz6HDyftMDq+asBV3jkXtjmrj4GuwkfBMyw8rK+BZ
skHCcwmefrfOlp6NgEhqYHHlPWDqFZeefjXPbUp+DMR8Dc7n00UIAwICCI48
lfLyW4rWRNuDkNmjwRfZli1RRgT9K1q0KAPMdut5hmxot+1X1QzTjFevXj0x
MZHBMnYiKdlqFtj0xfZGI2edXqC8TIECBeSYtzXdWqe6Vhc4EZj8PffcU7du
XcOyLtl+bNYmDNB4WHdoaKjcZyEwKVy4sHqNwKXW5imb9xlwVohObdiwQbbl
DXO5s2HrLl4XNDR8H5dq9KzcOHsZDPtPXnrLadOmczroobhbEq6Ng6/BSsJt
TxIpMP/ZIOE2Juz8qK7VppM1j1thU9fWIm7TL9gfK9R7evnPSMuUKXPrrbfK
mSj1dKezZlVhpus8g9vKNS4Vnh40WLly5ZtvvukMElU2T8tkS1TrdTEW4DLb
siaKLAUFBcnz3b5vf9xqt42XOkehxiurFhkZ+fDDD5coUaJy5cp33nlnr169
5Ie0bKbY7RpZrYEzg61LkpKenv7kk0/OmDEj03zBu7NOuVa1yeiWLVtWqlSp
wMBA1N97T5xDttoBL2I2cODAIkWK3HfffRUrVqxatSrCbO2GrSpnQ56Mnq0n
3mdAtSj3+BYtWoSTvf/+++Wkn4qAnDJsbdpp6y5e7zyp0gVnwCYwGhq5hAuS
cKfyZWY65fbSMljyuG/IUeH5Wd0VN9yRcG0cfBCZFhK+Y8eOvx04cuRIbGys
7+yE5zaQwISEBC8/SKeR23ArVFaNuxKdymHki1HkoHZjYSIiIqxHL3IPdPhS
bTJa7+WlfzmFxMTEsLCwvXv3ysfck4GLnAFsPrbOn6y3hsZlwp8ojduxaOPg
a7CS8AzzR5/dwtOq+ZPE2pCvY6t8DU9C5Tcrkl8GkiPabRus9YVFvgbn/lIO
wjkPudRQNpBfBFJDI7fhT5QmNwy4Ro7DSsKzUdyfJFYhV32xxgXhl0KVH5FT
C5F5Ked/Lh/ZayUP+qZuwuZ2Wxdfv7Z1GhpW+JP38X5P+YLQxiFvoEm4hq9B
C5WPQC+EhobGVQV/Mnr+NBY/ho2EHz16NDY29sCBA7EuyLW8GssJWWWfurWq
kd+BOGmh8gXohdDQ0Liq4E9Gz5/G4vdQJBzKHRYWlpCQEO8C16TI2yM9PZiZ
lpaWoaGRQ0CctFD5AvRCaGhoXFXwJ6PnT2PxY6Snp/N/586dQsLPnj27bds2
69EUrknxdDifIGv16tXr1q37Pw2NHALitHLlSi1UVxx6ITQ0NK4q+JPR86ex
+D3Wr1+v3lpw6NCh//73v4brqViuSXG7Da53wjVyAzp+9xHohdDQ0Liq4E9G
z5/G4sew7YTL5nZUVJT8ejv/ufZypihDnwnXyGnok2w+Ar0QGhoaVxX8yej5
01j8HupMuGx3Hz58WDbD+c+14fm1Nhn68VuNnIYWKh+BXggNDY2rCv5k9Pxp
LH4Mt68oJHTatm3bkSNH+O89jNKrrJHj0ELlI9ALoaGhcVXBn4yeP43Fj+Ek
4ZISHx+/bt06/hte3+7um6ucNz+HoX9JKpfgm0J1FSJXFyLvfwYiDxSWJnL7
J0Hz3vLo3+zQuHqQU0bv7Fn09AprTR54Um0cLh+efqwHV7J79+4LniZyu8p8
tLoJKvEFvko35Bj8xfRHy9UVhCfTIb+6aLh4iJPtuE30RFqs6TqkcgsvNlym
Ots1yxrlrJZdZpcuH9kYjrXIGRNqFLkxRZ76cJmtXLwy5kGQoqFxOfCnLaDL
H4s2DnmA3P7FzCsypXv37t2/f7/31rPdMXWnIDo6Ons1aHiHd6Fyaq4zXSVe
Eiu7CtXfO/zDH8mypqambt269dSpU7naVkRExMyZM7E/xuWJk9uykpiQkLBt
27a8lFXv5tSt3l18ooaGTyGnjF545MG1f+w5cUIetcuJnl068sCAa+Nw+chB
Ei5VnTx5csKECVSodheXLl3666+/Gq6oikS3e5XWRLUL5Cmn7Sv1UVqsW7du
69atDQsH49vFixePHTt29OjRU6ZMiYqKshVUH6XIiBEjHnvssePHjzu7LYP9
4osvSpcurTZmnV3SyDacpkPmOTw8/MMPP5SUyMhIFhRCIh9l5rdv375s2TLr
I8aCPXv2WGuTlYKPIaXyFqDg4OBx48YZV5/6e4dbGy5TtGbNmtmzZ6uPVuH3
ruNS26pVq6pUqbJ+/XqpwVpEdNC2JeLdRHjqkqqZj3/88UehQoXg4apFW5/d
2pMLNi0p0ttZs2bdcMMNJUqUEFlipM5qVdMyD8OHD8fOnDhxgvTp06c3adKk
RYsWyDBfJSYmVq9eHXtluOxYeno6BceMGVO0aNG0tDTjfCG3zbaXntvG2LFj
x5dfftmw2DFVyq05tU2O4dC7S0303j3n7LkdsoZGjuAi9hXP/bdogaGkVU6g
jJn4x3P1R3XoOn3nrqwDvS6ld1byv0Rrhec354ZXuNMOj7+laBuLNg6+hswc
JeGZpgOtUKFCzZo1JeXo0aPXXnvt4MGDDdOJqIKygjbOY51DZ4jk6VCBddFF
EmrVqtW8eXPD5RzlK3pVrFgxOlaxYsV//vOf3bt3d3vvQ1ImTpzYoEGDlJQU
4/zdVDnTwsXQoUP//e9/O0eRT8XAp+CWhDPz0LZPPvmE0LtatWpQHYKgkiVL
/v7775Ln3XffhQKVKlWqfPnysG4RjC+//DIgIOCmm25CwQ3XSsmCtmvX7vrr
r9+0aRPXGzZsuPnmmyMiIjL1uRQLvJDw2rVr9+jRw3DYQ6uyqJl0Tin0u06d
Olu2bDFcUa1ATMR77733n//8x3Bpk9s6DYdlsHbJmk3qZyBovUTfVkPkXWEv
2LStA0888YQcxnNmditX48ePr1evHraX8KFIkSL9+vVDthHLXbt2HT9+nK9+
+uknw8XnpcjIkSMLFizonYTbmvMu0r179+7Tp49hsZ9q7FJQmVNrN1S1Nr27
yMTdu3e7nUnDYdK9y4CGRs7iYnaPrTJrPfgNoZCU+i3GT5iygYsz558Mt16f
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
6dKl1baqQjZmQCPH4RQqWanw8PAPP/xQUiIjIxEJCIl8lLXbvn37smXLRJKt
q7lnzx6pTSWuWrXqjz/+UBmCg4PHjRtn5MmJhXwEt9otU7RmzZrZs2erj1b1
cavFKlFqY/6rVKmyfv16qcFaRLTY7T6JM2JS2u22S6pmPrLchQoVgoerFm19
dmudLti0pEhvZ82adcMNN5QoUUJkiZE6q1VNyzwMHz4cS3XixAnSp0+f3qRJ
kxYtWiDDfJWYmFi9enUsnuGKJdPT0yk4ZsyYokWLpqWlGR4cn7WHbntuG2PH
jh2tFthaSqaubt26rVu3Vt2wTY7h0DtrIn1WLVJ87dq1LL2SKKsdtnVV2rLJ
idvBamjkIC5IXEVI+W/RAkPphJxAGTPxj+fqj+rQdfrOXfGGeTTFxi9clfwv
0Vrh+c25YSbORLfF3Y5FGwdfQ2aOknA1Uf/+97/79OljmI7Dew1vvPFG3759
DQ90XQlMhQoVihUrVrNmzYoVK/7zn//s3r2727OXkjJx4sQGDRqkpKQY5++F
ypkWLoYOHUoPnVGYJ6emkZdwS8JZOzTuk08+IfSuVq0aVAcNLVmy5O+//y55
3n33XShQqVKlypcvD+sWff/yyy8DAgJuuukmtF7qiYuLe/zxx+808fTTT/OR
9I0bN958880RERGZ+lyKBV5IeO3atXv06GE43IFV3dRMOqcUy1mnTp0tW7YY
rrhYIObivffe+89//mO49NFtnYZFW51dsmaT+hkIdkPid6tR8q7yF2za1oEn
nniC5tS5KWtmt3I1fvz4evXqYXsJH4oUKdKvXz9k+/rrr9+1a9fx48f56qef
fjJcfF6KjBw5smDBgt5JuK057yLdu3dvsdWZrk0MNXYpWKtWrebNm9u6oaq1
6Z0zEedCyq+//lq2bNm77rqrePHiDz300L59+0gcPHiwssNusWHDBiUnWjE1
8gAXs3tsVTvrwW8oiaTUbzF+wpQNXJw5/2S49fo8VfJMhm0t2si2i/m7L+7l
YKfbaye0ccgD5BIJv/fee9955x3D4u9YtRMnTihSzbVTNkjfsWPHoUOHbN0D
rBFrJ/XMmjXrH//4B+yLmcdVealTvjp16hTV8q3qz2effXbHHXeohYPXISHZ
GL5GbsAmVKL7wcHBt912GxfQFcjJgQMHTp48iQUgOjPMfU5EYuHChampqaQ0
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
VhFKRi+UyhLCSAMtW7ascPcssjw74ampqenp6ccVpZjQ7hQkaEMoinJWEUpG
L5TKEsJkZGRs3rzZ/pvRpyvCaWjZVFcURVEURVEUpSBkZ2dv2bIlswgiHCVP
8JOKoiiKoiiKohQMhLSKcEVRFEVRFEUpSVSE2zlx4oQvd/u/HF+9QuX48Z9v
cEVRFEVRFCWECZAIR2Rm5CES1P614NkriNwtLuRwjtc8yI+3GhfL83OuvjIm
53zS0tJMcPm1bqklvvpKyJGo1/gLUiFFCasoiqIoiqKUAAES4fYfPHX8+Gm+
+tMg6hf/BZSOxptc+Ppqd7E7UpDExER3WuQhISFBXuSY6Xmp46+//nrgwAG7
DnckMW7cuIiICHQ4/il+SkrKrl275I2dEurgwYN89VMWQrkLzlf58Wv/9VCU
sIqiKIqiKEoJUOwiXDZ+f/nll6ioqKlTp86aNYvPmTNnTp8+nYuffvpp+/bt
fraRDWhUkli+fDmKlwv/kvWkRx5Llk56dqrlUzSzOJKo7FHzVfaljcKXjesR
I0b06dPHXhwRrosWLRo2bFhYWNikSZP4SlnCw8MHDx5MvREDGZOkT+YtPdDb
AwcOPHr0qCwiFi5c+Nlnn3Xp0mXIkCEkvX79+q+//vqLL77Yu3ev13qQUBR8
27Zt9oLjzteVK1dKur72ugsdVlEURVEURSkxAiTCN2zYgPxesmTJqFGjPv/8
827duk2bNg05Onv27D179uS7uS0KHPn91Vdf9evX78iRI36CiPLEMymOHz8e
/blgwQJ0MmpZFOnatWuRx5MnT05KStq/fz+imuyRsQkTJuBidPiBAwdIC/Fs
3rgo9ZOQkEAZcf/uu+8I3rdvX/61YsWKsWPHEq1kICYmBqFOBvgaHR1Ntpct
W0ZYIid1liT4/+ijj6jqHTt2oOe7du1KtL5EONHi//vvvzcFlwrZunVrr169
qEA/IrzQYRVFURRFUZQSI6DHUZB/AwcORP6hipGsEipfESgyPjk5uXfv3ps3
b547d+7QoUPtzzk6EJG5cuVKpD4Sl7QGDx6MWh4yZMjSpUtxHzduXGJiYocO
HeLi4mJjYydNmsS/WBHs3bsXpUrMpMjnsWPH+vfvLyI8w4ZUzsaNGyMiIoh/
xIgRfN25cydfJenFixcPGjQIDU8+UfibNm3iK/JeqkV+CAlN3rFjR0JxjSbv
3LmzLxEu4A1Jz1JCsicV0qdPH7KR730Bd9hDhw4VMKyiKIqiKIpSAgRChIuw
FAUeExNjec6BI1knT56crwiUTWkuENLIbwk7cuTIqVOncu1VspqDK1FRUVyg
9rnmYu3atWPGjDl8+DBJo40jIyPJDH6Q4hR5wIABfE1PTzc73qmpqTgixdHG
aOYJEyaQYfynpKTINvi2bdv27ds3bNgwEeGocTnmYVJcs2YNoXbt2jV69GjZ
JJe8EbBLly4zZsyQemNdgAhHpfsq0cm87X1TcHuF5Kui5fC5qXCioiHmzJmj
ClxRFEVRFCVICJAI57+TJk2SAxuiCdPS0vr27Sti1c9OeCHCitBFNo8fP54g
06ZNQwlzMWXKFCQ0F6jlH374Yc+ePeHh4cRz6NChI0eOEGe/fv0WLFgg0pQi
INf5r+yNI8UPe0B+84mIFQHMNVHxX1S9pILj9OnT5RrRGx0djQgfPnw4Ecou
9K+//tqtW7cvv/wyNjaWPBw8eJDSderUiaojcvHmtR6k4D/++OOqVauQ4iwo
SKIgJ0nkXS58Dh06dPXq1TNnzhQ1bp3OU7GKoiiKoihK4AjEmXD+tXDhwgED
Boi4lZeQICATEhK+/fZbRKmfI82FCGuOo6C6uUBjh3sYMmTI/v37cZkzZw5S
lkgmTpwYERFBcARtZGQkfrZv357tgZiHDRv2zTffoNjlzSdyMpzg6OquXbuK
f1Q0ar9///5hYWFyvho/ycnJhOW/OKakpOzYsYP4zVkUrgneq1cvhPesWbNY
I3z66ac9e/bs3r375s2b/W+Gk+d9+/Yh4AcPHmwqxE9riuxHeKPzSYuydO7c
mdRZjLBS4LOAT8UqiqIoiqIoASUQIhyZFxcX53j7hwjs+Pj4nTt3+nrKsihh
0ajk5KRH93JNDHzKxi8X6enpXPApucUFVX/kyBFJBRfc5dgJn44zG8c8JHsg
BoIkJiampqaa1/05UjQ5Ebgm+FEPkoFjeeR7OEQKvnHjRiIvyDa4eSp29uzZ
c+fOXbRo0fz58+Vz3rx5MTExu3fvLvgrHxVFURRFUZQAEaAHMy3PyQdfr6r2
LwILF9a8z0REtexRi2fzL/sFsclziyY4icr7TBzFkZccyoa5xCn75PY1gj1F
k4qJOSsP845E89VPPZjIT+tl6VKBvtBtcEVRFEVRlGAgcL+YWegfbSxKWLvn
Ino43bCBE7enVfCTp/5cqQNV4IqiKIqiKMFAgES4oiiKoiiKoii+UBGuKIqi
KIqiKCVM0UV4enq6Oe2sKIqiKIqiKEq+ZGdnb926NbOwInzJkiWpqany0g9F
URRFURRFUQpCRkZGfHx84UQ4Ah4Rvnjx4v8qiqIoiqIoilJgUNFLly6V31gs
nA7PUhRFURRFURTl9CmcAlcURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEURVEU
RVEURVEURVEUpej8P1GKWNI=
    "], {{0, 304.}, {491.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{983., 608.},
  PlotRange->{{0, 491.5}, {0, 304.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.844767010903596*^9},
 CellTags->"DefaultContent",
 CellLabel->"Out[18]=",
 CellID->248563641,ExpressionUUID->"844f303d-443d-4999-8ac2-dfc524a93f4e"]
}, Open  ]],

Cell["Get the id for this player:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.835431568940752*^9, 3.835431573035095*^9}},
 CellID->38203753,ExpressionUUID->"a1c72a52-010f-4ab8-bda7-bc3023a9424e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"albertid", "=", 
  RowBox[{"searchresults", "[", 
   RowBox[{"1", ",", "\"\<ID\>\""}], "]"}]}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.835431466657118*^9, 3.835431486836048*^9}},
 CellLabel->"In[19]:=",
 CellID->2092034154,ExpressionUUID->"225c4be2-6a70-44b4-92d1-5d463a1a8514"],

Cell[BoxData["\<\"pujolal01\"\>"], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.835431482763853*^9, 3.835431487317108*^9}, 
   3.835436870287154*^9, 3.844767027931024*^9},
 CellLabel->"Out[19]=",
 CellID->94007323,ExpressionUUID->"f77abfe7-5ed6-4b04-a8ab-49307dfbbda5"]
}, Open  ]],

Cell["Find data on all of Albert Pujols' home runs:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8354315078506393`*^9, 3.835431521758314*^9}, {
   3.835431559917403*^9, 3.835431566981884*^9}, 3.835436874222101*^9},
 CellID->101666158,ExpressionUUID->"bad5e845-eba4-4283-8d83-b45ad5d6ff01"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Testing`BaseballReferenceData`PlayerHomers", "[", "albertid", 
  "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.8354314974810133`*^9, 3.835431502724015*^9}, {
  3.83543687924293*^9, 3.8354368794426613`*^9}, {3.8447670294042797`*^9, 
  3.8447670302143373`*^9}},
 CellLabel->"In[20]:=",
 CellID->111636474,ExpressionUUID->"989a997e-7b20-4c87-82ea-feb6c51d011f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQd8FsXTx+1S/xQb2BVBOggoSLEiXZReBKR3QYpIByH0KtJD74QSeu9F
lBp6T0IXCIFEitR7v7kx+x73FFKe58kRbz6Qzz777O3Ozs7Mb2Zv75536rYs
3/CpJ554ok0S/pSv8/PnrVvX6VAhNR8qtWjTpFGLBvVLtmjboFGD1gXqPk1l
R9r+yv+osuYhevDggWPlvXv37tr0XyVZ/Ts22WRJcnRZTp2YTTYlMjLqeURE
BF5ayhSOHDlywqb/Kh09epS/f9lkk/XozJkz/FWeKjIy0qlDs8mmxERG3Q4P
Dwegd+3adf36dakhjhWPfcGm/x6x7qdOnVJe0SabLEXAtFJOXBaOC/eFE1MN
bOC2KbGSgPXhw4cpBAcHq3hVIBvvfd6m/x6x7qGhofzF9d2/f/+BTTZZiW7d
uqUgG5eF48J94cRMwG2TTYmJrl27dlinK1euSI0N2TYJKcjW7ITFJuvRP//8
Y4JsKePKxKfh3BKOO5ts8jCh8IcOHdq7d69RsfHMNmTbJGRDtk1WJkfINmop
bg3nhoujWQIxaJNNnqR79+6dO3fu4MGDp06dunnzplTakG2TIhuybbIyuYFs
HBpuDbxGjXF0CcejTTZ5mO7evXv27NkDBw6g8ALceGkbsm06b0O2TdYmE2Sj
q5oO1riy/fv349ZssLYpkZHywwq4UfsjR478/fffUg9knzx50j4x/t8k+8S4
TVYmvJNSTlwWjgv3hRPDlanHVO1Q06bERybg3rdv340bN6QGozh8+DB+O9Sm
/x6x7sePH+cv6cytW7f+sckmK1FERMT58+fFU+GycFznzp2zwdqm/wgpDb93
7979+/elTMFOsW1KgNdk2GSTW7p48SJ4rfYD8VRqG9wGa5v+O2Rru0022fSY
ku2+bLLJ1+9HsMkmm2yKGSW0d7TJJptssskmm2yyySabbLLJJptssskmm2yy
ySabbLLJJptssskmm2yyySabbLLJJptssskmm2yyySabbIov3bt3765NNtlk
k0022eQrUhAsTynKq4G0R71VALzeunXrli1btiYcbd68OQFHN5HNjCuyFDO+
pMQ08QScizXFaCmuLMWMTd4jAHfbtm3q5aKa/ta+vToZK50SWM/lly5dunr1
arjPiUEvX76MovI3QRiwmXnsmPElJaaJJ+BcrClGS3FlKWZs8jaxxOejfw1W
cmo+yg86yNvy3STaQDagTw/Xr1//2+fEoAxNzJBQDNjMPHbM+JIS08QTcC7W
FKOluLIUMzZ5m1hi0mT1MnwK+/fvl9+4oeD+t2IFssF9+on0OTEoQ6OoCcWA
zcxjx4wvKTFNPAHnYk0xWoorSzFjk7eJJb548SLQrFLs4OBgQeSTJ0+6T7Rt
yLaZebyY8SUlponbkG0iS3FlKWZs8jYpyFYp9o0bN+Rt+RQOHDjgJtG2Idtm
5vFixpeUmCZuQ7aJLMWVpZixydtkhOwLFy6cOnXKCMp8pNJVom1Dts3M48WM
LykxTdyGbBNZiitLMWOTt0lBNvi7e/duMPrSpUsXdaLARyqNT4HZkG0z8/gy
40tKTBO3IdtEluLKUszY5G1SkH3nzp1zOp01kNT8888/sYLsCAeKD4dcfu3a
Naecu1fU+A8dc3LKjJdGf+S8LCIZGcINM75cIN/TIycef7tIWPWO9LSlx3Zo
j49lJPq/evVqbLlS11phdZxyIvOKIW/XdPIwuzbFj4wb47Elp5Atp9DVswZS
cMPAI7Xixo0b9+/fpx9Hzl0pqtjazZs3uYrOfWA7TplhdNPQjrOIFUn0QidM
zVUk44oZIZEGInXfQzxJ5M8obphRuhFDHxJzP2MRcj9xmXvcXKIsIiuIhL3k
VMV4jR8d5xJbS48zJ67E6PGxlI7x9/bt2w8ePIgtV5GWcT6RzjRNbB/XLbbp
PiyB7uj0eNldoicjZD9wQbGCbFED1EP+uldavrqnk9M2VJLg7927t3bt2keP
Hr1165axmStFZUQgngsvXLjAV/Ap8OQhgTknR2YYkbKYhhC2c+XKlTgPIebG
ciBYpiYuxem83EsGG2TF6UHuhnhcMjIKi/XXX39RdsOMeEi57SLo46pPREeb
eAY8Pib3E4eoFCOK1RIImrCIrODly5fRAW84VVMk4GoTKeaWHmdyI0aG8yxw
sxz4DXpGe/fs2TN//nxXM3KT+8vB3fPnz9MPZce43eP0SE0T80FPKJw+fXr2
7Nlnz56lzDSpd9qnqFmvXr0GDRrEhXaubR3yYJYtCNu0adN33303a9asOXLk
4O/777+fOXPm33//nXWXN/PI38hoDFqxYsXixYvlbQCRupqpNvzF+dPgiSee
oAeGe6QboQHNsLUPP/wwTZo0r7/++g8//HDu3Dnp3zi6EGWl2JHROCttlKE5
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
mCfjo1KLflTkzTffZF00PaHgI7BO44kTJwK4+IGPPvqoRYsWLFn27Nnl3RfU
SBqunirl75QpU7gKh4/b4VtGIXtiiYEJMRkTZD+Qw+237jT+cS4APWr87916
r+zstxyOSApByWWrok7F37j5UINOPZZx4f6D/8feeYBXUWVx3LZrX5YVV3Tt
qKuyICI2BEFFmohAkF6kSS8RQXpN6CFIh9A7oXdCjRRBShIjPZCglAgJgWAI
hoTM/jLHdx1eCS/Jey8vcc6X7303d27533b+59y5MxNb+uNxeM1672kxP1+q
6hPUsmPw5Bnfd+q+MmhWxvHmGfP2ESmUfeJUHOl/PJTh2eHIv1thXK+B6wMn
7KjdeHbUqbjzvyZWrvVn9ulzMtw9/PFS5QLHTNpBeHjgtrKVJgwbvW3k2NBr
NsfPpPmo2YIFC+LUNGzYEHamK4zeDQpfNpaN9g/cQcqKuoiP6cz0s8tHSnvL
fiy8Q/kyi1q3bk24TZs25cuXx3zCL9P0p4+ZWkLZjLJsAmuWg09ydpoJQJip
woItVarU8uXLNefuZauGnDhx4vnnn6dbGjVqxDRQB8XFr4dDv/jiiyeeeOLx
xx+PiIiQtsjzX5988gn1Yhl+8803t+0QJ7uIoWFx8S+WA0apZrlxLzyrjp9R
oxAu4uPjgzGDjQEDwuPFixfv2rUrDZETHaor7HY+ZcoBNoiYpQp1Eg4PDycB
ARx2yVuoUCG5saXpO2asGgKAZ92xKtu3b4+/DwZGBORYeowgqx4YMBHOPkXh
mDPlCMjBAzl+Rn9KP6AfYHPNpOysbIxjXzFjMbP9/f0TExPt5nWJ2J2oHqs9
b4FhHHv27AmR4Rlh5Xbs2BH1ouUqZVM1i06ek5KrsAB+rkC6cOHC4MGDcatJ
jMJHRdSvX5/luWrVKjmmojZXrZoG20ZFRc2aNQt9RTz/dunSBcdcHYxBb5MS
k9640Y1ljg8SGBiIRp0yZUrNmjVR8vIYDoKukEddjLvrpKccDDM6k/KpRQwM
kIuX7ajhEPSCJeH9/DcGjA09EH4m4/Z06s35wWEx+nvPrBOEZZyFi4tPmrf4
4JXEZFXI+djECUG7+/pvgNklI7S+dNWPcvXylWTSk0sKPBB+dmjA1oFDN20J
jZLt8XPn/8wuj4NhSxCz94DoAW3j5mP9/DZ+O2mn3AG3Nj/0WmJjY6FpbKQm
TZowLprhUSAcLjnkL3115coVPz+/bt260UsQIr9HjhzRckDZ+I+ycS0sjAEw
dOhQBY/Rr127NqadcLHV1MJYZWrJGEEKhOUJZU3X/3AoeWmXjL4z97KNfQLf
kRcrDmISj1XmGORFw+FEHHmZihK/ceNGLNWvdKFblDeaJbHbRTi/e/bsMSZj
XQwZMkTOYwBSrCaca6a9vL3k/PnzTHt5oBL9wJrCsoUuxVnOpPMpVmrHKsBI
ZkXQ89C03A7ANlAeNK69uuPAspIXJjA60PS3337boEED6F74V/onJCSEhc+g
yI0M/O7GjRsTo7a2ZATVqxUCAgLkGQHzxHg27mWLuI+knAHgGYrMi2A8Jl4F
xq6ocUHzyEkh20tZLUpz0PDbFudMhVlCZZs2G/PQti22KtFjp0yzJM6jyhJ+
u6gc9YltvGsJJfMuuml4bayT4mG+w7TAmxYOEjEesLeKdPTvX0fc9FkQOb/n
1l61C8Bjtec5MKn6W0CVeIP9kHrrmyFvWl42rlme8FUaT/Wk3XcS2jZNjpA5
aq/xbagi+FxyVLVAgQLyCK0xi91K5SSVUaRMlctRw9MNLyxV96zlnSqOEqT/
8cJSYyHphreeSi+lq1NkVukzLunn1a1eWGrMruln2g1NviW9ffNDPzOfZhHj
JasYGc3sTT9Hk9lYvnqmz3g19dYXlho3sVVi4zTTLO/DTHPi6zmOBzfdtnYF
wLZkq4mavYMujrrI9kVwquHqaiaLzlFXZNL5Mu6pljeIplsedlNIjHnVOU/8
YtncNp4dNRaYZnlRcJpBbDHbbXX+E/OzIC4RE4wj8SowjkSWeWRkpDq5lHOT
Jk803EnJxbZ4Zzd6FSqvApMlkVUWFxc3a9YseeXLX9Z3dl5MynaJmGAciVeB
8aTkp4ablG0lXoXKq8CY4m4xKdslYoJxJF4FJnMxbhLmXPJQw28rJmVbiVeh
8iow2RC5m2D6105KDinbA08ZOxKqzl0ARjHBOBKvAuNJyU8Nz8W2eGc3ehUq
rwJjirslKSkpJ5QtLxrKFaHq3AVgFBOMI/EqMJ6U/NTwXGyLd3ajV6HyKjCm
uFVu3Lhx5cqV7FE2uXbs2LF79+7vc0moOjQ0NBcBGMUE40i8CownJT81PBfb
4p3d6FWovAqMKW6VXbt2yXtmTC87h2KCcSReBcaTkp8abnrZVuJVqLwKjClu
lZx42anmvWyDmGAciVeB8aTkp4ab97KtxKtQeRUYU9wtObyXnWqeGNfFBONI
vAqMJyU/NTwX2+Kd3ehVqLwKjCnuFvMhL5eICcaReBUYT0p+arhJ2VbiVai8
Cowp7haTsl0iJhhH4lVgPCn5qeEmZVuJV6HyKjCmuFtMynaJmGAciVeB8aTk
p4ablG0lXoXKq8CY4m4xKdslYoJxJJmAUd9q9KR4w/dQbOXmzVzoCufF+UFM
txEV78KqbUvzcO9lD5VVnziSrLYlF5eY3bG+qYv7Kv2Li5soW76m5PkveXms
9jwHRmCkevzFgHbBqK9dW4UdlWBXGTpqjnzwy26ZOW+7+q6QsQpVo/HUrlcZ
TjmUnA+ia6vOdckGKuPccK1CcMfoWE1mt7Kwh9VjXhfTy3aJmGAcSSZgkpKS
rl+/7trqbrv2RRFlT0U4YwYYvwPozChI8uNRF7v1WdPh6+XRpy9lG577xMlB
FNPF6mOpcinbjyDdlo80G37xgGQVlYq/evWq4r50y2curdgwqxTm4SVmFDXi
KkBkQEDAxIkTNY9/d/svIi6nbBmmmJiYdu3abdu2TXPbwDlaNZ6pPc+BuXbt
WkhISOfOnbnkMSS2YKTekydPVqpU6aGHHipcuLCPj8+RI0c0y1c5RNS3pxMT
E+fNm3fp0iUrh9puc+SXeDrcakpL4MKFC6+99pqvr69mUJhplm+apxo+tmuk
Hkkpv+vWratdu3aZMmX8/PxYHZL42LFj9evXL1++/LRp01RK21Ewfvza8q3q
jH9T0242b7+4UasFi5aGx8UnScwfCf4A/8cHtQ1f0M4Ipxk+aS2ft/4jPu2W
7VApKs3me9nGGCvRs6SnOfhetu0gfvbZZ6dPn16wYEGRIkWKFy9OJ/NbrFgx
/l20aFFycnLJkiWzN/GMVatGVatWbezYsZquoPilitKlS6ekpFia9udXmxVg
4yiTxnbENcv3slOd+OZyVlEhCxcupFsKFiz47LPP9u3bV31gvUePHi1atFA9
c/z48bfffpsZpTltuTm/xFTDrT45nWr4NLakAcayZcsAKZe+++47NJj6orda
EY0bN37llVeK6cJY9+rVi3jwV6lSRbMsIlW4EbBaXIRXrlx5+PDh1Fs/4Z15
Fme6Jb+KaylbGZYff/zxHXfcMWLECEnpDuS2ADxZex4CI4GhQ4c++OCDIBk3
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
Eq9C5VVgTHG3mJTtEjHBOJJMwGT1xc4uF89/tsYoN2/mcvOdF+cHMd1GVLw7
qs5emTkXu6hs8VjFWPWJI8n5l7xs681SgSI3dXEmpd1GGb+qo745ogpUHx41
JaviDsqWLzGlGz5o6w5xBMAztec5MPLpHEGS658VMy7YnC9eu01L1b8flEnP
57wT7NarlJJXGU45FA8MYpaq1nL7o43ZGFzjPHTtGsxPM82U24rLKdtjS8lJ
Q9cEk4tI7IJRkpSUdP369RyW70zTHKURLZq9zrGbyxiZqXuY8Xs86mK3Pms6
fL08+vSlbMPwjDg5iPLZU/lVAbmUbZM1c9dAy6V+u60No1k+96nCErh69aoy
6tL/+IKqtTObVUK3BWNrrmfyr60InkmTJo0YMUJzooetCpT0goFL69evj4qK
Irx27VpfX18pv0OHDtu2bdOy+M1TUzRXU7YkW7FiRZUqVT766CMGPec62ZE4
IibP1J6HwAiSdevW1a5du0yZMn5+fgyrxzalrcDICj158mSlSpUeeuihwoUL
+/j4HDlyRNO/g6zWvu33stXnfY2F2zaNTpbIyZMnV65cuUKFCnPnztVuncAS
vnDhwmuvvSY6RCnPNMunulNv/Ui3AqC2+DSbLpXEMTEx165dk+ZYTQnLt6oz
KDs17Wbz9osbtVqwaGl4XHySxPyR4A+Qf3xQ2/AF7Yxw2s1bvmctu+sZ8Wm3
DKgUlWbzvWxjjJXIJ7aNX/R29L1s20H87LPPTp8+vWDBgiJFihQvXpyO5bdY
sWL8u2jRouTk5JIlS1KClnUV7WhlWQ1fuuFbzOn6x5qN+y3plm80p1o+Bq3Z
fAUmSx+FMaJSFVWrVm3s2LGarjb5peGlS5dOSUmRqwsXLgRwwYIFn3322b59
+6qvfvfo0aNFixaqZ44fP/72228fO3ZMc9oasQXTunXrtm3bytUff/zxjTfe
2L17t/zbvXt3uaR6Q/WPKg3M/FatWrVUqVLG7rVNLFK3bl1mgtGCateuXYkS
JYi5ePHiHXfc0alTJyJ79+59//33SxV33nnn6NGjNcvoWBVuXIkmp1uJCylb
hmzatGmMUatWrbp27frcc8+JNnZHt1sB8HDteQWMIEGXgoSlOnjw4LvvvhsT
1zNINBt9IvezUEovv/zyvHnzFi9ejFoYOHBgNkq22zR0BZH8W6BAgf79+/Mv
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
wbVq1Zo4cSLutjoaytrE8yW+RYsWtFEdopOr48eP37Nnj7HqqKgo7HDZ6meS
SHvxWViPsq4pHPsqPj5emq8Klz0BltLo0aOztNXw1xF3v7DUfR2eic3ggdrz
HJjcEke7MUbJ3VWpakfJYPzbvZTVorSsjIIzlWQJiW3abPSwMUcuDuJtuzHb
9UrG7du34/rJI/bZdmxvK7bdlYm5ktUWuXu9O4/H+Ipalxduiog7PguS6vjV
di4URwA8U3veAiPHfozisXOYjoyZVMurI60e15IY2xeWStiYXsRu0+QImVGM
/W/bfPxiYnDMCxQoIE8WG7PYVuqoXs2wUuyNwi2vA5X3kVrarqVZXliqHpeW
t5saO02lSf/jkdh0dYrMKr28ffSmzQtLjdkzMBi+Jma5essLUbM6iHZ7LF1/
XtvRcGQutlXbDp/A0CyDorwz4ytwxSsXkfQ4fVWqVLnvvvtat26tZXHHyW6H
KBgiAsbYCUobWNVlvJSNe1WZKB9jpNW/qitkralOM46p7dq0Ba/dukJVetV2
dTXd8FJZR4WrcfQSj8MLxfz4pkvEBONIvAqMIxGVEhkZKccFNVcY/3mi4U5K
LrbFHVXL4F69enXUqFErV67UDFv6uYgq2+JVYExxt5iU7RIxwTgSrwLjSclP
Dc9nlJ1z8SpUXgXGFHeLSdkuEROMI/EqMJmLa7fj8lDDbyv5krLVfmw2dlS8
anC9Cowp7pYcUrbH3shhK1SduwCMYoJxJF4FxpOSnxqei23xzm70KlReBcYU
d0tSUlJOKFtelZMrQtW5C8AoJhhH4lVgPCn5qeG52Bbv7EavQuVVYExxq9y4
cePKlSvZo2xy7dixY/fu3d/nklB1aGhoLgIwignGkXgVGE9Kfmp4LrbFO7vR
q1B5FRhT3Cq7du0KCwuDjk0vO4dignEkXgXGk5KfGm562VbiVai8CowpbpWc
eNmp5r1sg5hgHIlXgfGk5KeGm/eyrcSrUHkVGFPcLTm8l51qnhjXxQTjSLwK
jCclPzU8F9vind3oVai8Cowp7hbzIS+XiAnGkXgVGE9Kfmq4SdlW4lWovAqM
Ke4Wk7JdIiYYR+JVYDwp+anhJmVbiVeh8iowprhbTMp2iZhgHIlXgfGk5KeG
m5RtJV6FyqvAmOJuMSnbJWKCcSS2YFzygTP14UKXiDs+2pKlUbhp+DyHF0om
bbF6O3e6jah4F1ZtW5qHe88RqtsCs+qWTJK5BMxt352e1Ze/OVmsKe4Tl38v
O+1Wcd8Xo+xygcdqz1tgFJ5Uz35TzBEYN4n0s7TU8IGq2wxBzjvEbr1eZTjl
UOy2xWg1udaCum3VuS7ZQ2U81G3Lla61aoxyUxdnyjGaWLc9gp6NT22aknMx
vWyXiAnGkdiCsQKWZvPdxkxKU/Pwq6++Wr16tWb4ZmJOKEMqzV4JjnI5OQqS
+3jUxW591nT4enn06UvZRuI+yaQtSUlJ169fl7DocPlVAbmUbd1+W2tBc45f
XCt2UVlhEIQqjQJ89epVq0lrtznOzwFHXZR666c87b4Oa/369dHR0U5WpFmG
OPNiTXGruIqyZRBXrlxZp06dBg0a8Nu0adN27dpt3LhRy8GCzUSMADxfe14B
o+TatWshISGdO3fmkpbFrwO7CozMotatW7dt21au/vjjj2+88cbu3bvl3+7d
u8slpRmsLH/1MesHHnigV69emkUlSpp169bVrl27TJkyfn5+wiP8fv311w0b
NpSBmDBhgmbD8hcuXHjttdd8fX01gwpNs3yzO/XWr3UrYOmW7wtb1cuSUbra
ahSMH8K2fLc649/UtJvN2y9u1GrBoqXhcfFJEvNHgj9w/vFxbcPXtDPCaTdv
+ba17K5nxKfdsm8pRaXZfDvbGGMl8uHsNAffy5YOOXnyZKVKlR566KHChQt/
9tlnp0+fXrBgQZEiRYoXL05/8lusWDH+XbRoUXJycsmSJbM38WznD1KtWrWx
Y8dquoLilypKly6dkpJiadofM0fVZTWgpLEdXBlf20jnUdWtW5cOMZp/rPrX
X3+d5kuChQsX0jMFCxZ89tln+/btqz7nPWzYsLfffjs+Pl5yHT9+/J133omK
itKcI0RbMPw2bty4aNGi1F6iRAkm5/79+zXLl1DkQ95UHRsbe8cdd2D9En/p
0qV58+bxKwnAsGzZMoXQqljKZHwZhe3bt2uW3fJUyzevjXsvVpEKgOrndMMX
ulWLVEYVabf8v6a4lrLXrl0LPTVr1qxVq1YVKlRgPixdulTzFGV7sva8Akaz
kNrQoUMffPBBYIwbN06zcXU9A0a+et+pU6d//etf0g8oXiDBdJo+x1588cUO
HTqolEpsp99TTz0luZQrAV9QFIw/ePDgu+++u3379kSKUvrwww9btmyJtpk0
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
eoAORw8olg6XXXFUKKpAUZUGxBoTE0MYGx5n5/Tp04p6u5/4Pn36KKqfSF9J
Gk0M9eJKKCq5o+sE2/79+9EwkIhiRdm31ASr1/0OU0vMhbjEL7+Zhe9MuEpt
nyDV4V0RkDpBnVkX469ERV/8tPLU2Qt+lfj+Qzf26LdWwusC/4CdCeB9w7+R
USku0oHQ01D8qTMpXkntRvPwpiUxBgPXAamzN/vOT+89Rf0ZT10B68MtTU7H
IGrWUdWqVWXLV/rfuZTNFaaDZZ588slHHnmEDmfUnn76aaqGlcDz888/S14U
/kcffaSo7AmnyxbKpEmTSLN582ZF3ZkhzChTJnNm1KhRkhEWk81ke2jtGRL4
kgEBAZSJS4j1yCSRuYfTSpgE9Iwknj17NgQNMJgoZZhq1+7cuTMOLyaH4mzK
xnFQ1Cn9xhtvSGRgYCAgt25NsRiBBAaZtBgb9KqizmSGTLQW64LeliNq+nvK
2Gx0OyTLcHz++ef0f0hICAZ2r169JAE+styBUlSDHIongC2kL/nee+8VM/uJ
J56oW7euJL58+bKi7l8BUkxo/B1SDhw4UHGj7vJMca6XzURl+L799tsRI0Zg
XzEPsZRcZBdZu2/urD27gBGRSiGaLKdsRTeX8EnRUaxKYUlF3eHEJodzsbfR
fqTEiWOBnzhxQv+gnFAngbZt20K4ohb27dv38ssvQ8EwKdnxghWLlyQ1fvrp
p9j2I0eO7NmzJ5Xi5hA/ePBgXCGtQ8qWLSs7uqggPDJFVZ4GU8FQL01o0KCB
pAGDPcqWs14jx2/DBR4zabv36M1DR28pW2XawbCzZK1cywf3mQTDx27RJ4A9
w//4C8quVHPm6TMJpMSLbdp28bcdl46euJ3EXXqu4ifKX7Ii1KvFQrXJyZFR
F7EBTkbGnb/wv8+/mnEg9Izq/8rzhrcM2avWmXX12g0VcIpXvnbjkSq1Z/3z
T5KcQHN8EPv27at1o0spGylQoAB9fuDAAawv+rxLly74zsRDBJCLfNOKxEwh
3Eni4WIZZWr38/PDiWYtEN69ezdEwOyCUpkzYMb6at68OdSGJ67Y0ntpoHrz
zTfxsiWAY7ho0SJoWju+2K1bN3ppz5498u/cuXOp5cyZM6TBfsA3P3jwYOnS
peVsZCYpWzurT11QNk4uYWwS8XPF8YciZVtbHFvpHHoMK0hR96jpGehSjoQ9
++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
e7Z48eIhISHHjx9/++23SUC30D+FCxfOnz8/PKhkWglYg4EEKZwqQML1nXfe
od6wsDCtjXI1FEIHcq1atSqAFcumt3xznGu+fPl69+6t6AxdrcnUwnAzKFu3
biV+6dKld911F/xON7Iili9frv9wudbJMnYDBgygZInRksXGxlKCdI7NVf9f
FidStoSHDx/+wAMP0OGTJ09W1AHC3HrppZdKlSo1cOBA4mfMmKFkwuq2B8DN
tWd3MG7zwW0qN1QWSHbu3ClpUGu5c+cmRsjOoDDtKTS9C7N27VqYunnz5q1b
t65QoQJFLVu2TLE0016NuXLlunz5crqaI9XBTZT23XffDRkyJE+ePO3btyfy
77//fuGFF8qUKYPqE13n+F5H5do+e36LToHqQOJ0aXjrtBkgCMMgCuV99NFH
b7311sKFC5csWfLBBx+MHDny5MmTs2fPhkDhiAIFChCYO3duREQEOkR0uJL+
2W6Tsp977jmMT/7FEOU6fvx4RkEowMHJYy3p2gGzierVV1+tUqUKU5F1XaJE
iSeeeOLcuXMxMTG0HZ+RmTZv3jz6BDYnZr4qO3bsSBdIB8EEBwdT+IIFC5jk
tWvXZoD49/z5845U1KhRo/LlyytWPYniwjqV6gxNxnydM2fOZ599dv/99+OS
XLt27fDhw+JlMwFee+01SWzzljrT5sUXX7SGQTkXL160hmE63c71skmGRR0X
F/fkk09OmzZNIqdOnZo3b140GOFu3box9E45WmBzO8httWdfMNOnT1eylLJp
MjqB1S1MRyQe07333vv888/DepILzdawYcMOHTqEh4dLDFMU5Fwx9Zs1a4aW
UOys37qqKLrt07Rr5F8cxqFDh6JLe/XqdeHCBUmwbds2rYoJEybs2bNHsTAO
HpP4jMiIESPwNBV1R5HBtXcvO/HK9Znz9oIIT2KRf8jA4YH+K0PFd16y/GDF
GjN7DVy3ev1havvnepIkWLoyFN+CvH+d+9+6wCPnzv9v/JQdy1en+EoxsZem
zNw1eMSmHbtOSvlhh2N2/hJ5IjJu3JQd/EWfilcsfv3RiPMTpgYPHb0laOcJ
arfOru9FCe/cE+U9estUn903VAB680M6BIUM7yxatEjLqOfiGjVq4Hdr/zJq
9913H7SlOImycd579uwpwLiyvh5++GFtf9568kBh/v7+v/32GzOnb9++sCcj
+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
b9++0rth49xRX6SuvUlH/6/26mol/Y7T/tW+0nAa3nytdaeh0jfO58qVKw8d
OiSvuR8wYABDkyraS7ezu3iQsiU9fPjwPHny/OUvf5k8ebLkt2vX7vHHH0d7
WEjy2V9KJrxuRwB83Ht2B+OzGNxgT8Rali5dunDhwnDxkiVLMGiDBw+2rShq
OX/+/P33348dU9IWoeQ7r1vNjMAj5G/fvl3Knz179r777suVKxd21aURCQAM
IK21adNmyJAhuXPnpncyL168WLx4cay0Yo+yM5CKNWf9sjs2FacThV2y57Zl
M3np1e4kvv322yNHjjx16tTs2bPR/BtvvPHaa6+RmDt37vHjx7Eh6Gr16tWK
66vdLh8988wzeGv8i3fE5/jx45kCoW+DWXZ+sM7f/FVstpgMKigoiGHixa1Z
s2bGjBmFChXas2dPXFwcmatWraJBnAo+IdMPP/xQKhqqoM8dO3bYjiJjcaSi
7777jn8BgDPwySefOLqixVZ64YUXpEe72tPafOmll/CHmW5c4nnz5u3evdt5
kLbNZrKWo0YYy6JFiyQ9YsSI559/3o2+zCyejbIphkfNIsmbN+8PP/ygqGuA
YtHR0VLg888//+KLLxQvULaPe8++YKZNm6ZkHWXzSeCMmdK2lZJmKAilZ86c
2aBBg2+//Xbfvn2KGsc1b978wQcfbNmyJYZFHG+hDOd1qxF9uXLlaEq4lUxi
kAceeODZZ5+9cuUK/9KXn58fkXivXr0uXbokBbZs2aLBnjBhwi+//KKkzdeJ
EyckdFJUy0CwSQIwJCTcM1B24vWbM+ftIua4dStlUWDEwOHBgUGREjsvWb7/
82ozew1ct2r9Qbr6781kKbA0KJLQgbp/XPjPuuDDFy7+Z/yUbctXRZFz7vzV
KTN3DB6xaduOU9J+1MFz23+OPhkdN27KNv5if49X0uL6o8cvTpga7jc6JGz7
SXq3ra7f3JLe/kvM0NEhU2ftvKUC0I/F0STql3G1atWIu7V/MS9/+9vf1q9f
r3iIsgnxevbsKcBE7Y8++qhGSbgK9evXb9++PdGW5ISHhwcGBkIxTZo0ITbE
SWP6CHUpg5uhpK3Abdu2NW7cuGnTprt27VIyZBZbVPTOWvr666+1MtLm77//
ztiDg4O1kpRhKdqt4p7YVdHLL78sKvr444//+c9/YudJG5b0mDFjDhw4wML+
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
EN9JdzirBHEyR4T/pC9cuCDFtm7d2qRJE+oyLqJjxfHedHRzn1CRuqw6OEsO
qxOx4hzqt1tAQIAcuZR/9VUkRHXVIGSsIv1zhNhiI0aMqFGjBqzKt5I5ZsyY
Ll26kGBnLV++nB3Xp08fVCffAlW7LeWM8omIWRJ4zrhA+Nv0ru1fIX27GI4e
PdquXTuUwBbDpwoJSf2hRHh4OLMmBQxbUn9m7/9NrAeWekQsMI7EFoytoc7C
rXfblVcPELjJwSFXuUaTe47TGU24pC7bsm5oOwsnMZOL2XlULuG3i8oNnXhE
jU6qyI2WPT6ndhv8/2Ret8XjlE3OLZ2I452sPmvO0QMn3RO7AHzWew4A46Xe
nQGj14P+51papu0DSyWtL6/vwlU9J9s8lPKO+ptifS9SRs4FzZkzp1ChQvny
5YuKirqje/mRiJyq0iSDgasd/fnAUu2etTxTxVGBO3cfWJoOre6pp/KTojva
KTJD+dSv1PPqhgeW6qsr6pn2P9Mp6co7P4l6BRp0697yc7SY9e2L/g3fJqd/
YKn+IrZWWIDpRv3n8zwzRuh4cv98GmdK2vM5DeO1VY4tYJfEGRVl0Jd2TF0D
JkcEtXbcUL5+jIZx2cWgPY9Un6+fNf1X95ydnC1WlO0RscA4ElOBcUNk5YeG
ho4aNcrRNrEr2X3gesnCsZhTjaZCZSowlnhbLMr2iFhgHImpwGReMhkeZlOx
KNsgpkJlKjCWeFssyvaIWGAcianAuC1yOc7tn95kd7Eo2yCmQmUqMJZ4WzJJ
2a4+y8iDQtdZC0AvFhhHYiowvpScNPAsHIs51WgqVKYCY4m3JTExMTOULQ8a
yhKh66wFoBcLjCMxFRhfSk4aeBaOxZxqNBUqU4GxxKty69athIQE9yibWuHh
4Tt37vw5i4Suw8LCshCAXiwwjsRUYHwpOWngWTgWc6rRVKhMBcYSr8qOHTvk
J/NWlJ1JscA4ElOB8aXkpIFbUbZBTIXKVGAs8apkJspOtu5l68QC40hMBcaX
kpMGbt3LNoipUJkKjCXelkzey062ToyrYoFxJKYC40vJSQPPwrGYU42mQmUq
MJZ4W6wfeXlELDCOxFRgfCk5aeAWZRvEVKhMBcYSb4tF2R4RC4wjMRUYX0pO
GrhF2QYxFSpTgbHE22JRtkfEAuNITAXGl5KTBm5RtkFMhcpUYCzxtliU7RGx
wDgSu2Du2IgvIdnt0eMY3J6F27d9rZB7SgZjMSjT0cy6PaKMu3avzczLPVe1
Id+2gAeX/T1nxzeKstvXbVWUu2+iSTHbws6O4nHKlqlJtveyFXnRoVcXqs96
z0lgvCre9h/sjitFJz54J7h0ZDBKpnKcMil2x3L79p9vAdOnfdC1ktVvbLzn
5Ppm4WUMRn+G3Nt06cu+/s/FZ1F21kYx3l5C2ReMt8UWjFCbOC2308SXkAw/
h5HpcFtdjmbTjVmQlo6duNi975r23VZEx17OoH1fSgZjSUxMTEpKkrQ2p5qz
pKna7Z8gZdC19nZL91rOjDjyYZLTv5hSsGk4ZanbKscbYDS1XLt2zdv7y25f
khg7duzUqVNJxMXFrVmzJiEhQTHHks6+4nHKvn79enBwcMeOHflWSZs4+SS/
bdu2Lr3BMAOxC8BnvecMMD4QPRgZaefOnV955ZW33nqrePHifL7xxhtvvvlm
VFSU4UXGevza23JtdWUYl6Iu2m7dutWvX79evXq1a9cWi6Efb506dSpUqKA3
+MxFiRIlbty4oegMr9adwQ4n694PIgXWrVtXq1atMmXKDB06VN6vrTiYBXk/
dUraq6j1r8YmzV9yyu1m7ZY0aOkfsGz/pbhEyblb4G6PaY38+Tbt1HSK7vXW
8qrru/kp6a5VSlMpNu/O1udkPImaMk+ePIkaH3744fz583/11VexsbH+/v4F
CxYsWrRosWLF+CxSpAj/BgQEoNiSJUu6t/Dsunx8XrhwgV5YS0raJVltvu6k
f0W1lp+S9hprmU3965ht/3UeldZpw4YNWcksJBY2a2zPnj3knz17tlSpUhER
ESdOnHj99dcpgFpAzspnF3Tp0kXJtAWwVZEoefHixXT0xBNP/POf/+zXr5+8
BVscZm1DSS0trb9sYtgFomHb9+M46kuU/P7775cvX54Ey+Avf/kLrE0+e0Sr
bpiOjHu8o3vXtr5Mllw/zCrxIGVLevjw4Xny5GF2Jk+erKTZN4R2HnvsMfJ/
+eUXxROUYQDg495zABjPduoMGFlF4eHh8+fPX7BgwX333VezZs0lS5bw78WL
F51sUG+KFZtxKaox599y5cq1aNECKzpt2jRFd8uVT2wLBbZv3y7lMaogyZUr
FzGCS0MTUwNP0VqbNm2GDBmSO3fu9u3bK2ms4d61joo1Z/2yOza1EScKu2Sm
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
/viVK1c8i9wWgC97z+5gspCyWW84LWz2du3aSSYR0wMPPPDss89qmsHa169f
v3379ocOHZIclijI+ezdu3eTJk0wGoruwM+JEye0SxkjRox45JFHSCxbtuzv
f/+7ZM6fP99gfzKGwb+YVj8/PyKUXr16Xbp0SQps2bJFa2HChAm//PKLkmZ4
wSD/2g4cSbx+c+a8XfgLt26lLAqMGDg8ODAoUmLnJcv3f15tZq+B61atP0jD
/72ZLAWWBkUSZ1D3jwv/WRd8+MLF/4yfsm35qihyzp2/OmXmjsEjNm3bcUra
jzp4bvvP0Sej48ZN2cZf7O/xSlpcf/T4xQlTw/1Gh4RtP0nvttX1m1vS23+J
GTo6ZOqsnbdUAHr3Q8Z+9epVeGfRokVaRT37VKtWjbhb+5dZ+9vf/rZ+/XrF
Q5RN8N6zZ08BxicuGSygXZ+3XTzh4eGBgYG7d+9m5fTt2xeXjMlq1aoVZXAz
lDSi37ZtW+PGjZs2bbpr1y4lQ6ZwaVXLFWMwd+/enQQ9uq0N51X08ssvM1JJ
s/dxHiBZutu5c2fXrl1Z1VOmTJEqqGLUqFFyaQgdkv7tt99Is/hxMwyUTbN9
+vTRumYg7EoGOHHiRMyLZNJR3bp1O3ToMGzYMPbOxYsXyQwJCUG3PXr06Nat
G440vpYUdn6nZ15ROUM8TtmKuv6feOIJueqLUOzhhx/GZv70008sD7utuSF2
iclnvWd3MFlI2cB4//33v/jii9dff12s2SeffFKxYkUceJiRfwlGoAN2K8Ug
X+HisLAwMikDF5QqVYo0jr2SPqrC4LCYMRT/+Mc/+Dc6Ovqhhx4SF4Xg94MP
PpDwMGMYBQoUgLIBXLRo0eLFi2NM8LLKli1LgS+//BLDK9UPHDgAhq1btyrp
Da/+4oaBsucs2J2UlNyhe1Ddpgtgw2r15g4bm3pdcezksM+qTm/aNmDxsoib
N1Pad1shBarXnzt0VAgFIqPOlqs8rXm7wBbtA4NDj53742rVunM69Vw1afr2
8lVnLF+dSuLzF+8tU2FKs7YBQ0Ztrl5vbsNW/jQFUni87Bc/dO29mr4atPSP
j79+Xq3eOa36yrWixrsX7ZFZ83Z9VGHqwBGb/MaEAFuxoWy5nlmyZElM+po1
a/SXNCnJVwRiaJLEzZs3yfz999//+te/iu31CGVDHDACs4Z14nP06NFsK2EB
w+LZsWMHmYMGDSKTif7666/z5Mnz4YcfEhHXqlWL7UBCGpeLJPXq1atZsybM
C78rji9cO7+qWU7x8anu00svvQRbKSplu60N51XETtG4FQAMbfny5TExMY89
9hiomjVrRo5wugz87NmzWsm5c+eSHjJkiC1lM5wBAwZI+vDhw9IsO5HEvn37
yISU8ZNpuXTp0mTC3ZcvX8ZfIv3pp59+88036P/pp5+WKw9u7/T/Z/EGZVNL
z1P4rixRZpDdgQmFrRTv3Mv2Ze/ZHUwWUjbyxhtvjBkzpkSJEuxl7Dnbc8aM
GexZDL7YAdEM8t5777GdSfz666+obtasWYp6Xx73nthKG4h2/wuOIK6RSAfp
168frbHx8+XLB8kq6Y+O24UBQRNC8u2ZM2ekmNg0eJzog8SePXtogRCgUKFC
+kEJkWmzabz/qxZbte43mFpyLsUlfvn1j8TOpCvVnBWmBrwrVqcvUOvHy/HX
Y2Ivf1xx6uwFv0p+f7+NPfqtlfS64COwMwmib/g3OiY10tkXeRqK//1M6iWL
mg3mEU1LYRwGPgekr96kTYB2aZfPmH/H09fq9YfSBmVnLFLy6NGjTI1Q4YIF
CxTd73dgLlhbSaMkz1I2n++88w4LIG/evBDQk08+CUfAAnRNpGZYPOw1EmPH
joXTJXgk+KXM5s2bFfU6DOlz587RJiuEAFMqwuaEfhmgdX5Vg1CWk48pu3Dh
wlWrVl27di3b5K233oJqoU7KXLhwQQo0b94chCRWrlyJi3L+/HnSLHLsEgte
sUfZfBYpUgRXrVOnTp07d37++efffPNNNiPuDVNw5MgRyjz66KNom8S1a9eI
piV2Zo4ga+kXJdMdTdlOljM73RJvUDZmU6MGGkftkZGRWGO+xaFi72Rw18N5
cURMvuk9u4PJWsp+9dVX58+fjyuOYSQoJq4JDw/PnTs3X/34449sUjmpQvkp
U6Y88MADJNjIJDB3ci4lf/78I0eOVNJTNonWrVtjNORaHNz64osvYkXbtGlD
43SkpD+4axcG9kSiJEwcNpb4GmN7//33M3GKagmJuyXRq1cvgyb13pdhFuSs
18jxWwiBx0zaOnT0Zr/RIWUr/bA/6ixwKtaYRfhMgeFjQ/QFYM9DR/6AsitU
n3n6TAIliWIbt17cqsPS0RO3Urhzz5V8RftLVkTWa7ZQxXAnOuYyPsCp6LiL
l/7zaZXp+yLPqPFvKjvgUxiqf1HrxxtJqZeXKUD7azcerlTzx//+N1lOoNkd
i34qN23aVL58eS1kkzJepWzktddegwII67Zu3cosQx/EbuRj5w2Lh4lTVJp4
7rnnpPeAgACmmL0gV4lZVCdPnoyNjWWFgJkou2nTpgULFiQSVxxvTOdXNXgk
ovQxZb/99tt4C8WLF4dkGzRocOzYMcnHb+Hfjz/+GCdHo2y0hN+iqGsehcj9
DruUTazxyiuvoHxmnK0hQ0ONjEhiYaYGQiexf/9+ykRERBC/k9i4caMcAsSN
Qf92J8uZnW6Jxymb1m7cuAE1MAWktcP87BGmgC2WK1eumJgYJdPRpV0z4rPe
cwwYb4sjkzt9+nRWHXbjhRdeYDvv2LHDlrJRCw421oCKePIkJFIGvGEji+kj
B+Mgp1ipggWuUqWK9Dh79my+kpsRmp20C4NeUBSkT/CI508gtmbNGiDt3buX
NseNG4ehO3z4sBa16Y8l84lFkkDGcPxMrjwPGxNar/nCFauj/AMjFi/bDz/G
x1+HK2FYKJsCQ0Zt1hdYs+FQwtWkY8cvUiA6Nk4Ff7tBS//vB6xdGhS5cMm+
wBWRwSFHyQ9YHlm78Xy5930qJq5ijZmnYi7/ceEalI1XQO9wlMAwVA/Zepw2
tflaveEQJK4S2u0MKNsgHTt2xMxqB/XtUjYRHypCLS79iNvRVd/evXtrZdA5
E6SkZwFZPLKoRo8ezYLRjpcDFW4ivX37dtgqWhU2Y7t27VhCQ4cOZZZxRVxF
ZXc50ZddynZPG86DobuuXbvqT1zzFePFof36668B1r9//7x585IfFBQEHuy8
3MhAgQsXpvp+6AHKdqR5Pomdic3BL8MUn5a5YKMR4D/77LO1a9emItvkvvvu
Y1cKGDa4nDCxnSxndrolXvpdNot23rx5ksbiyY0ShMCE+dJO+GcGeQYAfNB7
9gWjXYnyjdi1J3j+EyZMIAEtsp3J37BhA4ESS1EuPi9ZskRKEg6UKlVKUY8B
PPTQQ+LJ09rzzz+PHVZ0v7TCAuC9y0FckY8++kgubyJHjhyRa9qKjrLtwqAX
chYvXkx5KUabWKSoqNRbxtgoogziC4Bph9+UNL7G7GDHxEQbKFtocfmqKAjR
8NOqpKRbVerM2bTlOOnAoEjbAgTalWvPjvl3vPzbZ/CGjj2CDHqGsus1XyS9
RMfEUf7YidRLDSQIqKWM3JjuO4TqK21nilrXb9w8GR334edTNm89nvEkHjp0
aODAgXJmKRVSnz5Mn+YH4ilVrlxZU/Xp06dZ6mFhYbad3lMcxbM9evRA5wDg
Ey8UJiKfOTIsnpIlSyrqiUQ4VOAFBgYCVQ46Eh4y3UePHqVlYtJBgwZlBpXd
5fTII4/IegDz999/r6hHLNzWhksq0q4CCReTbtiwIX6FFIDQYUMSkClKwwsl
vX79enwYVESa+X3xxRelsEHzNCjXvevVq0cmlI0axYOtVq1a8+bNg4ODZb8o
6i/3oWC6k39ZKnI61Hay7rnTPaWxbC2eomwpgMvUuHFjXCzmomDBgt988w0r
oXz58rhzbdq0wbsjX24YefZetu97z75gYJy6desaIkTviV17gq0YPHgw/xLD
EpgoaXcVxZB+++23pFu3bv3JJ5/AwmLctm7dSqZ48rSGEZBjMHJOeP78+XzL
Tkexn3/++aeffrply5aQkBAyGzRoQLxQoEABeFYuwd0TBrY9IiKCRIUKFZo1
a4bRIC2/bEU6d+7Mv/K7YH2Mv2DBAvKhbIFkoOw7cm4/6VbrTssg6Gmzfx4w
LLjv0A2wM3EGLLl+U+qtwOs30hXoM3g9FX87dP6D8pOJmlUdKjH/vvxFzVkt
vgucPufnDj1WzpqXerx5zsLdZAplHz91ifIHDqZe6iSQf/+zyb0HrR8/NbxW
w59OnLp07o+rFWv8WX32/NRb5MTjpcqOnzAtnPTI8Vs+qjB1xLgtoyeFXbc5
fiaDxUo/8cQTKBCnCHZm4PpQqEyZMnJhWQrHxMTILW9Kfq7Kr7+mdurM8rO7
fqBX+R2fHDljH2k/9TUsHjnhT0hIQCeUjctKATkSJiedmGvSc+fOJV2pUiXm
F+5YsWKF4uK9bEfLSX4zCGY2fursHD/utjZcUhHd8a+QtQxk8uTJdA2lyhE7
bBG1Ll++jMNTuHBhdgrGQTt+NmfOHNKGC/ia5hGCcQqgYdks+/fvV1TKZmg4
P+icTyFuIno52sf2ZOcyF6ITl3a6RdkinqVsyuPadezYEQ8NZ+y77747efIk
SxH7VqNGDaZs5cqVdltzQ2wXqi97z+5gsBtK1lE2YZH+91CK+kuTYcOGaVdW
582bV6tWrRYtWog5VdTDYEOGDJGb1MAeO3asHAYWO0w4w9CwDAytS5cuWF35
eSz2pEmTJhiK4cOHi3nXKzxjGNjb2rVr0yAY6O7s2bOirqCgoNy5c8fGxipp
CpTPjRs3goHqQtmO7v9C0P5L9/f32zh2Utje/adTb08n314UGBGjPvfMWCAi
9be0l+ISFy7Zl3D1zwsy585fnTprZz+/DTC7VITWl606IN9eSbhBeWpJg3v3
nxk+NnTQ8E0hYSfk8vjZc39Wl5+D4UuQs2uv2AFl4+aj/YdunDhtu9wBN7of
ai/nz5+HpuvUqdOoUaNVq1Yput/c+fv7y/1Q0UxCQgJeU/fu3eXYEp8S07lN
2QSzcuFaZh/KY341eLaLh6Uybtw46Q5nlYUkc0T4T1o7kQVZsFqoy7jkxwsu
3ct2tJyENDXMeAtua8MNFelvRlOGlYz9GTFiBFVgcFFgeHg4k9iyZUti21mz
Zgn54j936NBhxowZio6yDc0yutWrV8fFxcHOwhQo8N1330WHOD/4yUTicu8P
B4BtiPGhr4kTJ7qx060T4yK+f2Cpp0jKPQDeoMicAcZLkjEYZx5T7LaWnN/j
Lj0tmYigXLly92zf/mGPezXuzFhdUohtWTf0aTsWuy+McLVZ97p2SZxH5RL+
zK9qD4rPVHRPkWvd2pOIcGC0ixg+RpKDxeOUnaw+p04TcbyT0x4958GVbBeA
z3rPAWC81LuTYGyfUqU/EZec9sxDw29+NdiGFuQkj160t4Ekpz380O4azgCG
/lGKbAS+IlIoVKhQvnz5ME13bF5IJBi0kTraIHd0DyzV7lnLM1UcFbhz94Gl
6XDqnnp6R0l7Kqm+Ba186lfqeXXDA0v11RX1TPuf6ZR05e27H44XsyFHtOre
8nO0fvTti+YN3yanf2Cp1oK+sGFRpegetpkxQjdWtYY5M9pwCYxdC6Nf1bqD
FukytcA8xeZlOoZm5Wf4cvmdz0uXLhFZly5desCAAf369Xv55Zfr1KlzJ/1T
UuXT0KDzO90S67UgHhELjCMxFRi3RdZ/aGjoqFGjHG0Wg+SMgYtk4VjMqUZT
oTIJGNkRp06d6tatW+3atVu1aiW/77bEs2JRtkfEAuNITAXGU+JMWJSTBm5R
tkFMhco8YGz3hXWt2+NiUbZHxALjSEwFJpOiv2x4T8lJA7co2yCmQmUqMIZr
4BZle1wySdm+PGVhELrOWgB6scA4ElOB8aXkpIFn4VjMqUZToTIVGEu8LYmJ
iZmhbHl2TZYIXWctAL1YYByJqcD4UnLSwLNwLOZUo6lQmQqMJV6VW7duJSQk
uEfZ1AoPD9+5c+fPWSR0HRYWloUA9GKBcSSmAuNLyUkDz8KxmFONpkJlKjCW
eFV27NgREREBHVtRdibFAuNITAXGl5KTBm5F2QYxFSpTgbHEq5KZKDvZupet
EwuMIzEVGF9KThq4dS/bIKZCZSowlnhbMnkvO9k6Ma6KBcaRmAqMLyUnDTwL
x2JONZoKlanAWOJtsX7k5RGxwDgSU4HxpeSkgVuUbRBToTIVGEu8LRZle0Qs
MI7EVGB8KTlp4BZlG8RUqEwFxhJvi0XZHhELjCMxFRhfSk4auEXZBjEVKlOB
scTbYlG2R8QC40jsgtG/tFqf6UNcXofh0izcvm0HiXkkg7EYdHjHRrR8D3ad
5YvHjVVt0JJvwNiF5KoYWtC/RcXMizaniscpW97/kpz+VTjy0h95pYunTjY6
Wqi+6T3bgZGX9dh9O49XxWf+g90B3lZF8ZV50b/BylSOUybF7lhu376t17OX
1GtONZoK1T3BeNDUWC/VynKxomyPiMnBZKEz7Mh/0P8r8DKjPbsDvOeoPQ5D
L04uCcF47MTF7n3XtO+2Ijr2spKl82VXMhhLYmJiUlKSpIUa5FNLyFduU8Y9
vQUlzTd2r30Posp4OekxexatIxXZvgLVvfY15FoLzDiZ69evj46OzkzLlrgh
Hqfs69evBwcHd+zYkW8VXXQzfvz4smXLVq9efe3atR7xye0C8Fnv2QiMtL9u
3bpatWqVKVNm6NCh8vZn32w0PRitxzp16lSoUEF7fTCfbdu2LVGixI0bN5Q0
C2z7Ft3ktPf52rVFhgHKV3v27KlRowba7tu3L9NhGHXGMPQvONDMr75fAzw+
16xZU69ePVhMUV8lbFgS+pdfp72rOvXf5JTbzdotadDSP2DZ/ktxiZJzt8Dd
xu++UFv3Bu3UdIruldbyeuu7+SnphilNpdi8L1ufYxC1yp0UB+/LllGfPHkS
7T388MP58+f/6quvYmNj/f39CxYsWLRo0WLFivFZpEgR/g0ICECfJUuWlF3g
aphmd/1Urlx50qRJimqg+KSLDz744ObNm4qDxaP5Esn/Y+88wKq4mj4eU95o
NMWYoimmmGJsMcZ8MdGoSSxYYlTUqNHYYuy9xd7A3ntEsSNgxwZWRE2MDeyK
UmxgQUSDoqLs92MnrMsteIF7L1dy5+HhOffsKXNmzpn/zNmzuyolpXzBOTH1
R16kVqIFX35J16wWlwaeJ0+eTOL8+fNffPFFxqRhITP8b9q0adGiRUuWLIki
6Hr79u2Sr5/VWnWTs9pY2tDJkydpdvny5QDHE0880b17dzKRvF68BmtW+tJ/
St5JmSErQrakR44cmTt3brQ5depURTVc/G/RosX//ve//v37u7q6lilThjls
dci2c++PCzOyGLGlsNGuXbvhw4c/9dRTHTt2VOy1x2XSnmDS4Wfnzp1S5uLF
i08++SQ5zEZjxszJR/JNDhBTSea5c+fy5cuHwZkxY8Zrr73Wtm1bJXXIYJKN
HDly3Lx5M11j1PNA14IdxpCdBrm4evy1NzKZKwsKp2vCGJfNwHwzUKJY/i+/
/LJw4cKLFy/28fH5/PPPR48eHRYWNnfuXAC0SJEiH330EYl58+aFhoZiQ5CM
n5+fkv4A0yQ4FihQAE+Yn+KG4QOjdIFvCyePMZm7Y2shV4+c1cKzoro6GZaG
hcxA7777brVq1fBjPT09v/3225w5c4K26WpWL+1OnTrxMyYmpmDBghUrVhSf
nwavXbuWef6dlC6ybpRNMTxqNPvKK6/MnDlTMvfu3csUDQoKkp/aNlomyeT2
r916f1yYEcWdPn1avHpo1KhRL730ksECtx0ZM8N8++6777AhHTp0kEx8eNyY
N9544/r161ILa//zzz/jWhw7dkxymKKIkf/9+vVr3rw5tkjRHfgxGODzzz9P
glggV65ckrlw4cK33npLHz6kzQY/Ma3u7u6ETn379r169aoU2LZtm9bCpEmT
/vrrLyXF8MKD/DQeOBR/6+7s+XvwF+7du7/E9+CQkQG+q0IkdvZZEVyl9uy+
Q9av2XCUhu/cTZQCy1aFEKNQ99Llf9YHHL985Z+J03asWHOYnKjoG9Nm7xo2
atOOXWHS/uGjUTv/DD8THjNh2g7+Is/FKilx/cnQK5OmB7mP3RK48wy9G1fX
zwJJ7/wrwm3slukeu++pDOjdDxn7jRs3mMlLlizRKurRp3bt2sTd2k+09uyz
z27YsEGxEmQTvP/+++9KihuMS/bCCy9oq8l48rDifH19WX3MnAEDBuCSoazf
fvuNMrgZSgrQ79ixo1mzZjjVe/bsUdJcHema1XFxccJzr169SNBjhqVhuYje
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
08Cd97INyKG4cihmnGRr0u5lK7pAW1FDbHmnpfPEuCXkZMYcORQz9qTsNPAs
HItjitGhuHIoZpxka9Ie8pL00aNHZWOchHzdwAnZlpCTGXPkUMzYk7LTwJ2Q
bUAOxZVDMeMkW5P2kJcWaF9TKe0QW3GAeZLlDOjJyYw5cihm7EnZaeBOyDYg
h+LKoZhxkq3JALKJrI+olHaIrTjAPMlyBvTkZMYcORQz9qTsNHAnZBuQQ3Hl
UMw4ydakf5WKAPQplZRHvSYuy+dJljOgJycz5igNZtL7YucMUBa+6tByLTx4
YHM5ZJIsV6K5dydmeIBpd52xNjNPaSvX5MRO+2WSVmfmka+vNEfa93AzRrZ7
i6nzfJ2QMWQnqKRkFLJFtomp32j3QCUl9cfQM0nmJqp9es8ezNiBTDKjNwuP
NBEmeRYx2mEhy5eGpCM9z1qmniV9GYdynDJJmVeidbtWsvq90+a40s8HbTIY
zBOrz9hHzrT76rfZrNupSbJEKU7wzSTZ4bMgdl7L9uk9GzBjH0qDmfj4eHEO
00uWi9EWIYNBpmaWDYpZogWpdOr0lV4D1nbsuTI88pq5TrOWLFSiOC3yX0vI
pQxb6TS61t/RszOZ84olgVHVLum9mps3bxpnZh5MzTlUiak/cZu2oLSr3bt3
9/PzUzL6WWqrK0U7ZOXv7/8f/1K2kNUh+9atWwEBAV26dPlT/Wq8FNi3b1/d
unUrVKgwYMAAClhlg8gkA3br/XFnxm6T34AZ6ffMmTNVq1bNkydP/vz5XV1d
jx8/rqQYGSHtE9U3btxYvHjxtWvXtFhb/gcHByPG7777bsqUKYr5PfbGjRsP
HTpUUT+2q7eiWlr/DWWDcF7S69evr1evXrly5dzc3O7cuSOXTp482ahRo4oV
K86ZM0cb1KlTp8isXr26QBg9mrLqiu5b1ck/E+8/aNnBp0lrL+/lwVdj4iXn
3wK6KklJ+i9oJ6fv6z6BLZ/D/jf/fipRSFP3jb6Xrc8xIPnEtv6L3o9U4o8/
/hgZGenl5VWoUKESJUp8+umn/C9evDg/vb29b9++XapUqYxNPOPJnJTyoid6
6datm5Kiff0MMfg8fVLKd9ITdR83N/hUuvGX09PFlYwLWClTpky+fPkKFizY
o0cP5q10OmzYsPfeey9v3ryIZeHChUqKNRgyZEjTpk3TJZC0mdEkQLNFixb9
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
KbpvVSf/TLz/oGUHnyatvbyXB1+NiZecfwvoqiQl6b+gnZy+r/sEtnwO+9/8
+6n2KqWp+0bfy9bnGJB8Ylv/RW+DsYiQz5w5U7Vq1Tx58uTPn//HH3+MjIz0
8vIqVKhQiRIlPv30U/4XL16cn97e3iBXqVKlMjbxzNmZy5cv0wtzSUnZodUU
lGT0DeWklK8tJ+o+oW7w9XPjj6FbyJXWUc2aNadMmSJpljlzG4HIT39//zJl
yuTLl69gwYI9evS4fv06tZo0acLMZxUgK+pu375dyZBBMBaRCFnfKYLCudK+
TJ2ovpTDIAxPNPq+PO3cvXuXfKpQcevWrYoOYZs2bcrihf9vvvlm0KBBN27c
UFL23k2uJsF36ZfFkiNHjvHjx5NJWtYXZZYtW0ZHoDZpuja3+v7LZC3IlkaY
ogi8Xbt2w4cPf+qppzp06EAm8/Ptt98uW7bskCFDuIo5VayxUaNnwP69Py7M
yE/+jxw5Mnfu3HQ6depULdMOZGzcgoKCFi5cCJg++eSTrq6uPj4+/Lxy5YqF
DepNsWI0LghRv/TSS4MHD27fvj35QIZiRsgY1Z9//jkDgzKpYqIGRfeiA0zT
/7d3JtBVVVfcX21tq+2yra12tba1rR201bbLVq399NPWKqKin4ooogiICFUm
mYUwB2IgEGaQMMuUAAmBQMjEIIQphDAlQEISkkASMk/kZb7f791Nrjfvvby8
zCGc/2KFe889wz773LP/e5977n0urnV07e5z5Phla9dcaLpRhss+b/PjOOFH
bO8///nPBx98cP369YzgP/7xD09Pz8TExJUrV6JwLPkf//hHDlavXh0fH5+Z
mYmiduzYoTX+brfnI7HezB3qvOeee7Kzs5vQoxZ8fGxU9fOf/3zIkCGc5uTk
wJK45RJlBwQEICquHUz0xRdfoLTIyEjSMQUvvvgiXt+qVav+85//3H777RC9
1myvRjRs0+gDDzwQExODY/zd736XEXGuB5u1ApCWloZ4zFzNNIK/+c1vcIz9
/Pw+++yzH/7wh7gfxMguKpbZgS/h4+Njkw59x8XF2Xi/Cma0FGXLSCUkJIgv
DT7//HM8cA6WLl3KcEsAhYfJjdoiGwzsZ01btn6zCCOgCawHluTuu+9GBq2d
KNsGCLN48WLjFB/emMJob9asWdycohx4oWfPnmgsPT1dMxkTc7+WLFmi6eaO
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
uIr/D6n1kJg=
    "], {{0, 317.}, {328.5, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{657., 634.},
  PlotRange->{{0, 328.5}, {0, 317.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.835431509421074*^9, {3.835436871562709*^9, 3.835436884486023*^9}, 
   3.8447670367994328`*^9},
 CellLabel->"Out[20]=",
 CellID->1205053509,ExpressionUUID->"854c2c74-d855-4a60-ac4e-9586155608ea"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "987f5987-ea07-458d-9e42-fa50b6bc7822"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->587594208,ExpressionUUID->"0295f0b4-d651-4dac-a1b5-eedb453a545c"],

Cell["Get URLs for all the Major League teams:", "Text",
 TaggingRules->{},
 CellChangeTimes->{{3.8394945810287437`*^9, 3.839494594801301*^9}},
 CellID->451278929,ExpressionUUID->"83469105-274e-41ef-b7db-15439252a553"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Testing`BaseballReferenceData`TeamPaths", "[", "]"}]], "Input",
 TaggingRules->{},
 CellChangeTimes->{{3.839494574100733*^9, 3.83949457808671*^9}, {
  3.844767052039349*^9, 3.844767052760249*^9}},
 CellLabel->"In[21]:=",
 CellID->1143005063,ExpressionUUID->"beebb4bc-1aca-4fb1-9c3a-a365c4709b4f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
t+r+cF4h15gpS0F2jy3UYvNmh6Qw/oGxu/ef1ibKWbsxICk5QzFAT9Havf6r
+Qyrf7OvXG3Wzm2dV2CuOulVi0FssmrLYvOMGQnw94+Vfq27eEgz670Dvbv8
HT5mw9jJWykEnoytZ+d8JjJZKdJ3GQVrnF0+SSI4z8W7cp05bb9fHBqWqOQn
gMYh8wfJNerL5qQ3KoHC2bbxNbcexObS9Aa6kezRjETbYrVc1/Vwa6i/xopy
bc0rNdt2hp4MidevEoNt2R6ScSlLX8XeA+HR51IVg6O7FdhdvXr1bt26URg8
ePCQIUP07kYQkbI1rFiXczSyrjQOJR9r1KjRs2dPqdy/f/9dd9314Ycf6pve
S5cupWbEiBFKnme4+vTTT0+fPp2P2dnZ/K1Xrx4Nli1blqtFHRZjlubswKgL
XUQvvfRS//79lfzVCRn3//WytV6MDYySVGypwKZSdDKasYidQrVq1Zo2bSpT
GFmytgoLw/sLWDKKy4TvW0oWPgSoyriUJ/wDPmdHjd9kbFzA6xrQKv/qn80o
iwMcOmrD73P2UAgKjmvQwqWk0mGbpGN3o1Yua9b7W7CaY+XJC+Pf2BL05++S
Fb7N2y/UN1QNtl2gu9QP+Xn9qAlbKAQExdZq4ngm4hrYrRQUiMUurtTUaTbf
2d2HwtWC27wWe7wWS7auN2KoBdvG+sK62xpcH0Sx2cU4o/XGuG4k0+13U3By
PejkdlCxrZ1ClWi1olxby7TISvLmnemwVyoDTsZ+Wml6tx+W5+Rf3bn31P99
OcXF/ZCSv3/euM2ClWtVu5KIrmSxW9pkZGS8/vrreNfLly9/9913TZo0SU1N
pVKuJiQkhIWFWQwVExNz6tQp/SMdZdiIiIikpCS9TXR0tFE4MAzbOgMyr7e3
t3zs0aPHJ5988sorr+g1f/zxx4MPPvjwww/TixGysrLKlSs3e/ZsuRoeHl6+
fPnPPvusYcOGSj5GGMcszXe9bWL3W2+9ReykGMBILiHekJAQ2V4oTJhCsmQL
SYKGuoLQiOwz68TVwMBAjOfixYsXLlzQhabvSAsRETVr1kzJj4iQc3BwMMPq
DeAKJhnHYqW3lKXmzZsXPbtJJUsWPoR4OTYu7VJmNgWPZUdbd1mUkcHXVNVX
5mW1DUqOikm1cMKR0SmSUFsQjdt+73EiQFWiq8fh4WM2Zl/Jyc7fQ2aK7Ct5
ZRwjk2pviMm58as5XFUM2N249YKtO0NoczYy2cJtnk/KiNFSp6L5T0nNZJn6
R7CbhShaLpaUYrnSc7EXEs7nfZcVFRHWj56Yh921mzpdE7tZl/xlnDz/kHUl
IipZF1TqhUywe9O24Kzsq1c01LBogDoua9pJTrmUeD5dprJYAo1Fa4lJGQna
lr5igDaWH3PugrHSortOehe4PZ+UbrzEsLHxafpHphPLgf/E83kt0zOyYmIL
TATnbb73CDgZB4eDRq4bPWkLJkdlEWxYKFFfWnzCRQkOtTbp+qRCKamXEJpu
umKcgcHx8nGGw54e/Ve07OQeGBwnNbv2nqrWYG7d5s6YB8wQxbXqvMhzQ4By
a7BbvOLWrVvffPNN6rt27Xr//fc/+eSTzz//vIuLC5cGDBjw1FNPvfDCCxUq
VADBGXPHjh3AJQ1A1YoVK8bFqZxPnTq1cuXKbdu2pTGpsbu7+6BBg5577rkH
Hnhg4sSJMtfkyZMff/xxUss33niDGanZtGkT84r/5wuPY1+0aBHBQ9++faXL
ggUL3n///W+++aZmzZqazLNpM2vWLFndlClTPv744/Xr1z/22GOJiYnSRdbC
aDYlUHrIJnbDOXJT8rFb6pHJyy+/jAqQp729vbQ0CnP79u2K4RSfTUlOnz69
SpUqnTp1evbZZ1HK0KFDJQY4duzYBx98QAhEPTp95513sJ/k5GRgET1iCS1a
tACmFS3JFeyG0C8sMfurr766ceNGagjksBDp0rp1a/jXt4luKUvEmRROnz5t
c3aTSpwsfAgg2LKjO5njyrUnajScV8/Oub6ds73jfuTf68eVYydv7dhzad1m
81t38QgOVZ0efhiPR0LdsKXL+CnbcIyk7cNGb/DaGszVI75R7bouFogZMGyt
54bAeS7ew0dvkLnGTNrSd9BqUezMuXsnTdsxa96+kWM33ujV2fP2/aztD4hb
BtdadHTn6vd9lwF54EJIWAL1vidiuvdb3qydG+vqN2RNSsolup+LS9P5nzB1
m/jkuS4HqCEA4JLskS5d6cuqSdOatHGr0djR3nGfzLV+UxDjN23rVrX+3N/n
7MnNKQq7LUhGALL7Dl69YNEhUOP7Psuo2b47rEkbV/41a+921DeKmv5D1zA+
Q43/TXWz23aGSoPm7d18jkTKRD0HrFi45EjVeg6yy+HgbLmE5WuO/zh87W8z
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
FyigDEVZgqAsGQLK/X/vfeDm8r4vqEQT8H+fD5/3c95zz3jOcw7P7/mde+57
XT1D4VwtO7v6B6ieUP+HJQYALGTHdeGS/QJ2XOzeHxJ9xm3NMQiXm+cx2H1w
yEX8sLDmbtW42rPsapmqJZaqNm3nfPHSNVAA3seIqNWxp8dsze3j1WlH1b9T
GZqAjHZ9PIaM9B08YkPfoeuGjtqoaNgNOsh9VToZ98W2qV+qu/Rw+S59PIeM
3MjogNEt29RAxQK7gTBF2+gGFAgqtP35Vc07uvQe7K0+BnSrlEy6lqPjcxbu
hYPTO8R24Kc+fYZ4g91cwtoQc6wHozQWoBGwmy7oCDSnJEr2Guzd2dYQGJd6
8L60FNQGu0Fw5rpJWycwDj1KtKMI1tXBODnqwCXqwl5b2blpR2vVvrA2dBv1
pBEyk5Kz+Uoggc2btXOC/1KLxdC8o3PIsUsUKCwsJh6QoC41LYdFIpEVxQDQ
eYv339Ru31uoQRxId6lX1Hsc+iTOnK/a2cvnVJe+6v4DLYDd2BaiTVrsjwKK
toE//PONjVo7jp7kl3EtLzMrn2WTmqb2e6PoZo+Ba1t0dOk7bF2/Yevfb6hu
sMjaUL4X7JaEs7MzWKyXB1779u0rBQAROWOsH4VCoHhw8/x8dfOkbdu2LVq0
UDTeDXaL81+3bh1+OytLfbYR7CYdFRWlVw8LC3v++eeHDx9OsXfeeUc63blz
J1zb19cXjoknh+xD93Q2Kve7LbB70qRJxqHBHI2jqPlinAsZ5q5duyyMIHCM
cYBdghOpqGP39OnTAVM5Nubi4oKJFA27gVE5WkbjYLecNwC7yU9ISCDN1Dz+
+OMTJkyQBsHfJUuWKAbsxrz6VYTwTDbkiaCWL18umfv37ye62L5dvRGJboLd
GH/ZsmXAsZub23PPPSe7NNarSJ8jQjioPSvHGMOYUpPFGrtBKHFoCB6s+4Bv
eTcQo3OrHXujoVoQrvJ2bq72Ol6/hYP4SZHtO89BjRXt1iEcan9Q2ZHIb1Yc
HDPZf8wk/+CQ+PAzKUNG+EKvvig/0P6NffWvlqlaflatTNU90XBSiNiEaduA
BoEhfL6xFvqvWnMM/cEdoOFr7cxzseG5bNlK1b9iJUfXI6zwFp1c5OwxAhYQ
VygadsszYhFRl8GRhETVeebkFMbEpQNz8kca8qh1fatd91VbNSBTB+hwqM9Q
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
NMrY9fE8oWUKkz12MpFAomErRyINRbv7/60aG8O1sVeYxLmL1K3aDZtP9x26
TsISogumg3UiCrCYU9NyEhKzBo/wbd/DHdLNPJ6NTuszxPuYdvNdblV8Ptm/
RSeXLn090YdFznSXqhvmXt4bTsmtAT7VmervtWrNMW0I9xK7RaCrMBrjlrii
PdAdFhYGZEgLOFK+ZmZ+u5OA66Z3ScuZZ9yy/mMguOXc3FypC4yS1nuEd4vy
6vnMzZuN/QLHwD29yA+Cif7oYOGcUZiSXKIY7C+7XEhbD6Qmi83fybE2gghm
PHv2LNMtZfTgJCYmRmBO0Z4RiIyMZCKwvz4XJPSnqknr9snPz9ePHSIsmIiI
CCONNVbUFxKTHhtbYbvMKDSIAiweYy2LjozNWvQrE41BaAQ9pTp1z5w5I6GC
CO2fOnVKVqPJuL9/sV63OLrky9niCaFIseczrmXmyzlzUCMnt9C4MS5l4F9w
Fj0HT557/cbRY5duaEeGomOv0IhimF/ASN8IhWEVFBQbG6z2VfQsexRde9w7
41qewJkuIMilxDK/J4+E29Rf0c5fnY/PEPqmaL5alGfskqkvVWwl9/SxmP7z
p0nJuDB1n4H/0YSk2/yYKkPQn1uXZunuwsWr+uPJZOYXFMuM2Cwgj+ZZ/PtY
DKG45JY+ZPCK8saH9BmCrqc0Y1FdEfMWl+3U83kxIVOeBTM2kmx4FtuoVanW
o77Pn68NmdaOHL1osTOP3eLOf9uvtRrWk2gcmvqwv9ppmQIF5XZDUq/kMtHy
e2DBFftlUQH3TJb+w0QUyssrsvgdA9ZzYeG36+3eYre1WNSy/qGt6jnMu61V
K7jzd5E7mQvjEXqRymjmd0Gxyn54rbIyNruzWCd3os9t+7XI1J8ot6mSKd+P
VLFujXMOSrbo6LLZ/4zhqvY7V5X8rleNkiocnU39rX83rLJapVUWq57c9q0c
d/LajtsOwXC11Ppr1dUtfk2uskaqIRb1bP2A2/eBVnf4YpR7jt3WbrO04k9G
l1b+m9JGL21RoLK03pS1ZzaKdV1jMevypRV/OLTmi825sGkEpaLdLKD8Wwdi
63doLRox5lfWvnVFY5kqfkvcuhGbHVVdxQKgq1h7NnUw5X6LzedMDetKNhXV
7dyR47fsP3ReTZdYBH42VkWp4QcwS61+A9xitu/VV6PaitVatZljU39DpmJV
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
1S1+Ta6yRqohFvVs/YDb9wFVVfxynUVL9xy7rR1yqdWvZFv/dPmt8h/JNRaz
OXybFa37La0oVatUxaXaguA256IKI9i0QGVTY/3zs1XMiE1rV1amCjWUype9
rpV1ZGix0irT05QaIpU9Z6qU7/TyWXLz1sjxW/YfOq+mSypEZaWlNleXAeCs
fgPcygHem69GtRVb/wiV/GvYLGnDUZe3YJ2jxQa2ipXewctDbfVibdK7K2Bz
CJWlFdu2sq5+G2PabKTqtHUcIqvFGBRZq2FzEu8g/W1Nq1eKfPtnLZUtBuX+
825Tvh8x58KU2ih3uG5tvgPRFFP+P4uJ3Q+GmHNhSm0Uc92aYkr1xMTuB0PM
uTClNoq5bk0xpXpiYveDIeZcmFIbxVy3pphSPfnu2F1bTnM92MIsmHNhSq0T
c92aYkq15Ttid6H2altTflhhFsy5MKXWibluTTGlelJcXBweHl5SLewmWg4K
Cjp8+PARU35oYRYOHDhgzoUptUvMdWuKKdWTkJAQea+WybtrtZj8xZTaKOa6
NcWU6sl34d0l5v3uGiPmfUNTaqOY69YUU6ot5jnzB0DMuTClNoq5bk0xpXpi
PiP2YIg5F6bURjHXrSmmVE9M7H4wpNbNhc1fBn6A+zXFptS6dXsncs+X2J38
MnnF3m28FeI7ivoW0Tt4EYkp35vcJ+y+devWD3IPS++XT5svk2IUJdo7Q41V
5Na/zSo/1EDuVmzORWVGqF77NeflXIxLnzITiGu13G/sNiKO9qPo96kfU2qx
/FBhid6vvInLugB5Fr/kzxf9ZaYm77aQyt4vVsOl1s0F60peFP7drX2HwZV0
RKcXL178jj2acq+k1q3b2wrLLCEpK/d6hRdtf4fW1M/snMLE5Nu8iVuXtCu5
VzLUd1vfuFFyKTGzqPjeUI/TESnBIfF5eUXKvRiXKd9d7jl2Czs7dOjQhg0b
hORakKPSO377pGK1/1NFLek3KCjI19eXxKZNm8LCwhTDq5ylWFpa2qpVq+Lj
45Vyn3/8+HFnZ2dHR8ctW7YwWJsDsTn8GiU252Lz5s0WRhC5wynQhXxPT8+j
R48qFd51aDlBFu1YvSiw1DhTzZo1s7OzU8pnweYCsKkPOYGBgU6a7Nq1KzMz
U6k4O5WNrri4mM+uXbs2atTIqL/N989WvRqrsJUpdyXW61bdHy5LlBqZsvG9
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
kJhcFq5LnibGDqIESUZHg3p0BEUB6LLMgrslyeLi4sLCwowmhWUzGEQlDB4S
EiL0Wa8I/8ri4XH9lrRI1804OBmutM54RlHRltapXSIJ8wsE41HgB8LfT5w4
AX9v1KiRXg4DUj/ehlUZKsZV8Up0M+W2xHrcMtElJmfJTAhFiopJS8/Ik3Pm
oEZ2ToFxYVzSwL9S0248S8tMnnPl6tHAC1e1KS4y6hKFKIZBAhjpC6EwrPz8
ImOBVb6LnqWPomvHitLScwXOdAFBLsSXznty9Mim/op2/iomNk3om6Jti4vy
tF0i9fGOrWRPH4vprz9NSGTKU9cZrly5Gpdwk5ep0gT9uXUpluoAC/3xZCLz
8ovK3uVlI4E8mmcBEBZNKCq+rjcZvCK98SF9mqDrKcVYZFfEvEWlK/X8no/L
kGfBjIUkGp7FNmpVotWor/PnaU2mtCNHz1uszGO36Jgb9VqrYd2JxqapD/vn
lz6LjQL5ZXZDLl7KoaPldYz+5etlUAH3+h/zq16gLuhcqO3vi2OgVPc5c2ux
yGX9oqqqcZY7xHRKKnjXVs2XW38vtPV7wyrpo9sSeZZq69at8po7wBFWm5KS
YvE9F+u+s17ZsPlCM5tifOeeRUab71XTpVmzZu+++66cgYyOjob1yx66rBdV
Uvut62bKTaWScWs0LVNW8w7LN/mEGO6qtyt6r1eNkkomOpv6W783rKJcJZUm
q5rc9Ksct/LZjps2wXC3xPqy8uwWb5OrqJAqiEU+Wy9wq1loVb3YbT0Pl5R/
+XNJxW+uNi4/WiSoKKwXZVFviS2xVswiceUNqclisy8qar51F1QSaVGRce3a
OnLChAmPPPLIq6+++sYbb9SpU0dWofX0FuXf4qiwbmwlfXrT1unuGdz8X//6
11NPPfXmm2/+8Y9/HDJkiDxooKexUO+mVZhSBbH5nKnB7LKoqC7nDhu9ed+h
GDVcXM4TKylRLEaCXBnfIFrJqyyr8dKotkVDrJtWif6GSMUqsWXkjf9HW8lK
buHjobZqsTbp7SWw2YSKwoptW1lnv4kxbRZSedjaD5HRYnSKrNWw2Ym3EL6R
06JerRbLv4qqMATM74jdDVJz+gImGxwcrH/VpYYDXExMTEhIiKyim/LTy62P
W4uPIZpiyv+4mNh9d0gN6QuL1emavHZhraoJDT+91JBxa4optU5M7L47pOb0
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
2veFRIe4rgqEcLl6BMLu/QPOMw8La7arwt3upXdLVS22VLVJ22XnL6SDAvA+
WkSuDt1XztCmfWZ1ylH171iKJiBj514rBw7zGjB0fe9BawcN36Bo2A06yL4q
lYz62nfiNJWyweW79PIYOGwDrQNGN/uqWGCB3THaLurufVEAMU6Ftj6/AlDo
OWCN+gDQ9RIiqVqOjn8zZw8cnNqBjP5D1vUauAbs5hbWhphjPRilMQGFgN1U
QUWgOSlRsseANZ1sNYF2qQfvS0pAbbAbBI9LyAS2wDj0KNaOIlhnB+PkqIM2
Kkpgry07u8pkpqYvvgbdRj0phEgILJc4Eti8aVtn+C+5GAzNOqh7xyQoKCjC
HxDcvJiSzSARz4pkQ0ZumjVv3zVt+95CDfxAqrt4Sd3j0Dtx6mzVzp7rTnXp
ra4/UALYjW0hxYTF/iigaEx58JcbGrZyGjHOG5gGeRk2ySlqvaHhF4nHEZLn
u6UjiId305Dg0BvHjWZ8t+vLceqaOWXm5ZVu4FYXdktg2bJlYLGengmWGV4S
wMjk8Lnx4eJ69erBzfPyVEeiTZs2zZs3VzTeDXbL5L927Vqwm/lc0fZqCYeH
h+vZg4KCQIfBgweT7N///rdUmp2d/cADDxBpoXBCQgKg4Ovri40EDtq1a1e/
fn2bWQRTIJjG5tRYMfaFqArntWmEo0ePYsPQ0FDJBTJibcXAuzds2AC8ygNl
IhQFNAsEKxo6f//994q2oI271ahRoxYtWshZPkWjxuC7hHHYMPiSJUuUsoP9
1lqJtt7e3mC3rK7n5uaSa/Xq1aIV/p6eGG2/+OIL/ZLef/7557t06aKYp81r
p1TEu11WqtgtYaZNIEbnVtv3REK1IFxlJVxz8zxev7mjzJMiW3ecgRor2qYq
HGrfwdIzmfOXHPhqvM9X43z8A2KDQ5IGDvWCXn1ddqB9vkPV75aqWnZWrVTV
3ZFwUojYmEm+QIPAEHO+MRf6r1gViP7gDtDwvXbmucjwXPYaryD7vp76JTju
5HKE/5rmHZc7ux2VSLAAv0LRsFueEQsNTwZH4uLVaTM7u+BsdCowJ3+EIY9a
1dfb2q/YogGZ2kDHQ70GqQsUxo1XwI6KwG5FW+S3TgAwgYy68ft89oPsehub
sHZDEG6GcGfgXpyK/IIiOPKufVFGAwKU1tl1OXgk9uPmjpfKTrsp6oZIQYMW
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
JS2MQBqMoLNU7CwN1G2uH5mIiIiQjX4RaLIcJyAlGE23vv7669iHXqB8YdM4
V5KY6kJDQ8VBsrndYKGVCM6SkHTKF9+PgDhjYWFh8qS/rrn0vlRhSi0Vq/Wi
6zAUmQmhSFExaUxics4c1MjOKTAujEsa+Fdq2o1naZnJc65cPRp44ap2ZCgy
6hKFKIZBCBjpC6EwLHi9scAq30XP0kfRtce98T0EznQBQS7El0568ki4Tf0V
7fxVTGya0DdF2xYX5Wm7ROr/T4nJWbKnj8X0158mJGZlaesM/GfHJdzkZao0
QX9uXYqlunPnL+uPJ6tP3OcXSY/YTCCP5ln8j1s0oaj4ut5k4Ir0xof0aYKu
pxRjkV0R8xaVrtTzez4uQ54FMxaSaHgW26hViVajvs6fpzWZ0o4cPW+xMo/d
omNu1GuthnUnGpumPuyvVlqqQH6Z3ZCLl3LoaMFqf6t6FY2DU3J6Rr5Rfz27
oj1+KM/R61K92G0tFrmMC5vGY3W3K7eSy+KNXlXIUgXFfi6pqC+qYASl0m7S
AyEhIYD11q1b5bzZ5MmT4cUpKSklZa8ztVbgFrWqZPVb5++3mN6UGi4VjVtj
D4OSzTss3+QTYrgrD4+UWMTUQKlklrOpv/V7wyrKVVJpsqrJTb/KcSuf7bhp
Ewx3S6wvK89u8Ta5igqpgljks/UCtzsFVVavyLvVkqsXu63n6pLy750usfXq
cut3YlskqCisF2UTI2zWZZHAOsaYpbasxFbiR1VuhFuxrYh+qRttwoQJjzzy
yKuvvvrGG2/UqVNn//79eiHW2W+qlUUVxpQ2E9+0ClNqvlTyHn5Z6eW3+Nr1
YaM37zsUo4aLy/lpJSWW/8JyZXyDaCWvsqzGS6PaSgUTi/VYtdbfEKlYJbaM
1POW2EpWcgsfD7VVi7VJby+BzSZUFFZs28o6+83nbetCKg9b+yEyWoxOkbUa
NjvxFsI3ctr0f27Jqlba3pXfEftfk5+rLzIyMoKDg/WldRNJTbktucVxe+2a
6aSZYko5MbH77pCfpS8sFqtryxqFKTVHzDnEFFOqJiZ23x3yc/VFiWG/4yeu
2pS7QMw5xBRTqiYmdt8dYvaFKbVRzHFriilVkx+P3eZKaU0QesHsC1NqnZjj
1hRTqiw/ErvldRym/LxCL5h9YUqtE3PcmmJK1aSoqCg4OLi4StiNt3zw4MHD
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
m9eQWgsz80JSbv7lKm/Z/gGtqf/zLhUnJt/gNdy6pGfkZ2SpL7a+cqUsITGn
xOo90bWTk5EpQcHxBQUlyu0YlylGsfkWthtVuc3YLavowYMHN2zYQBWuQqOq
vtSs2nc4WhRTrDZ/aqhl7FcvsG3btkmTJi1cuDApKYmP+fn53t7eFsMpKChY
vXq1s7Ozk5PT8uXLly5dChbIJb21ux/3rX2h66wbITExkY+HDh165JFHgF2l
0mjlVq/7NLZszJdiUis4OLjmdhRbTtSltLSUTAz+xBNPFBcXGzvavHlzWFiY
NHszLTz++OMMPC8v791333V0dFQq3+J68/rYnJOm3AGxnrdCOsQT2q7RdaZs
fKnlDd8gqVS+ZjHyVNr+Q+e0vq5t2RaVnVOoGBbGml1+81crFVb/l5Zd7dzb
wz/wVLna6VWLRqp5g6T1nKyYrliA/+s2hve095Zi1nsHenX5/8X0rTPm7iRx
6kxa666u5xNzlBoXMeu3hRqNLLxwuVtwg5bLeg1cHRObpShK5UubrRspN/rL
Zqe3aoHq1bbxRbZuxObQ9AL6JDmgTRJtr9VyXDejrSH/BiMyvgNU7ffwOb3A
kdALbquObvSLyLpYwMeiotLd+2MtZqy2i1zh6x8Duz/66KOPP/6YxLhx48aP
H69XN/IjSVswJuuVVsroxYyZxqbkY9OmTYcMGUKCsTRp0uSBBx545513Xnnl
ld/85jcRERGZmZk/+9nP/P39FW15l6YYIJkvvvgiJevVq/evf/3L19dXmqW1
oUOHykiVu1ssfCFglJWVZTQCGEdYAized999UVFRSlXDKlVh2qJ9YzHphe7u
v/9+aacGvm/tOOOUdnBwePjhhy2w+7e//e3IkSOVSgi+YQsPPfQQChCYtWzZ
0t3dXdFg/eb1sZ6TptwxsZi3hUWloyb6ZWoLF3I4JGHqrO3G8lVcaUCryqvX
i5VXvr97wtStC5cdIHE6Or1tN7fbRYdtio7d7Xu4+QZEWqhq8x3iNvU3lgT9
+b/GJ6xLH0/jG8krSl6rUl3yx38ZMHX2DhJRp9Oad3Q+f+EG2K1UNYixzatX
Zd0ub9nZxdUrRN3UtdrmNTRi6R3rfCOGWqhtzK+uuq3G9UYUm1WMPVpvjOuT
ZIHDfhIr3I+s8Dii2PZOtU60GlG5rWFWaUrvd5E2OXPzisZM9m/S1mnY55t6
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
w5rr9X1vhDAPC+/cc1Y+wmcpwOiAYBUTtR1vog7SoccTpR1UIvxQNCL/6ZhN
/oGnpC5Uev7ifTbVIFojzrHpxNUbTnSt9M7eg3FN2zlLSeIEOk1Jyyspudqp
l8f4qQHx5y/qatOvTM4de842be+clX19+7HiXt6dwm4dH5977jn4jlR57733
evfuzboKTL/88st/+MMf/v3vfwMNr732GuDIyknJt99++89//jPFXnjhhS5d
ulBx5syZLLlcpU2wG16ck5NDOigoCM4oyyy0i8aBcphXcnIySj7zzDMwfUWD
eJZ3eceK8eFuwW5IIjmy2utkXDZLRcgEsBgFY7c58LtQrHk39rEwggxEsFvO
h4OSRo/Uq1ePzAMHDlARg0+aNOnVV18lh4iIKm+99da//vWvN99886WXXvLw
8IC9gt3CuzF7dU6EqtO1TtJjYmKotX//fnnknJat73fr2D1jxoybaYGQQ7xJ
NLhkyRIqxsbG3lAfJhKmEIPoEwmPG2+pm/Jji03svpCUK7PVxSPETt1UlF0j
Fbt9AyK1B2DLoWksa/AXrrl6hcC5Wnd19d+mzmrdfcQAgIXsuM5ftFfAjot2
9pDoCLdVRyFcbl5HYfdBwedZh2VJ7FmLq70rrlaoWmaparMOK84nZIMC8D5G
RK3OvT1nacs+qzrtqPp3qUATkLFbP88hI30Gj9jQf+jaoaM2Khp2gw5yX5VO
xn0ZMOUrlbKxsHfv5zVk5EZGB4z6BqhYYIHdcdpd1F17YwBiggptf35ly84u
fQevUR8DulZOJl3L0fHZ83fDwekdYjto+Pp+Q9aA3VzC2hBzrAejNBagEbCb
LugINKckSvYZvKarrSEwLvXgfXk5qA12g+D4GtgC49CjTDuKYF0djJOjDlyi
Luy1TTc3WdLU8mVXoduoJ42QCYHlI4EENm/ewRn+Sy0mQ8vOK4KPJlCguLiU
eEBwMy39EpNEIiuKDR+7+esFe69qt+8t1CAOpLu0DPUeh+7EGXNVO3uvP9G9
v7r/QAtgN7aFaJMW+6OAom3gD/t8Y5O2TqO/8AOmc3ILmTap6Wq/kafSyCcQ
kue7r1U+aSHYfSRUXZTKrlYcL/8xsFsSK1asYNnUy7Mq9u/fXwoABHL43PhQ
MFQXbi7no9q3bw/5VTSKxDIrp4XXrl0Ldufmqs82gt2kBXdEwsLCnn/++WHD
hlEMWJFOL126xHpOpoXCIDIrthGmFQ3Qydy1a5cx09nZ2TiKu1+MvhCd8/Pz
bRpBzpjhbtJ//etfrT1CIy+++OJ33333//7f//vyyy9pDdsCl+np6XL3QYoR
G9COPE/3wQcfVOdEKS88F2fJHjUNSiPu7u4oaYHdYO7o0aMVjXffTAswdx27
ZePl/fffv6E+KH/kyBF91LT8xz/+sXv37op52vwOijV2g1Bp6RUU1dVTxW5J
42EgRudW23dHQ7UgXJXtXHX3Dm3YylHWSZGt35+BGisaZ4FD7T1QcXBx4bL9
Yyb5j/nCPyg4PjwiZcgIH+jVl5UH2hc61P5qhaqVZ9UqVN0VDSeFiE2YGgA0
CAyx5htrof/KVUfRH9wBGr7TzjyXGp7LXuMTZmfvrX/ESk6uh/nKtOri4uxe
MY3BAuIKRcNueUYs8lQqOHIhUV08L10qPhubCczJH2nIo9b1tQ52K7dsrdhA
W+h4sN9Q9ctlvPEK2NER2K1om/zWBQAmkFE3/oBP1sldb+MQ1m4MI8wQ7gzc
S1BRVFwKR965N8ZoQIDSurouBw7HN2rlmFF52k1Rb4gUN27tuGd/xYHbsJPJ
tJmReTnu3MUWHSu0goYLdivaITGGLHEOjHvY6E0kZDA4SOfd/T+xocaYSVs+
G+erO1E20lXsJizRhqZh9woQVtFiJ9IJhnsWRJvMjSVOQfsOxklIo6jnoksw
72KngxYjzbx4Gf3DIpKNmT8Gdgvd69q16/DhwxU1nlRPebVs2fIvf/nLhQsX
+LhgwQJ5RKugoABqvHfvXkUjWayu5Kxfv/6hhx4SigThgkQLdsO7AQ7BbiHU
sDyIFagEZ4fOQxtZcu3t7QWnBIakr6lTp1Jy3759wDpwDKaTOW/evBMnTgQH
B7N0A3BypksyySE8yM7O7tmzp4yiTmyYK9X4wtoIrq6u8FYyGSYFGLXRI5QR
L0+cOPGpp5569tln5Zw2HPy3v/0trmQmXLx40dvbG1jEXNQV+IOJV+dEUQme
ixPlQCDk/ZVXXkENMl9//XXrU+Iw5REjRijaSbmbaQHsVg8ia/e7BbuJPW6o
D8rzn7n0ySefyESqV69e06ZNFRO776BYn1WDPPoHnhZQ9vGN+KC5Q2x8VlFR
KdjXqbfHmMn+yamXAJ123d0mTVeXzVXrjm/bGc1qfDgk4YMWDjGxmVdKyqbN
+f5YWNK8xfsWOarrIat3175egJf0wgJOLx3t3HPzisCOrtpBpoDKbdvaXNX4
ckFBCZxUHhOGR4+euCUlTVWV9OSv1Du2vQetnjIzkGV/f9A50Fx4t9fa49t2
nBH96zdzSEzOA01IBB+9QMmIU2kntHNNkNb/frQUjGPpdvU8+p8mi0EBFKjf
bKmP78mCwhLPNcfebbhIuOTYKQH88X2CMjdu63Ra28+vTog02nZz9dta8UTb
qej0+s0d0IreE5NzDwarx1bB7mYdVgh2g0fGAjLeqDPpkPr4hAqQ2uB78sMW
lkPwXn+c6EKwG9SmPH2RHjcloG03N2IJqKjnmtCL2YWgKn7XqxMjKdpZCNW8
h+NJ4P2RE/wysy7TDhOAkU75KhCngJKpaZd6f7x6qBaznTqtaiUhCthN+nDI
eUXD7jbdXDf7q0Nmqjg4HxI78H/SjEDoNrjPx41+EdfViEoNj0ypdOJ2cSIB
AyqpTlzH0NwFu/ccUA9FCHZDqJktqJSSmrfY8SDsnoWK2GzWvF3zl+xbslxd
hCUwIOh6p8FCj9WhFD4ZmWI/bB2RJyPFfes3hePrM2cz+COH74ioeruwW65C
oCAv27er8aRgd2Bg4JNPPsn6PHPmTEU7TsYC+7vf/Q5omDt3rlLJm4CJxo0b
Q98ATTLnz58PSZeWfXx8nn766bw89Z5FSEgIrcXHx0O95SAx8tprr7GkEyFs
26Z+l/Ub2SAXvTz++OO036JFC+IH2Vcnh/wnnngCmgZaERVIMf7TEZlTpkx5
4403AgIClDpyUE2x9Xy3tREAX7yJX4BarC2n0WC4ukcwu1SHTT/88MOdOnVS
Ki2A5bEz9nnuueeIAeDgRFa007BhQ6XytrVNJ0p1/EVdAXoQk/zHHnuM6qgE
+FqcM//nP/9J8KBo58xvpoV//OMfIC+AC+jLOfOVK1feUB8mUkREBNNen0h/
/etf9efp7pDb/uel6hqi7jlPnb29UWsnVsj8fPW5HrhPw1bLps/5nkWvx4BV
rKu9Bq1u1sEZfiRPRXl4h7bvuRIeCkOR82nks+RCkD/+bMMhba32Wnts1AQ/
pfKmoXYizgN0Ex1mfL2DBlPTK+6f1uJqSpq6OsEE32+61NFVvRFD16Mn+qFw
844rVFU1krhj99nmHZzb9XCDF48c7zt34R5Fe3JN19/RRa17rbycgcCXyQT3
12oHlX38TvYdsoamyOGScEYsttQ5iOABTJwya7v9sPXyUDmo9GFLhxPhyRC0
nvarxmnaytPN18oNf5o1KGM30Dtwh7oRJ+jz/e7odj1Wdunj2b6HGyijbjJf
Kevcx0NOx1kUmKmdPAd5O/XySEzKVSofXrYeAoCON6XThMQczCh30jEOcQ6F
sQOYlaT9fBx4qlcnblG0x6/eb7Z0ibOKdyejUtEZS7bp5jZ5RiBzQ30+epK/
+lRCN7dhn2+Su+GAHb1cSFIjCkIC0qEn1CiCOLCnvff2XdEo062f1zEtU8js
0eOJBBKN2zgRaSja3f/ramwM18ZexYlzvlV3cTdsPtl/6FoJS4gucAfzRBQg
okhLv3QhMXfwCJ+OvTwg3fjxdHR6vyFrjsrN98q7mUSqxCTttLs/E6duZbzZ
Oeq+Ovpg2w527gwNn+oPvt3es2osoX5+fha/k5mZmSlbndJCVlYWH6FyegGY
r2zhKtojvZptSyShaL+zoT9izKJKWu8RuiTKq4czN2+2/n1OclilRX+9Ouw7
r1KkrkUmvHvLli0/5FdD77zU8NuSFkZA8IVucMWWRxRty11/2l13PbVgu8Z2
9N+gq9mJ8py4jokkUEkeFaeMxdQiR3bRb74FvaL+qyw3o49eWCaSxS+6mHIH
xOa8PX8hG54iKyEUKSYui0VMzpmDGlBy48a4lIF/6SfcFO1B2vzLV44cTbii
HRmKjsmgEcUwkwEjfSMUFgOvNzZY66voWfEouva4d1Z2gcCZLiBIQmLFF00e
Cbepv6Kdv4qLzxL6pmi3xUV5xi6Z+pcmOTVP7uljMf3nT5OS8/K0fYbLl69c
SLrBj6kyBP25dWmW7s6dv6g/nkxmYVGpeMRmAXk0z+KLbDGE0rJr+pCBK8ob
H9JnCLqe0oxFdUXMW1qxU1+uzpMceRbM2Eiy4Vlso1blWo/6Pn+hNmRaO3zk
vMXOPHaLjbver7Ua1k40Dk192F/ttEKBokq7IWkZ+ThasDrIql9F4+C0nJ1T
ZNSfMED/05tSbjd2W4tFLetf8ardDeWbqWVkT/f8AaTqfHFDI9Tid9WsC9yS
bW32eEtywxZuvtka5qcpd0BqXkOMzgElW3V22ewfYbgqj5CUW+TchVLDWmdT
f+vfDauuVnmNxWonN3wrx828tuOGQzBctbGY1Fzd4tfkqmukFmJRz9YPuP1Y
gGX1E3k3bvP2Yrf1fmO51c9lW//K9LXKn8e1CR81pPWmbO5z2uzLKDYzZTO5
RrPddVLDGlidwWsooNgCeilm7UqLRm7SicbfKrdWuHYt/JBJZf6e+U8iNudt
VZfJT2er27kjx/vuPRinpsssIknL6SqfjL8gWsNPWd7Gj0a1lWq+RLYmvM2S
iq2yNjL1uuW2ipXfxMtDbfVibdJbK2BzCNWlFdu2sq5+4zXKupGa09ZxiMwW
Y1BkrYZNJ95E+npNm/GPTasa/yz0vCffI/a/JqYvTKmLckvz9moNL0Q0xZT/
MTGx+94Q0xem1EUx560pptROTOy+N8T0hSl1Ucx5a4optRMdu6OjozMzM9Oq
Snp6ujxapZjYfXeL6QtT6qKY89YUU2onOnafOnUqKSkJpE4wSGJiYmxsbM3Y
XeeOdd2TghdMX5hS58Sct6aYUmvR98zBaNknN8oNeXex9lJbU35awQumL0yp
c2LOW1NMqZ2UlpaGh4eTgHTbRHZ5XbJN7ObSgQMHDh06dNiUn1rwwr59+0xf
mFK3xJy3pphSOwkODpZXTcGvLR6JFSEkrg67y0zefdeIyV9MqYtizltTTKmd
6Lwb7LYJ0FeuXKkZu817VXeDmPcNTamLYs5bU0yptcj97lpjd5l5RvQuENMX
ptRFMeetKabUTvRz5iZ212kxfWFKXRRz3ppiSu3ExO57Q364L8qr/sj5bZE7
+WoPm32ZP6F5l8s9uYbY/B3yH9bgLcxk4w9i30Y91PeH3sQrSEy5Y/IjYTcL
6U9yD8vYb7n2ShG5rV/1193L5Ua//qZv67rVtXnXSnW+qM4Id5voSpK4XYhf
Xs27Tky5e+THxm4j4mg/h/4j9WNKHZafKiyx6Jc0U9TiR/u1BfyatijaeAfN
Pcm7bb3nRc2xxoV747WPNn1RnRFsZmZlZUVHR99GleS94YWFhdX1e1tEWqYX
+qpbr1w3Rbm715DaCRPyQlJu/uUqr9j+Aa2p//MuFScm3+Ad3LqkZ+RnZKlv
tb5ypSwhMafE6iXRtZOTkSlBwfEFBSXK7RiXKUax+Qo2pZp3nBnTtxe7BQoP
Hjy4YcMGYbgW9La8mjdOWr+nUrHa/6mhlrFfvcC2bdsmTZq0cOHC5ORkvQzD
cXJyGj9+/Lp162S1l3zGsn379urGYtMCd49Y+0LX1sIIumF100mtuXPn/vGP
f5Qhi6ltukkxOKK6YuJxwPThhx8+cOCAUvmGVmsP6s0GBgY6OzsvW7bMzc0t
NDTU4qrNF3RKvrQcHBz86KOPSuyhZ+7fv/+tt946cuSIUunKmqeQKXdebM3b
indZCuPQPWN8o+UNXx+pVK57kafS9h86p3V0bcu2qOycQsWwVNbs9Zu/Wqmw
+r+07Grn3h7+gafK1U6vWjRiU1Vb07Liu4YF+L9uY3hPe++Kr1v11eX/F9O3
zpi7k8SpM2mtu7qeT8xRaly7rF8VajSyoMdyt+AGLZf1Grg6JjZLUZTKJ4mt
Gyk3+qu6L/stWaB6tW18l60bsTk0vYA+SQ5ok0RbOizHdTPaGvJvMCLjC0DV
fg+f0wscCb3gturoRr+Ii9mFepncvCLmkotHyJ4DcaVl1xTj7P1xsPujjz76
+OOPSYwbNw6U1KsbSa6kLWivNXxLGeN7oo3VLQo0bdp0yJAhJDIyMpo0afLA
Aw+88847r7zyyhNPPBESEkL+nj17nn322eeee+69995jtX/jjTfi4+Olbu/e
vV9//XXrsdDm0KFDlUqMuzvFwhcCSVBpCyMILJaWluoVZbOaxOzZs3/729/K
kI33CGzGVEr1jtPzo6KifvGLXwCgop7NRvQ1529/+9uTTz7ZuHHjf/3rX9Tq
0qVLcXFxedUXqVtoZUwzdoZ55swZYzFQu1mzZsePH1cqwwm90+pmoyl3WCzm
LVBVWFQxOQ+HJEydVSWWrrLqWt0QqbpsVix9E6ZuXbhMjR5PR6e37eZ2u+iw
TdGxu30PN9+ASAtVbb5A3Kb+xpKgP//X+IR16eNpfB15RclrVapL/vgvA6bO
3kEi6nRa847O5y/cALuVqgYxtnn1qnxNylt2dnH1ClE3da22eQ2NWHrHOt+I
oRZqG/Orq26rcb0RxWYVY4/WNFafJAsc1GVqhfuRFR5HFNveqdaJViMqtzVM
C/Za0e8ibXIC0GMm+zdp6zTs8029Bq1u3cX1zNkM8sMiUtp2d+vUy3342M0t
OrkMGLYuLT1ft9jtxW4pU1hY+OKLLx46dIi6jRo16tixY15eHplyNTMzMzY2
1qKplJSUuLg4Y6fSLFplZ2frZXTmKE0B0CzXugJ6v6Tt7Ox+/etfh4WFKdq6
vXLlSurm5+cD3A0aNEAf8s+dO/f88883bNhQWhs4cODbb79tcyzQOqUqdtxt
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
ZRcInOkCgiQkVqx78ki4Tf0V7fxVXHyW0DdFuy0uyjN2ydQXY2wl9/SxmP7z
p0nJeXnaPgPfqgtJN/gxVYagP7cuzdLdufMX9ceTySwsKhWP2Cwgj+ZZAITF
EErLrulDBq4ob3xInyHoekozFtUVMW9pxU49/89fyJFnwYyNJBuexTZqVa71
qO/zF2pDprXDR85b7Mxjt9i46/1aq2HtROPQ1If91U4rFCiqtBuSlpGPowWr
g6z6VTQOTsvZORXnt3XroMP5hGx5gt4otxe7rcWilnEhNZ73vlW5mVpGDqWv
+Rbnke6ZPdLqfGHTCNX9QJnNzOpOcN0w0yJ982Y3lrSpannVV57V8NN81Slg
Pah7ZibULalhDTH6B5Rs1dlls3+E4ap6ubrf9bqrpIaFzqb+1r8bVl2t8hqL
1U5u+FaOm3ltxw2HYLhabv2x5uoWvyZXXSO1EIt6tn7A7cdCK5s/kVdu6xdc
jc3eXuy23nW02B0tt/XT5dcqfyHXWMxYoLq03pTN3U7rvmrIL7eSOrSDWuMa
eFM/IK9URbTqCthsxBqaba5XFve4q+v6ZjSxzrc5SW446uoaN+XOiM3nTA3u
k/O06nbuyPG+ew/Gqekyi1DN5uQxAJzVb4BbePt2fTSqrVhNaZs5NvU3ZCpW
hS0z9brltoqV38TLQ231Ym3SWytgcwjVpRXbtrKufgNj2myk5rTNl30YlwOb
ath04k2kr9e0Gf/YnAk2ddAbvCffI/a/JqYvTKmLcvPz1uLdiKaY8j8uJnbf
G2L6wpS6KOa8NcWU2omJ3feGmL4wpS6KOW9NMaV2YmL3vSGmL0ypi2LOW1NM
qZ38cOyuQwe67mHBC6YvTKlzYs5bU0yptfxA7C7W3mtryk8reMH0hSl1Tsx5
a4optZPS0tLw8PCyWmE30fKBAwcOHTp02JSfWvDCvn37TF+YUrfEnLemmFI7
CQ4OlldNmby7TovJX0ypi2LOW1NMqZ38EN5dZt7vvmvEvG9oSl0Uc96aYkqt
xTxnfg+I6QtT6qKY89YUU2on5jNi94aYvjClLoo5b00xpXZiYve9IaYvTKmL
ck/OW5u/Pv3DGryFt2BU/UH426aH+grRm3gLiSl3TH4k7L527dpPcg9L75f/
ckNff523CGmLO/7l2jtHLDJ15X+qgdyq2PRFdUaoTm71m37D8ljP+ohFLToy
5V6VHxu7jYij/SL6j9SPKXVYfqqwRO+X/0zOq9pHi1eZsHKTr/5pCYuX7Pwv
8O46gb8/RG7GF/e8EUypc1KH1pCbFNbJC0m5+ZervGX7B7Sm/s+7VJyYfIPX
cOuSnpGfkaW+2PrKlbKExJwSq/dE105ORqYEBccXFJQot2NcptQgNxlI3Hbs
lvcgHzx4cMOGDUJyrZnvzbySsrzyJZLG/Z8aakm/Bw4c8PHxIbFt2zZnTXbs
2JGTk6MXSEhIcHd3X758uZOTk6OjIwUyMjJWr17t4OBA2tPTc8WKFaS9vb1L
S0ulQQZic/h3lVj7AoUDAwMtjFCDI8RZupH1/xZvzZZ8CQMWLFjwf//3f/n5
+bJ3YXS0JOh36dKlWBvDurq6LtPk8uXLS5YskYpKpVttvgS25ilhcyKZUrfE
1ryteJ2lNqmuM2XjSy1v+AZJpXIBjDyVtv/QOa2ja1u2RWXnFCoG6Kl56tz8
1UqF1f+lZVc79/bwDzxVrnZ61aIRm6raWtmUyi+a+u1btzG8p713xTel+ury
/4vpW2fM3Uni1Jm01l1dzydafvGtqlfpUalqZIGR5W7BDVou6zVwdUxslqIo
lV9W60bKjf6y2emtWqB6tW3AgXUjNoemF9AnyQFtkmi7rJbjuhltDfk3GJHx
HaCRp1Kl36PHEwO2n976/eljYUmXtehICqRn5m/fdZZLAYGnmFFbd5zJySk8
cCi+pKRi9/LHwO6PPvro448/JjFu3Ljx48fr1XUg0NPGHIte9LS899k609iU
3u8nn3xC4pVXXnnyySf/85//PPfcc48//jhILSW9vLx+9rOf/fvf/65Xr96b
b7753nvvnTlzpm3btqRfffVVLr388stvvfVWs2bNCgsLpcGhQ4fKYJW7WIy+
0L/If/vb36yNYO0IAeK0tDRKpqSkKLZ8bWFt6cjFxaVly5aXLl0iPXHiRKOj
5T/e/+c///n2229j2Keffvrdd9/F8ufPn1+1ahUVAXHFagLY7E5PW8QG1mlT
6pZYrCFAVWFRqaQPhyRMnbXdWLjKqmuYZpVXrxfTtxYnTN26cNkBEqej09t2
c7tddNim6Njdvoebb0Ckhao23yFuU39jSdCf/2t8wrr08TRullaUvFaluuSP
/zJg6uwdJKJOpzXv6Hz+wg2wW6lqEGObV69W7Oi27Ozi6hVyTdu8NRaoqoCl
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
i/L0XU7q/8eMldzTZ8T015/GxGZkaOsM2dnXr8bc4mWqdEF/bl2qpbnLV1L0
x5M5Cd0Ti9jMII/mWQCERRcKi27qXQavyG98SJ8u6HpKNRbFFRnewpKVen6v
XE27lvSj85FKYg3PYhu1KtZa1Nf5c7UuU9vRY1csVuYZt/CIH9u1VsPaiMau
qQ/7q42WKJBXOm5IQmIWhpY3QfqXbZdJlZNTAOJbvH5HfVVRrnpe/zOun1ct
dluLRSnrd2RVji7dUSnja9nuVbmlLSwGwebLyioQi/zWRSpnx+bNm9euXVs2
IhIzPPvss3KD3gj0Niu/U/1NqZ5Swbw1WhWUhJhs9DtnuKpeLu+9XtVKKnB0
NvW3fm9YeaWKK8xWObnly7Rv523bt+yC4Wqx9WHFxS3eJldeJZUQi3K2XuD2
P0Cr211CrHLstl5hLrZ6b7b1e6ptvs7amKG8tMUbto2XLCq0eakCo9eIpXJd
bNqigkFQyjeEwKLNwbH5IvqKM1hnE5FWgoOD//73vz/11FPvvffe888/P2zY
MOabrrMoY3NKVNycKTVFbD5narC4uDJ1OXfEuE37D0eo6aIycXhxseVclSMj
hangVZZVeGhUWynnP8iWO7KZU7H5X2t9Ui9bbCtb8W18PNRWK9ZDemcZbHah
vLRie6ysi99iMG1WUnHaOg6R2WIMiqzVsGnE20j/WNKiXa0V7U+xlB8vFdsY
tF/Cd8TueanRtoiIiDh37py8F92UX5Tc/ryVJ7D+ByqZYkqNEBO77w2pobaw
uJdxm98ZN+WekRo6b00x5WcXE7vvDam5trBeGzfllyM1d96aYsrPKyZ23xti
2sKUmijmvDXFlMrJT8fumrWn614VrGDawpQaJ+a8NcWUSstPxO587bu2pvy8
ghVMW5hS48Sct6aYUjkpLCwMCgoqqhR2Ey0fOnToyJEjR035uQUrHDhwwLSF
KTVLzHlriimVk4CAgBMnToDCJu+u0WLyF1Nqopjz1hRTKic/hXcXmfe7q42Y
9w1NqYlizltTTKm0mPvM7wExbWFKTRRz3ppiSuXEfEbs3hDTFqbURDHnrSmm
VE5M7L43xLSFKTVR7rF5a/Ml5D+twjv4kkXZV8FXmR7qx0Nv4/sjpvyP5S5h
982bN3+We1h6u/xafDbLqE+x9g3rwsLCIu37oRVn0zP8XJ26HbFpi4oHoZoI
Ot/yK2/mK9fuVbl72G1EHO1d6FXegik1Xn6usERv1+KrYSrilP1KGhmYvTZf
5v8L5N3WHbkHvhBaQ21hyi9c7qV5i2O5GpOelV3m+9o/oTb1NyMzPzr2Fh/g
1uVaYlZisvpJ6+vXi6Ki0woKqyZQPxsc5x8QmZNToFRFv0y5TbGFU5bfTata
7BYcPHz48Lp16yjCVYsPTBSX8ylJ6+9RKlarQBWUknYPHTrk4+NDYsOGDYGB
gUrppzxDQ0NXrVqlYzSMG/XGjx+/dOnS+Ph4PRvFd+7cqbeelpbm7e3Nr5SS
Ttkcip9dbNpi48aN1oOgU+/yDFFeWs8syxG3aValnK/miVDEy8vr2LFjxuYs
qiItyyN6bYrVxLidGWVKNRSb81abYD8yZePnLG/57Uil1MUFX0g4eOSy1sTN
zdvOp6blKgboqXha3P7VYoOGhUU3Ovby8Nt+oVht9IZFJTZVteXTSmY4I8Dv
mvVB3e28JZv12oHFP8XEaVunz95N4kJIQsvOLlei05QKnZX1d0KNgyxAscw1
oG7zpT0/WxkWnqyU8kTrz1waT5a3zn+nI1C+2jaAwLoSm13TM+iT5JA2SbQ1
Sct+3Y62hvO36JHx65/BF+KlXf+AKxGRKfp54rT9h8J1QzMHDvpfdvY47rtV
n8BlXO7dwO5GjRoNHDiQxNixY8eNG6cXt1jCVaw4r03s0D8qbXHSWJXe7uef
f07iySefHDFiBIm8vDx+58+f/5vf/CY3V+0+Pf3www/vv//+f/3rX88//3yt
WrV27Ngh9bRr16527dpKKdidOXPmV7/61enTp+Vq48aNhwwZIh1XqpkYbaEP
0TPPPGM9CBhUKft18ltinHGoCXv4nThxotGsxtosluWtDWfMduTIEUb43Xff
1bNZt+Xr69umTRtjJWX/B8tMg/KmmSnVUyx8iHiwo8ejvpq5w5itjMWt5kBZ
t1lSyfivty5YeojExdBrrbu4VhUdtik6drft5rppS7CFqja/Hm5Tf2NO0J/f
VT6BnXp7Gr9FXpKz7MqqnB/31Zavv91F4vzFhKbtna5cvQV2K2UHxFjnjRsl
K7rNOzq7eB1XV27LLi+XVcDSOtbnjRhqobbxfHnFbVWuV6LYLGJs0XphXJ8k
8+0Pkljufmy5xzHFtnXKNaJVj4ptddOC4GjtfrVlkeNhEh16eSx1OUqioEA1
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
ouTtFqFhiVSiGCYAYKQ7RhgWvN5YYaWvomfJo+ja497JqTkCZ7qAIFHRJfNZ
Hgm3qb+i7b+KiEwW+qZoLl2Up+9yUp/LsfEZck8f7NBffxoTm5GhrTPwr381
5hYvU6UL+nPrUi3NXb6Soj+ezMlc7bnj8jLIo3kW/18WXSgsuql3mciB/MaH
9OmCrqdUY1FckeEtLFmp5/fK1TR5FsxYSazhWWyjVsVai/o6f67WZWo7euyK
xco84xYe8WO71mpYG9HYNXlGW7qAAnml44YkJGZhaNku7l+2XYobD9HNYtYx
4FeupmaUrh0ZpWqx22b9xkMj/THC5Z3KT/TGFmoYa7P4FklNcft3+l5omyNg
7Gx570PTN+cbT1q8pe3OVC9fMZttVZBf74j5XrWaIuW8E/XHNCjZoqPzRr9z
hqti4mKLM9VQKnBxNvW3fm9YeaWKK8xWObnlVzlu57Mdt+yC4Wqx9WHFxS3e
JldeJZUQi3K2XuD2s+BUmUliUVmVY7f1qnJx2TdLF9t6dfnN0vfkGrMZM5SX
1quyaNcadq0Py3sXqPWlartUrkt574WuYBBsjkBx2feWV5D5lma1rqG8Sxba
VtyWzYLm+8xrqJQXc8pKL79FN26OGLdp/+EINV100yKPxQyXI+MbRCt4lWUV
Hhr+C3Q1LGejrXlrM6cNL11ag/UZ7T/CVrbi2/h4qK1WrIf0zjLY7EJ5acX2
WFkXv8Vg2qyk4rR1HCKzxRgUWath04i3kf6xpNX3RCzqK2/ALbMpd593m/K/
EdMWptREuZ15a/MDiKaY8gsXE7vvDTFtYUpNFHPemmJK5cTE7ntDTFuYUhPF
nLemmFI5MbH73hDTFqbURDHnrSmmVE5+OnZX/31cvwSRN7iatjClZok5b00x
pdLyE7E7X/u6rSk/r2AF0xam1Dgx560pplROCgsLg4KCiiqF3UTLhw4dOnLk
yFFTfm7BCgcOHDBtYUrNEnPemmJK5SQgIEA+qmXy7hotJn8xpSaKOW9NMaVy
8lN4d5F5v7vaiHnf0JSaKOa8NcWUSou5z/weENMWptREMeetKaZUTsxnxO4N
MW1hSk0Uc96aYkrlxMTue0OqxBblvLC3nNfp3olU7oMg5TVtfl7knpF7z4dU
xb+LRYV38EkL479MFeqhfkX0Nj5EYsr/Uu4SduNdf5Z7WMZ2UZh0YWFhkfaR
UIucNzQxnjFmI2E8/Lm6c/tSni0qHoSfXdDKAoirREkL91UNO26KyF3FbiPi
aC9FvxuNmFKz5ecKS4ztygd0mKI2X91fnob3Ku+2pmY2yZpNr14TXb1NW9ia
BhUx1qioqOjoaIuCNk/ekcg3wXNzc++0Eoum5Zd6qK2af07dlNuU6uxDKiFM
0asx6VnZZT60/RNqU38zMvOjY2/xJW5driVmJSar37a+fr0oKjqtoLBqGMfZ
4Dj/gMicnAKlKvplilFsgvVtFqxa7BZ0OHz48Lp164S9wvvKfjPutr7YqLtr
I4eqoJTero+Pj1yFbKLD+PHjly5dGh8fr5RFrt27d2/YsEE/zMnJ8fb2TkhI
kMOMjAxHR8fLly/LoXTH5iBUE7G2hahawSAUl4p+smnTpt27d1e0RQl9qYGT
Xbp0UUo/hFqBpazNKqYHah944IFDhw4pVl/69vLyOnbsmLESYeIWTcuigSgZ
EBDw4IMPUqeutkXTpKUSzqSlpdWuXdvBwaFi/avkvoAplRAbPqT0M5pGpmz8
ruUtPyKplHq/4AsJB49c1lq5uXnb+dS0XMUAPRXb+/avFhs0LCy60bGXh9/2
C8VqozcsKrnNe1L6IjkjwO+a9UHd7bwlm/XagV5cfidO2zp99m4SF0ISWnZ2
uRKdplTotYwDa2xdjgRDlrkG1G2+tOdnK8PCkxVFKf1cs3UlxUZ7lUeL7mgE
ylfbBhZYV2Kza3oGfZIc0iaJ5nYs+3U72hrO36JHxRbtHi3BFwx90P+ys8dx
3636LP2x+OmgWP9jV/RD8W3KXcPuRo0aDRw4kMTYsWPHjRunFzeip6QrWDI1
emMj4hiLW2Ro3LjxoEGDFI2yffjhh/fff/+//vWv559/vlatWjt27FBKHXhW
Vtajjz76q1/9imxSA93ncPPmzVLVp59++uKLL9JxaY5qhwwZIl1WqqVY2ELg
CdJqcxAsbgHosNiwYcPOnTsrGuLrVznZoUMHxWp9u7y0tYHOnz//29/+9uDB
g0rp+MvvkSNHGPN3331XB1Nip//85z9xcXF60+3atTP2kV+6+bvf/Y46lbIT
Q8/g6+vbpk0bOUMM1rx5c3d3d6U0ILHQ0+Z8M+V/JuXx7qPHo76eucN4pozX
tWG7H7MVl37Ce/zXWxcsVSPGi6HXWndxrSo6bFN07G7bzXXTlmALVW1+Rtym
/sacoD+/q3wCO/X2NH6UvCTnzTLF5fy4r7Z8/e0uEucvJjRt73Tl6i2wWyk7
IMY6b9wQj13cvKOzi9dxdVG37OJtWQUsrWN93oihFmobz5dX3FbleiWKzSLG
Fq3JrD5J5turrmm5+7HlHscU29Yp14hWPSq21U0L6lpmcl5Lyh74hU+Tdk7D
Rm/s1MeTiOvUmRhdvdy8gjbdXOu1cEhMypIasrOvy4fsqxa7i0tXNV966SU8
M2Xr16/fvn17XCgn5WpSUlJ4eLhFVbjriIgIY6NSLVqlpqbqeWJjY43jk5iY
GBISoitAEwAu7ZJu0aLFE088ERoaqmicGgf+pz/9KSUlRQquXLnylVdeef31
12fPni1ngLn77rvPz8+PNFHHH//4xytXrkhb0h3onlKWNlYrMdpCx+LWrVvb
HAQpQrbIyEgZUj3y6dq1q15hcnKynOzUqZPeEEz20qVL+pI1A5Kfn69oKElt
es2SAIsZWMzNeFpj9+DBg99///3nnntOH1t/f39QPjAwMDtbXfcDu3v27EmC
GkQZRcNuLKVjt1J2RqHYjBkz/vznP6NPXl6eYjVvOY/+xklL/KZrbsr/WCx8
CLbKzS3ANXmvPdPdbgXpggJ1quRfVzPgFWLiMiyccHRsulAVCyFzz8+8z51X
15rcvU9OnLatsOhmYekaMk0UFpWkAam8/ELt9TA37/zqTa4qBuxu191t934m
2M2o6DSLuZeSmhsXn2Ghp7X+6Rn5dFM/BLvpiKKth6emW/Y0PiEzKSVHKZ3n
47/eMnVWCXY367D8lthNv+SXeiTb9YKiqzFp+kBlZOaD3Tv2hBYU3ijS1gEs
MmCO65p10tLzklNypCmLLpBZrJacmpukLekrBmij+3HxmcaTFsV10YugbUpq
jvES1SYkZumHNCczB/2TU0py5uQWxCWUaQjNe3zmfT7kGhqOmew39btdTDlO
VqCGhRH1riUmZUtwqOXJ0RsVSc/IY9D0qSvtXghRgXXS9G3gtTTEPB8/dWur
zi6ZmdfFHPsORvQasLLP4FVrNgSJ2tk5dwW7xSfv3r0bZOT8gAEDfv/738Nw
n3zySVdXVy6NHDkS+Hjqqac++OAD/C117tu3D25IBhxynTp1pK25c+fWrVsX
v03mxx57zMvLa8yYMcDQH/7wh1mzZklbwO7DDz/8zDPPvPzyy7TIGUglIIsO
4AWETlrkn59fquXM4sWLpWzTpk2HDRs2derU9957T87Q/d/85jeACG39+te/
3rNnj1JKP6U7Uk+1pWZGWwiiEXvYHIRFixaRtre3J3Rh2MHKIUOG6KslwDR9
JExiVBkfRQNQoi8SABzoTxEMCjgeP35c0bjzO++8g3XIjwUZWIIE4fWjRo0C
ssn/97//3YjdMoaoBGqvWLGC6G7o0KGKdmPi6aefRp9atWrVrl1b0WKPf/zj
H9TJHMDWctuCbEyD4OBg6eno0aNlRtFKfHy8i4sLbT3wwAOPP/74F198QZ5X
X33V2dlZ0Ww3bdo0lCcz+lMPJ4lVyIySTMKfeFvflEqIhQ/BxU2fvWvdxqDG
bZfh0HBi9k5HsMjno9ZPn72775DVLTo6d7fzDg1LJDN+ePAIHwh1m66uM+fs
wTHm5hVOmLp1+241WD0VGIPTE4gZOWGz79YLy1wDJk7dKg1N+27XsDEbxdSL
HA9/N2/f4mX+k6dvu9OrS5b5fzVT1rJKgK9LXy+ufjZsLZCHf74UnsT5wHNx
g4av69jLo3GbZcPHbUpPz6N4/LUsXf9v5+6RFXJH16OcIQDgUqyGEavXB9Jr
aFr7Hh6N2znZO/lLW1t2XKT+Dj09GrRyhMEV36wIuy1EagCyh43d6LbiRNd+
Xp/9dy1n9h4Mb9/Dnb+OvT1OB6rsb8T4TdRPVTN/UH3snv1hkqFTb4/jp6Kl
oSEjfTxXnWrQ0kGIpIOLZRfWbTo7auLmHxbup2CD1o7OnsdlxLKyrjOYLTu5
kP/zkevTtMjEWDxeg9rSJTJ1wCOjUhnJ1l1dW3Ry+XbOXkVD50nTtjFVWnVx
GTnBFxqrqLcMrtEjB+ejmKNha0dXr+Pbd4fQTfoybdYuojgh0aeDYnsOWMnI
z1tykEttu7tRM4EKl+yXHzH2otjKiMQqZPOhaxN8mSGtu6jTdff+MCf3gHbd
3Bq2WUbQJRMGCzIZOvR079zX83SQOqowa+IxlADxP21mv3PvJaV0mSUtIw+W
vWnreSk7Ydo2LM7wDvxinZy5S9gt6REjRoi3v3z58l//+teWLVvSRFZWFnjx
4IMP4vNhanhsgIA8UF08PwwarLn//vsFL8BlUAaXfvHixY4dO5Lu3LkzVGvQ
oEEAKypBxgWGgFc885kzZyg1fPjwtm3bKtqqKUAcFhYmICKaA1WfffYZCRjc
Qw89BCLj/6mNbIoGTI888gihBdVCBhUNZQS79e5UW9KtlLWF6MnAVjAI33//
/bx58xjJzZs302UBsnr16vXo0YPEu++++9FHHwni62vmERERAwcOxJSQ4n/+
85+ffPKJot19pjiZT5w4sXbtWtKy3wDTkPbw8CAMkFGFUyuG7f2MPxBMEwRj
ICknc3NzlyxZ8rvf/W7Tpk1QY/IQSADl6EmY9+9///utt95SNN5NQIgapBcs
WGCcUWA9id69exMDnDp1KjY2FgsCzWRTtHAFNZgtTDbO0J2tW7dyJigoiOmE
wmlpt15gNKVqxcKHwOxi4zIys/Jnz9/XuY9naHgi/AVPhc/HxwaejYWe9P98
DTSEzAsdDrft7g6FuXwlZevOi9gNTlS/leNSZ3XlbYmTv6BYRkYe/hYqRJ4m
7Zzgj/n5he26uzdpu0yYWtd+KzZsDt53MJyA4U6v4oEh9VpHVHdKqNCpt2ev
QasCz8bFaqr2+3w154+fuurocpTIBO6MDrhiToIX7XqU6A8QM/E2bjkPSoZc
ShQaOGGqGi2ADv+uv8jF8zjUkmy16y486K/eJ127IQhMJOfRE1F1mtoHX1BX
GMZMtoHd5UlBQRHaNu+wHOxgnEMvJTZqs4wmwDKPVSc79/VCt/DLySjs5n2S
AQwNS2poyEDZwqIbBCcfN15CrHLs1NXcvALfreebtbfswtqNQf/4ZP58+4PR
selAc72WDrLUMOP73U3bO507Hw9Gr14fxPBu3lam+JRvtiuGxeq8/MIedt6g
GGB6Njjeb/tFTk6dtRPADYtIjopO69bfa/jYTZwMCU2s02QJUI7+YGjtegsH
DfcJvpiwa1/YRw0XnzkbKxUudT46TRsuFLD779rJM7ZHRKYQAfqWVWOSFrYF
nIwistKN6LFSNeKaDYEf1Jm/2NE/OiYdTT78dAGdIsCYb3+IwaQ4ZPzTZkuZ
Qgza1h0X0Udtd/kRuSV05HhUk3bLmCoSUElH+w5ezdwgwT8CAcmZoNgrUalM
PwmEMrPu4pq5vjsIwav3799f0uB49+7dYTd4ZlwldElWNRFgdNmyZRCxbt26
cThz5sxnn31WLq1atQp/LguzQAzOHK/LITS8cePG586d05umXZw/aSAD2JLb
pvp2JogVEEzC09MTEpeSkkLrVPLtt99ykjADFMCTN2vWDGhwc3NTSkFQ7061
vdmtlLWF/Hp7e9scBLmjLXLo0KG5c+fSX0dHRw7r1q3bt2/fL7/8EkNAnyUP
ZJzwSS9ChStXriTniy++yCG4CQQL1CJQ5h9++IEEZFwQH4mJiaEJnXfLqDIr
GFiw+9ixY9hU7nTs27ePnPqOQZrW73cvXLgQyiwtkkd4N60YZxQwzUnI9Usv
vSSlmL1wdlCbNNBv7Ih0H4uPGzcONK8CG5hy51Le/W6PlSd7DvCWNA4Q+rNj
T4gcBhyPqtt8KTCx0S+4XoulwpJ0gZUIgR365QZfjbzsPxTeXwNQ/HOjNo5h
4UmB52KhinD5bbtCqAc/fDkyBTSBed3pVaAHD6+U3h3W7neXUZVS10rXci9f
SSV+6NjT49s56rLeKp8z9Vs6GPUHAb+duxeMjolNp3f4bUVFh6AufTz1PHZD
136/YL9+ePZ8vI/v2fqtHATI1IXfMtit3nAE8tT950nZ8nctMVtWdImUoPyg
sFRFtNNr4EpyXo1OCw1LBCwAa85Tz75D6g3NRQ6HjRnAJqKOqKtp9OKsdm+i
vC4QZgD0kiHySiqDxpASGADiDIjRfBbFIcKyciI2PaqZXl/3VjR0Y4R37yvx
P/BZMtA7IBjDyUI0UQfpk6ejpR5UIvxQNCL/39Eb/LZfkLJQ6TmLDthUg2iN
OMemEVeuO9O51Dr7D0c0buMkOYkTaDQuIaOg4EaHnh7jvt4SeSVFV5t2hVnv
2nepcVsnWf/Xd+Awdad9pxoRFo+29JGxat/TQ4h8RmZ+lWO3AASOFNaj3yyG
LvXq1Qt3DVC+9tprL7zwwt///ve//e1vb7/9NtyNyskJoLz66qtkAw7k1uo3
33wDfHCVOsHu++67D05EGu4GUghe4+2pHLcP4YJh4fCffPJJ2RlONnyyfGMF
5iVgAUyPGjWKhBB5FPjLX/4C7/74448VDV9IEwwoGqyAQbBL9GdY6I5saavO
jMyad8tOsPIGYcuWLZgDE/Tp0+ePf/yj3E1o27atbOHDTBhdX0gXFAbNYeVA
IegP7EKWOQnygqRYhMwA8TPPPCPY/cgjj2BEaZcJZsRuRZtUL7/8MlCLCYBU
Whw7dizDi1bkhGVLNlnDlz1maKhjN7Gc7DN/5ZVXjDPqgw8+4OSkSZOYSLKz
joYIESX0ojgcH5U4iaoyVitWrGDuMamGDh1KQFjeJlJT7pJYYzdTBgs4exzv
8Zm3PO4q2L1pS7D2AGwxNK1p++XwF665eB2Hc7Xs7OK3TZ0Puu2SknMAC1lx
nbNwv4AdF3vYQaLPua44AeFy9ToBu/cPuIIfFmfYvRJXe5VcLVG1yFLVJu2W
Q5pAAXgfPaJUx16eMzW3j1enHlX/TiVoAjJ26es5eITPoOHr+g1ZPWTkekXD
btBB7qvSyNivtkyZoVI2uHzXvl6DR6ynd8Dopi0qFlhgNxCmaAvdADFBhbY+
79a8o3OfQavUB4BuFnOSpmXr+Ldz9sLBaR1iO2DY2r6DV4HdXGK0IeaMHozS
mIFKwG6aoCHQnJwo2XvQqs62ukC/1I33sKTIFLAbBL8akw5sgXHoUaRtRbAu
DsbJVgdtVhTDXlt1cZWN1mr+ohvQbdSTSjgZE5vBIYEEY960nRP8l1JMhuYd
lweciCJDfn4h8YAEdQnXMpkkElmRbdiYjd/N339Du31voQZgSnMJieo9Dt2I
02er4+y99kzXfur6AzWA3YwtRJu0jD8KKNoC/tAv1zds7Thqom9yak5aei7T
JuGa2i6ac/6SNs5FN0o2kDPlIPgkpn+3q05Te6K1fkPW1G3uMHKCr3J31swl
sXz5crBYzw+89uvXTzLgqGXzufHhXBgc3Fwe/gU7WrRooWi8G+yWJevVq1eD
3enp6hOOgDJp8dsigYGBzz//PI6XbO+//740mpmZ+dBDDw0bNkzPtnv3bgCC
X0II+PWUKVOAkgMHDsyZMwdySt+Tk5MJA7ZvV5do4uPjaQX6SRq3b+xOtRWL
vWqKtpfe5iDs3LkTkLr//vvHjx8v5x9//HFZVYbkMghkAw1bt24tV3Xsnjp1
KogsWwqdnZ0BcUXDbv3uM62D3d9//z1p0FMW5xVtLwF5BLtlHX7Xrl0Mu4+P
D0Qb8gt3lkgA3cBu4igpSCilM2WwGxSWFrFOSIhKbd58803rGTVhwgRZE1BK
effSpUsV7X6B3BGwFl9fX0ZGFh+q8+rKvSfl8W4XTxW7JY3bBGJ0brVjbyhU
CzJSWsMNd++T9Vo4iJ8U2bozBGqsaDdV4VD7D5Xsg12w9ODoSX6jJ/r5B0QG
nYsbPNwHevVV6Yb2BfaVv1qiauletRJV94TCSYkTx3+9BWgQGMLnG0uhv9uK
E+gP7gAN87Q9z4WG57JhWz3svPVDcNzR5Sj/4y06OTu5H5OTYAFxhaJhtzwj
FnwhHhy5Gq26zczM/EvhScCc/JGGPGpN32zXw21z6a3VBQ6H+w5RFyhuGB5u
A+xoSG7Izlty0DoDwAQy6oPf//M1ctfb2IXV6wMJM4Q7A/cSVOTlF8KRoZbG
AQQorYvrcuhoZP0WDomlu90U9YZIfoOWDvsOlmxVDTwbS52JSdkRl1OatS/R
Chou2K1om8TossQ5MO6ho9THhKUzGEjn3f0+t6HG6Embvxi7STeiLKSr2E1Y
onVNw+7lYKuixU6kowz3LIg2mRuLHf0PHI6QkEZR91cXtuzkbO90RM9GF/7T
cNHpoNjrBUWtOrswNwhFgoLj124827jNMsLRAi3IUaoUu4UrQcoEL8RLN2/e
/I033qByDufPn4+H9PPzg8EdPnx4//79ikadgGzOrF27FkAR3j19+nRItGA3
vBs/L9hNKWqAXEPNwGs4O1gM0HTt2tXOzk62PIkbnzt3LjnhWZGRkZs3b4Zz
yf1ZNzc3zktt0gXA4rvvvkMB0U26CQBxGB0dDS2Vaqu5S7dpC+tBIFJSSjet
cTUjI+Prr78mLavKDJHETsLZ5c51w4YNGzRoQAIsxihpaWkwX0BTbmoEBAT8
+te/lpUQWofXQ7cVbe8B5/fu3RsbGwti6ve7xaY9e/Z85513dOWludOnT1+6
dIkE4Z88XEC7xjVzQhESZ86c0WuD4xtnlOwwlJOyWZ0o5eGHH5bIhICQ82vW
rCG0W7JkCTVA87/66iuCHJQkaJGow/h8nCl3W6z3maekqmG8j++5T5rah0cm
5+UVgn0denmMnuwXG58J6LTp6jppmuo2V6w5vW13KN746PGoT5rZh4Un4e6m
ztp5KjDmh0UHFjqoWzjw3p37eAFeUj8OHIravod7ekYe2NFZ28i0pXTZtjJX
Nb6ck1MAJ5XHhOHRoyZsjktQVSU9eYZKB3oNWDnlm+24/YP+l0Fz4d1eq09v
2xUi+tdpYh8dmwGakAg4cZWc5y4knNH2NUFaP2q0BIwDFFw8T+DYQQEUqNNk
ic+mszm5BZ6rTtWut1C45JgpW/hjGKHMDVo7XrxU0c0gIo3WXVx8t5Y80XYh
9BosD61oPTo2/XCA+vAF2N2k3XLBbvDImEH6ez7kGqQ+MqoEpNZtOvtpM8su
eK89TXQh2A1qk5+2SI+dsqV1F1diCaio56qTmB5Uxe56cWIkRdsfrg7v0UgS
WH/EeN+k5GzqYQLQ0ykztmMUUBJc6zVw5RAtZrtwUdVKQhSwm/TR41cUDbtb
dXHZ6Kd2makioClPDUyavh26De5zuF6bfiVqqNAZV2rEHWJEAgZUUo24hq65
C3bvO6RuihDsDr6Q0EiD2rj4jEUOh2H3BQU3iM1m/rBnzuIDi5eJM1TbxYi1
6y5cue5MwrVMZkLTDstHjlf5NWPOBMvW3oejaAs7Tdsv915zWtG2RCpVh91y
FVcJgZKHiAW7YbLQOvyn7tKhvbj9WrVqzZ49mzPu7u6ceeqpp3DUYIe8GwQ6
DEmXmkEQEAGUUbT1UmoDiaDesjsdefvtt0EQIoRt27Yphp3MuGIyQ9YICbp0
6QKz5jw8rkmTJophKxqX6tevn5iYSGb9GXCUf/fdd8n81ltvCRmvzhvVFBs+
sNjmIKSkpMj4EF/BhZ9++mn49V//+lfZJ9CyZUtCIFkqHzRoEENKhbBRysKa
AdYXXniBqhgZwi1ZoD516hSmFBZMzWD6vHnzFO25rWbNmkGQMVCbNm2I0GQ7
nKKBI7yYiELWtPmVM/BlrrZq1YpSr776KshLHNirVy8p5eTkRB65+UJtzJZi
7XWvo0aN0meUgG9UVBSBATq3b98eO7700kuUVbTJSRhG5Uy25557jtmCuanq
+eefZ342atRIHiGs5gss95hYzFuc84BhawHH5NQcuE+9FkunzdqJ0+vWfwV+
teeAlepjsGM2ylNRHt4n23Z3g4fCsGR/GudxuRDkgV+sO6L5aq/Vp8QTymok
9RMGgG7S3PTvdlFh/LVMvfU7vRqXoPolmODHjZc4uKjrnDQ9aoIvCuNpVVU1
krhr76Wm7ZzadHOFF48Yt2n2gn2K9uSarr+Ds1r2ZnExHYEvcxLcX63d3/Tx
Pdtn8Cqq4gyXhDMySZc4+ePbwcQpM3fYDV0rD5WDSp82tz8TFAun7m63Yqym
rTzdfLPY8KeNBnl6fOa9fZf6zyvos3NvaJtubp16e7bt5grKqIvM14s69vaQ
3XEWGb7Rdp6DvB16ekTHpCulDy9bdwFAx5rSaFR0GsMod9IZHOIcMjMOdkPX
xGivjwNP9eLyYBR4+nGTJYudVLyDhKIzI9mqi+vk6duZG8yW0ZP81KcSurgO
/XKD3A0PuZRIK1dj1IiCkID0Se2haeLA7nbeO/aEokyXvl7yJLUsQZ84HU0g
0aCVI5GGot39/1GN9UFa38sYcdZcdZf7uo1n+w1ZLWEJ0QXmYJ6IAkQUwPHV
6PRBw33a9/SAdGPHi6HX+g5edUJuvpfuTmOUaIWaaRFGn6GFmjNm7x7/9VYt
W7FYh5CP4cIicli1e9Xwq76+vhbvq8SNQ4KgulIDGMqh7OkVgfWI81fUB8+z
tREukISiuXqYkZTFV5PWW4R3i/LqFs2NG63fk4k+58+fRwH9DMWp0NgXDgkM
jDXLVdJxcXGbNm2qEa/frODdkhaDoPc9PDxctgcwArIVMDc31/hMNORXEqC2
FGegqEpucIiBZNz0d55wUmI2EeqXnQ9Ua4wrZMAtlNQtTmAmt7zzNJGTxmnA
XNInjGJrRqFhUFAQ5iO/WFy/xGQ+d+6cblMyUJW+186U/7FYrRfdhKGIJ4Qi
hUUkp6blyj5zUCMzK9+4MC554F9JyT8+S4snz8q+fuxElHCT0LBEKlEM0x7X
py+EwrDg9cYKK30VPUseRdce9yb2EDjTBQSJii6ZovJIuE39FW3/VURkstA3
RbstLsrTdzmpe6/Y+Ay5p8+I6a8/jYnNEOefnX39aswtXqZKF/Tn1qVamrt8
JUV/PFl94j6v8EYJWNjIII/mWaCDRRcKi27qXQauyG98SJ8u6HpKNRbFFRne
wpKVen6vXE2TZ8GMlcQansU2alWstaiv8+dqXaa2o8euWKzMM27hET+2a62G
tRGNXVMf9lcbLVEgr3TckITELAwtWO1v1a6M6pWrqRmlC0S6nsY81EZgoA91
1WK3tViUqvjFVrcvt1PKoq07aqjGka/ybFHeIFgnbik2X55Wnhgz3NXBvP0Z
VVz6yhq94N34DIopdyTlf0PnxzQo2aKj80a/c4ar6uXy3utVraSCOWlTf+v3
hpVXqrjCbJWTW75J+3ZetX3LLhiuFlsfVlzc4m1y5VVSCbEoZ+sFbncPqsrM
hNtsp8qx23ptubjsG6SLbb1Q+mbpS3JtYkoFab0qm2vaNtuytrXN/y85X82X
ynWpII6yHgQR/aRxzG0OtTGnzVLWRcprwmY2pawVdFQtTx8LFK5gRtls2no2
mh8V/bmkvOdMldKVXn6LbtwcMW7T/sMRarrIItyyMUmKDS/ALLZ6B7jF1Kuq
Q6PaitXUtXnGpv6Gk4pVZsuTP/7X2MpWfBsfD7XVivWQ3lkGm10oL63YHivr
4rcYTJuVVJy2jkNkthiDIms1bBrxNtI/lizno2AVjVh5dd6T3xH7pYlpC1Nq
otzmvLX5bURTTPkli4nd94aYtjClJoo5b00xpXJiYve9IaYtTKmJYs5bU0yp
nJjYfW+IaQtTaqKY89YUUyonPx27a8purntbsIJpC1NqnJjz1hRTKi0/Ebvz
tU/bmvLzClYwbWFKjRNz3ppiSuWksLAwKCioqFLYTbR86NChI0eOHDXl5xas
cODAAdMWptQsMeetKaZUTgICAuRTUybvrtFi8hdTaqKY89YUUyonP4V3F5n3
u6uNmPcNTamJYs5bU0yptJj7zO8BMW1hSk0Uc96aYkrlxHxG7N4Q0xam1EQx
560pplROTOy+N6Qm2qJaveXS5ivfTbnbUhPn7S3F5tvIf1qFd/DPYnzndhXq
oX5F9DY+RGLK/0zuEnbjCX+We1h6u/waPzBhPCzWvjAit/v1TulnLAoqP19f
7khs2qKCQfgfi3HM9e+MKIZJdftOpgJLmVLj5G5jtxFxtJei36V2TKnB8nOF
JXq78iUu/fyNsodcZepav9L/l8C7y37yxsa3Y/636twVuaUtfsZuVv8xL9a+
4p2amqpUP93ubakpPuT2hflzNSY9K7vMh7Z/Qm3qb0ZmfnTsLb7Ercu1xKzE
ZPXb1tevF0VFpxVYfSq6cnI2OM4/IDInp0Cpin6Zcjti8wNthnQVY7dQocOH
D69bt44iwo8s0NN6fdL6pM7LjNSsglLS7qFDh3x8fEhs2LAhMDBQP+/t7Y1K
esFt27ZNmjRpwYIFsbGxUs/27dudnJyWLl3q6up68uRJySZ0W/picwSqj9i0
xcaNG20OgoxkeQNewfc0KzhpM5tiGDR9zKOjozk8cODAP/7xj2PHjonysgZi
08QWhzYtVYFWNmsrNnx2VlE/fF/wxBNPODg4iDLl9cWUKhfreauuD5ckio1M
2fhdy1t+RFIp/dJi8IWEg0cuaw3d3LztfGparmJwgBUb+Pavliqs/hYW3ejY
y8Nv+4VitdEbFpXYVNXWtC+Zq4wAv2vWB3W38y75ty2/uPxOnLZ1+uzdJC6E
JLTs7HIlOk2p0HcZB9bYuhwJH13mGlC3+dKen60MC09WSnmi9QcrjSfLW+e/
0xEoX20bvsK6Eptd0zPok+SQNkm0JVbLft2Otobzt+hRcZl246VdgqKIyBT9
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
Y69gxNnfqBu56zed7j14rYQlRBeYg3UiChBRpFzJuRyfNXCEbzsHT0g3doyI
utJr0Jpj2s13mRAWzArtuKP+jFhaeh5zjjLtHTyIVRjvlJnbWf/SslLTz4jh
nyFZxi1xRXugOzQ0FNYmLaSnp/MVx64XSExMlLNPivaQrza3RfovcuDDc3Nz
9UeQSOs9wrtFefVGwKZNxn6pbqEGaEVd4CNbkxxNZKPYWAZtLZqqFWLzd3Kg
0hJBGYvpk8kU6b/KcrcmkACJ2TM+an0nnVI9IiIiNTVVSkp0ZNREysPHizXR
dTCWoVPdcCTCwsIg8nc9ZabcB2Jz3V66nAFPEU8IRYJuZGTmyzlzUANKbtwY
lzLwL/2Em6I9SJt77fqRY3HXtSNDUTGpNKIYnFhh+V1FRSNc8Hpjg9W+ip5l
j6Jrj3unZ+QJnOkCgsTFl7k+eSTcpv6Kdv7qQmy60DdFuy0uyjN2ydT9cWJy
ttzTZ8b0nz9NSMTHqfsMOMLLCbf5MVWGoD+3Ls3S3cVLV/XHk8nMLygWi9gs
II/mWWCExRCKS27qQwafKG98SJ8h6HpKMxbVFZne4rKd+lJ1nWTKs2DGRhIN
z2IbtSrVetT3+fO1IdPa4SOXLHbmmbfzF271a62GtRGNQ1Mf9lc7LVOgoHze
kJTUXAwtZzmCK/ZboD5wU0ENURiklj/S+flFslevF7inv2duUcv6h7CqR5RM
emUhVduiakJ6jybTulPj1xq5K23+rlptl9ut21tpULJFh+Wb/M8Yrt566NWY
cx9KFb7Opv7WvxtWWa3SKotVT277Vo47eW3HbYdguGrDS1Rd3eLX5CprpBpi
Uc/WD7jdL4BV49htvc9cWvEXp0sr/0lqo7e3KFBZ2virIBadWitcakusy9Si
rXJdbNrC5oKpbIarYYLKJrDqTnWT2exIL1O1tlUsJ1NqkVS2bg32lVt76nbu
yPGbgw5eUNMlNyuWt1yK8s34C6JV/JRlDX41qq3Y+gep5F/GZknFZsRtnanX
LbVVrPQOXh5qqxfrKb27AjaHUFlasT1X1tVvM5k2G6k6bR2HyGoxBkXWatg0
4h2kb9W06NemibSuLf+MrZnvEXsAxLSFKbVR7mrd3qj6nYimmPJjEhO7Hwwx
bWFKbRRz3ZpiSvXExO4HQ0xbmFIbxVy3pphSPTGx+8EQ0xam1EYx160pplRP
vjt218aTXQ+eYAXTFqbUOjHXrSmmVFu+I3YXai+1NeWHFaxg2sKUWifmujXF
lOpJcXFxWFhYSbWwm2j5wIEDhw4dOmzKDy1YYd++faYtTKldYq5bU0ypnoSE
hBw7dgwUNnl3rRaTv5hSG8Vct6aYUj35Lry7xLzffd+Ied/QlNoo5ro1xZRq
i3nO/AEQ0xam1EYx160pplRPzGfEHgwxbWFKbRRz3ZpiSvXExO4HQ76LLYy/
H16Dci/aNOUBkwfVh9j8KfLv1uBdvM/C4gf/a0oH9RWid/AWElO+H7lH2I3f
/kHuYen93tDE4pKuKpd0ZCnRXiFaRVO1QmzaoupJUO7N221qXBiCnM0wWs2U
B0O+B+w2Io72i+j3ritTaqv8UGGJ3q+1AnzV31gq74nS05J4sHl3rcCmGpEq
bHHbSUhPT4+KiqopTaS7/Pz8c+fO3YvXoP94bPpjkPvfh1RDWKKXE7Jyr1V4
y/Z3aE39zM4pjE+8zWu4dbmSmpuarr7Y+vr1krj4zKLimuEgp8OTgkNi8/KK
lJoYlynfUWocu4UZHTx4cP369VQRulTxVXE2XtponVla/ppI4+ZPFbWk3wMH
Dvj6+pLw8/MLCAgwNoWqnp6ewkM3bdoUGhpKIjc3d9WqVSkpKcYBGodgc+D3
odi0hb+/v81JIJGdnf3ee+8tXryY9KxZs37729/KTBpfvmltDqUSSxm/ygyH
hIQ8+eSTEhJU9spXo6o2MyU/MDDQxcXF0dHRw8ODtWqhksUKsXjbbGWLp+rh
GMtXppgpNSLW61ZeFibTXaq+kPcWUza+1PK2b5BUyhlK+LmU/Ycuan3d3LLt
bEZmvt6UUvG9mdZy51fLFVY/i0tudOju6R94rlTt9IZFIzZVteXcypYiM8Dn
ug1hXfuukmLWewfG5crnhOlbZ8zdReJcZEpLe7dL8ZmKUpUfM06ssXf5Jjxv
mXtIveZLHfqtjjmfrpQzQeuXXRozK9vnv9sZqFxtG4hg3YjNoekF9EVyQFsk
2nar5bjuRFtD/m1GZHwHaPi5ZOn38NG4I8cvlxXTPs9FXtm5J/qGViw45NKF
2KuKyomK9gdfZFEp9wy7P/nkkwEDBpAYN27c+PHj9erGPU9JW+yC2nSwNzWx
zjQ2pfc7ZMgQEq+//vrDDz+sg3JxcfHvf//7n/zkJ3l5eeS88MILI0aMIHHh
wgUywTjF8AZwaapx48aDBw+WYSr3vRhtoU/RW2+9ZXMSCgsLr1271qxZs+XL
l3Ppiy++YELuZDvauANfdXmU+dnPfhYZGVlFLT1ts4Dui954441nn30Wc/zf
//3fT3/6U1lXRk9VRctVS2VVjMhunWlKDYqFD8kvKB71uV/a1Tz5ikObOnO7
sXwFi1utgYpus8w9fjZ164KlB0hERF1p3cm9puiwTdGxu20X980B4Raq2nyH
uE39jSXFUa/xDe3Yw8u4X1pW8maF6pI/fkrA1Fk7SZyNSGnazuXS5dtgt1Jx
QoxtyrYtOc07LHfzPqpu5Fbc3a2ogKV1rPONGGqhtjG/suq2GtcbUWxWMfZo
vTGuL5L5jvtJuHoccfU8oti2TqVGtBpRqa1hWvAXrd8pAYucD5LoNWhtw1bO
GVn5UoCArfuA1fVaOBUWFvO1U0/vpcsPkYhPyGQNX8u7LprXIHZLmfz8/Fde
eeXQoUPUbdCgQbt27WB5ZMrVtLS08+fPWzSVlJQEjBo7lWbRKiMjQy+TmJho
nJnU1FTQ4dY/fn7+7373Oxgf6X//+9+AlJOTk1wKCgri669+9SuINl9fe+21
sWPHkrh48eKjjz66detWpRxBjEOQpmrFXW9r7AaM6tSpY3MScnJyFAMdnj17
9ksvvcRXRl1UVCSFAXo9TbNgvaTB/ejoaDGKVC8oKND3xqkiJVHm5z//OdYR
TGQBUEyfW/i4XsU60wKXMZaEf6jh6enJEMLDVa8opiQYw4g68sbExFy9elVG
R5uMwuZwJISzqCLrSi7xqa9SxpucnPydzGNKJWLhQ67lFbXu4h5zIV37sZab
q3xOdu27UluV6v9g4XW1GL4hISnbwgnHJ2YJobYQCjv0W3XmrGo+j1XHJ0zf
Vlxys7h8D5kuikvK0oBUQWGx9Hv3V28WaD5Wx267rit2BUVTJi4+08JzXs3I
T0rOttDTWv+s7EKGqX8FuxmIou2H6x5el+SUHAl4pK/PpgZMm12G3c3au94W
uxmXfNKOFLteVHI5IVOfqOycQrB7++6oouIbJdo+gEUBzHFds05mVkH61Tzp
ymIIFBarpWfkp6WX+RNdKYaflJxjzLSoroteBW2vZuQZL9FsSmqu/pXuZOWg
f3p5QJiXX5SUUqEjNO/Wb9XZyCtoOHaS/7Q5O1lyZFahhoUR9aGlpl2T4FAr
k6d3KpKVXcCk6UtX+o2IVuF15PjN79Vb6B94Ti6FnUmq13ypXTePggJ1XfUY
sMbFQwWjhMQs+57e9wK7BeZ27doFvyO/f//+kK9f/OIXv/71r93d3bk0atSo
X/7yl88999w777yDb6TNvXv3vvvuuxQAQ8Ea6eubb76pV6+eg4MDhcEab29v
oBby9cgjjwA00tfcuXOfeuopCOOrr75Kj+Rs376dfsVd161bl3SjRo1Ebcja
q5pkZan3jLg0ZswYRcNuNDRit3EI4u1rBeGyxm4GwhzanASQFGj7wx/+sGzZ
MkXj3c8//zyJPn36tGzZUhps3779+++/L/g+bNiwNm3akEkClH/mmWcef/xx
4ewIvYwbN07SU6dOfe+99xQNuzGWgOyUKVOIqeLi4kh7eXm9+OKLWO23v/0t
9pJa2Nci07hNTRA1bdo0SRMQgt2gLaOjo8mTJ9PyW2+9RflTp0795S9/oREW
zMyZMyncs2fPyoYj+SdOnNCrzJo1ixwCjw8++IBm0YRlyRLlk0XIGu7atStL
q1YshlokVry7qF03jxYdlk+cvm2D35nGbZa1tHdrZe/m6HKImR8yesOMubt6
DV5Lga59V0XFpFIFPzxopC9kpE1n95nzdmNhyPvn07YG7lLv15wITejef7VA
zKjPt/htPbfMPWTCtK3S3fQ5O4eP3SQmhf7M+Xbv4mXBk2Zsu9urS5YFT5kp
67YM+Dr18uZqv+E+QB7+Ofp8GvmhZ5IGjljfobsn4xoxfnNWFtGsknwlV9d/
1je7ZYfc2f0wOQQAXErUMGLthlBGDT1s182zsZ2Lo0uw9BWwPYL22zt4wtoW
LD1QerMq7LYQaQHIHj5u04qVxzr39u43zIecPfvPYwX+OvTwPBmaQM7IzzbT
Pk3N/Fr1tLuDYqRAxx6eR0/ES0eDR/l6rTnRsKWT7HI4uVkOYf3m06MnbPl6
YRAVG7Z2Xu51VGYsN/c6k9myoxvlh4zakKlFJsbqyRrUlof06oTHxmUwk607
u7fo6DZr3h5FQ2fWDEulVSe3UZ/7XUlTY4NzkVcYkdPyw5ijUWtnd++jgbsi
GSZjmT57J1GckOiTYYkO/Vcz898u2c+ltl1X0DKBCpccXQ8ZR1FqZURiFYr5
MrTP/VghrTupy3VXUAxQa9dlRaM2ywi6ZMFgQRZDewcP+15eJ8PUWT1xKoF+
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
ALPU6jfALexZU1+NaiuVrDdb69ZmScVWWRuZet1SW8VK7+DlobZ6sZ7Suytg
cwiVpRXbc2Vd/TaTabORqtPWcYisFmNQZK2GTSPeQfpWTYt+bZpIz7TZYGk5
dkdHR1+xktTU1ISEhNr7HrEfj5i2MKU2yl2tW3kC616rZIoptUJ07JanWW1K
ZQ/FmHhx/4hpC1Nqo5jr1hRTqic6dlejrvl/d/+IaQtTaqOY69YUU6onJnY/
GGLawpTaKOa6NcWU6okRu69evZqQkJCYmJhQLpKWNyRai/zf1caTXQ+eYAXT
FqbUOjHXrSmmVFt07Aapw8LCMjIy0suFNDn6W7MtKgp2F2ovtTXlhxWsYNrC
lFon5ro1xZTqSXFxMehcUv4T0BEREcZf8yBNTmVn1YiWDxw4cOjQocOm/NCC
Ffbt22fawpTaJea6NcWU6klISMixY8fkZUzAcXJysvwApuA1aXJskm6Td99X
YvIXU2qjmOvWFFOqJ0beLVT67Nmz8lYvPklXcSuqxLzffd+Ied/QlNoo5ro1
xZRqi36/W8h1SkqKUG8+SSuVkG7FPCN6P4lpC1Nqo5jr1hRTqifWz4jp75vg
s+p42Py/u3/EtIUptVHMdWuKKdUTC+wWip2enn7o0CE+lcpJt2L+391PYtrC
lNooD+S6tfk75N+twbt6mUWFH/CvKR3U94fewStITPnexOZvs0C3L168eNub
UFX83928efMHuYel93tDE4tLxtv6+uF5Mo0H6eXNFNYN3udi0xZVT4LyA713
6Q47FVUt5A7eqmC6l9ok9xq7jYij/Rz6PerHlFosP1RYovdrrQBf9deVynu6
JK0dKr8VmD3Av6v24/HkVdjixzMJptQ6uf99yN0K/26XE7Jyr1V4xfZ3aE39
zM4pjE+8zTu4dbmSmpuarr7V+vr1krj4zKLimqEep8OTgkNi8/KKlJoYlynf
XWocu4W0Hjx4cP369TTOVf0BNL3HO3kFZGn5CyWNYUYVtaTfAwcO+Pr6kvDz
8wsICDA2haqenp7CQzdt2hQaGkoiLy+PzPPnz+stBAUF7du3Tyl/qagMRLnv
EdCmLfz9/W1OAons7Oz33nvPyclJ6lrPtmIYctUzX1mOzUxh0xZmtWn6nTt3
LlmyZNmyZV5eXm5ubkuXLiWdlpZW2ZagjH3+/Pnvv/9+bm6uYlhCd6KqKT+I
WK9bdX+4LFFqZMrGN1re9vWRSvk7FsPPpew/dFHr6OaWbWczMvMVA/RUvQLu
/Gq5wupnccmNDt09/QPPlaqd3rBopJLXR9p4c6XkMAN8rtsQ1rXvKilmvXeg
V5fPCdO3zpi7i8S5yJSW9m6X4jOVKt2X9atCjZMsdHCZe0i95ksd+q2OOa/e
SC1/Y7N1I6VGe9ns9G5noHK1bTgl60ZsDk0voC+SA9oi0XZZLcd1J9oa8m8z
IuMLQMPPJUu/h4/GHTl+uayY9nku8srOPdE3tGLBIZcuxKo/bVpYWLxjT3RS
crbe/r3A7k8++WTAgAEkxo0bN378eKV88VhsR1vkKBXXmJ427mMbM41N6f0O
GTKExOuvv/7www/r5+SLi4t///vf/+QnPwGsyXnhhRdGjBhBIjY2lsx///vf
+mZy06ZNW7RoQYIqfDZu3Hjw4MFKOTTct2K0hT5Fb731ls1JKCwsvHbtWrNm
zTw8PBQr01T2L6MXMO7DWxuxMgNJLWKqNm3a6CWtm9JbYOX87W9/e/fdd1H4
2WefJdJ4++23w8PDFas1YxRXV1fMx+hs6mAzx5QfUCx8CFCVX1AsaRza1Jnb
jYUreF0DWpVfvVWstPzl3Z9N3bpg6QESEVFXWndyryk6bFN07G7bxX1zQLiF
qjZfIG5Tf2NJ0J/PNb6hHXt4GV9HXlbyZoXqkj9+SsDUWTtJnI1IadrO5dLl
22C3UnFCjG3Kti05zTssd/M+qm7kVtzdraiApXWs840YaqG2Mb+y6rYa1xtR
bFYx9mi9Ma4vkvmO+0m4ehxx9Tyi2LZOpUa0GlGprWFacAet3ykBi5wPkug1
aG3DVs4ZWflSgP+C7gNW12vhBFjztVNP76XLD5FIuZLz70+WjBi/uTx2qkns
Fg3z8/NfeeWVQ4cOXb9+vUGDBu3atYPlkSlXoU7Cc42SlJQkD6aJUFGavXz5
ckZGhl5G/3VWaSo1NTUyMlJXgC5+97vfhYSEkAaO8fnCKxWNTfP1V7/6lTCy
1157bezYsYr2HByZXILcSUk7O7v27dvrDTIQafA+v+ttjd0AU506dWxOQk5O
jmJALn22md74+HjFYEcpQISj/6a9fikqKoqKugLkR0dHyy/56MWwXUxMjKSL
Nfniiy9++9vfsh4KCgokn0CCimJlW+zp5jPPPPPNN98o5eGHRF8ipPUqpI0/
CSg5imY4rEx3xvyIiAiZBFN+WLHwIbDjlCu5BYXFJFb5nOzad2V+PlZV//UK
r6tlWKoJSdkWTjg+MUsItYVQ2KHfqjNn1TXpser4hOnbiktuFpfvIdNFcUlZ
GpCiU+0XYm7e/dWbBZqP1bHbruuKXUHRlImLz7RY0lcz8oU3Va1/VnYhw9S/
gt0MRNH2w3UPr0tySk7a1Tyl/N/ns6kB02aXYXez9q63xW7GJZ+0I8WuF5Vc
TsjUJyo7pxDs3r47qqj4Rom2D2BRAHNc16yTmVWQfjVPurIYAoXFaukZ+Wnp
ZaG1rhTDT0rOMWZaVNdFr4K2VzPyjJdoNiU1V/9Kd7Jy0D/9alnJvPyipJQK
HaF5t36rzkZeQcOxk/ynzdnJkiOzCjUsjKgPLTXtmgSHWpk8vVORrOwCJk1f
utJvRPQV0iPHb36v3kL/wHNyKexMUr3mS+26eRRocWyPAWtcPEJkyK06ubfu
7H5Nu3NBUzWI3QJwu3btgt+R379//5/97Ge/+MUvfv3rX7u7u3Np1KhRv/zl
L5977rl33nkHBGep7N27F25FgUcffRSsuXJFHQu+ul69eg4ODhQGa7y9vYFa
yNcjjzwye/Zs6Wvu3LlPPfUUDPrVV1+lR3K2b99Ov8KX69atS7pRo0ayGgcM
GPCqJllZ6m0jLo0ZM4YEAATcd+jQ4aWXXsKZUxhWSLAhXchABBGqDlx/cLHG
bmzBHNqcBKATTPzDH/6wbNky8r/++uv69ev37t0blGSGP/vsM2mzS5cu3bp1
a9WqFVZ4+umnN2zYIPmY48UXX2TmQeFt27YpWgiEQbEUtqaWqEE71MJqr7/+
+p49e8hZsmTJY4899vjjj9PR0KFD0WHYsGHMPF/JdHNzU6zYN03R7Lx58yST
UI3Fs3+/GiQTHJKWWyREF+hDnODi4vLGG28oWkjwr3/9a8SIEX//+9+ffPLJ
P/7xj+A1+YGBgS+//PLzzz+PYt9++61isu8fVCx8CCDYuZc3zHHDljON2yxr
ae/Wyt7N0eUQi2HI6A0z5u7qNXhtiw7Lu/ZdFRWTSnn88KCRvhDqNp3dZ87b
jTeDtn8+bWvgriiunghN6N5/tUDMqM+3+G09t8w9ZMK0rdLX9Dk7h4/dJP/W
0J853+5dvCx40oxtd3t1ybLgKdr+gLhlcK1TL2+u9hvuA+Thn6PPp5EfeiZp
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
/pUshlB5+ao+ZCIHyhtf0mcIup7SjEV1RcxbWb1Tz+e5lAJ5F8zYSLrhXWyj
VlVaj/o+f6k2ZFo7cPCcxc48dktI/K5fazWsJ9E4NPVlf7XTagXKauyGZOVc
YKLlCx3DavdbXv7dFFS3o9XVe5HCVbXtdmux21osJtT6C7ga5jyvv5bEJ7e8
2cYm9c/FDRnhmmKNsNf8XjW9ilENY/q/Rn7N71VrVFLPujUuWFCyYy/XjYEn
DHflC4hsL6dGJfU4Opv6W39vWF21quot1jC55q9yXM/PdlxzCIa7VdaX9Ve3
+Da5uhppgFjUs/UFbrcbrW5gKm85dls79qraXx9dVff3Sxshpi4nb7Oidb82
zWVs3GZHxlt3xVa5Ljbn4ppGsFnSppWsyzTs+8wtMi3SNodW/yjq0bOuMja1
MuWOiM33TA0zJV+drW7nTpyyaW9oopquzVCqqmwsgCrDF2BWWX0HuMXM36pL
o9qK1bK0mWNTf0OmYlXYMlOvW2WrWNV1/HiorV6sTXpjBWwOoa60YttW1tWv
YUybjdSfto5DZLUYgyJrNWxO4nWkv6tp0a/NKdIz62nwHv4dsf8dMefClLtR
rn/dyhtY/wWVTDHlrhATu+8NMefClLtRzHVriikNExO77w0x58KUu1HMdWuK
KQ0TE7vvDTHnwpS7Ucx1a4opDZObx+6760zXvSrMgjkXptx1Yq5bU0xpsNwk
dpdrv2tryp0VZsGcC1PuOjHXrSmmNEwqKyuPHTt2uUHYTbQcEhISHh5+wJQ7
LczCvn37zLkw5e4Sc92aYkrDJCIiIioqqmF7VpdN3t1oxOQvptyNYq5bU0xp
mNwM775sPu9uNGI+NzTlbhRz3ZpiSoPFPGd+D4g5F6bcjWKuW1NMaZiY74jd
G2LOhSl3o5jr1hRTGiYmdt8bclvn4t77zY5b+O2a8u3ot6q1/zW5x3yIzS8h
v7kGb+iXLGp9af+t0kH98dDr+P0RU/7LcpuwG292R55hSb/G3hngZe1HQq0V
I1FZWcld3fdaqE0tLo3/BXdqXNcU67m4oomk6zFCg6XBzuGWeBXj6JQbHFH9
P31iyn9Tbh92GxFH+y70W96DKXe93KmwRPo19l6l/e6n8UdS9FskWMAqrFn9
9sr/Ju+2/g2aum7dFXI75kLsUFpaeurUqcb5U+Z3dqak97y8vLi4uDuoxl0t
d7UPsRDWQ0pa4YWLtX5f+yZaUz+ListT06/xA9y6ZOdcyMlTf9L60qXLyakF
FZW3hmUcj8kIi0gqKalQbsW4TLkhqf93624tdguHDQ0NXbdundA9C+pq8xcY
rTN1cmTcBaqnlvQbEhKyYcOG3bt379+/X8oUFRWtXr0aByuXERERwcHBkqbw
Z599NmfOnOjoaMk5ePCgr6+v3ntBQYG3t3dhofq/I7ROxqXcadSwFuu52Lp1
KwOUdF1GEJPanA7Zc5DCDz74IPCt70JI/qJFi15//fULFy4ohsmybuqqJlUG
kR0Ai7m2GUrZbFBk06ZNMsUy77GxsRs3bjRWt/jZ2Ss1wiUVX375ZeZar35D
CuiZYu358+c/+eSTxnZs/kqgKTbFpg/R5us7kmH8Octr/nakUvMDizGnsvaH
n9W6uLp528n8glLF4Prqn57rv1tl0LDy8pVegz0Cg05VqZ1esWjEpqq2Fl71
2sMCfK5df2yAnXf1/2nd1eXzs5lbZ83fSeLU6axOfdzOpRYo9Xoq698JNRpZ
aN8K94hmHRwGjVwTn6B6j5p/ZetGqozzZbPTG7VA3Wrb+G+1bsTm0PQC+iIJ
0RaJtnFnOa7r0daQf40RGX/9k34Jh44eTz9+MlPKlJRW7NmfQKgml7Fx2YeO
pEo6JjbL3StyzbqjZ8+dt+j0dmB369atR40aRWLy5MlTpkxRapaQ8cmgpC2e
FVq4dL2kXsyYaWxKLlu2bAkc0/Wf//xnuYWT/973vrdq1Sq5fOutt7p06UJi
3rx55D/33HMvvvgiiW+++YbMMWPGkN6+fbsUPnr0KJfHjh2TwfLZpk2bsWPH
6peNR4xzIQjVrVu3v/71r3LX2gjcJVFRUaG3YNPCpGn2Bz/4AYvE2Befrq6u
HTt2vHjxokV1vQWbizwzM/Pf//53RkaGYkA6i4rWDVrr9vzzzxNR0JoMdsGC
BY888oikjVOj76WzKmQdKlqE1rZt2yNHjoitrkcB69WLVFZW8vnVV1899thj
1ovZhO/rEQsfIp7tQGTy53OCjcVqzYvV6qrtNqsb+eSLrYsd1NgVN9ilr/ut
osM2Rcfubv3dN22JsVDV5q+H29TfWBL059PHP7r3EE/jb5FXl7xaq7rkT/l8
yxdf7SBxMjarXQ/ncynXwG6ltkGMbV65Igu+qkMvVzevSHXbtvb2cm0FLGfH
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
WhS2nmj927brKVPXuBqV1IXd9RvBaECLCbIwi7GKddq6TRLr1q176qmnnn76
6RdffPEPf/jDihUr9JLGL7nVL+vpxfpfwHqabC6waw72OhWwbsSiR71Zi6GZ
Ur/UvW7lq7PVTcWJUzbtDU1U05ctoiOby9sAcFbfAW6xjm7VpWEl6GrUuT7r
0d+QqVgVtsz8btXZKlZ1HT8eaqsXa5PeWAGbQ6grrdi2lXX1axjTZiP1p63j
EFktxqDIWg2bk3gd6e9q2urXsuI1ba43+7/5O2L3mDTOuSgvLz916lRcXJzx
i9NNMUWX61m3V65ctXZcppjyPy4mdt8b0gjnwoJ+NvKNC1PuiDTCdWuKKXeF
mNh9b0jjnAvr7XdTTDFK41y3ppjS+MXE7ntDzLkw5W4Uc92aYkrD5Oax29wL
bQzCLJhzYcpdJ+a6NcWUBstNYne59uu2ptxZYRbMuTDlrhNz3ZpiSsOksrLy
2LFjlxuE3UTLISEh4eHhB0y508Is7Nu3z5wLU+4uMdetKaY0TCIiIqKiohq2
Z3XZ5N2NRkz+YsrdKOa6NcWUhsnN8O7L5vPuRiPmc0NT7kYx160ppjRYzHPm
94CYc2HK3SjmujXFlIaJ+Y7YvSHmXJhyN4q5bk0xpWFiYve9IffAXJjf3/I/
KPfAurUWm19IfnMN3sB/h8U37d8qHdQfEr2O3yIx5b8mtwm7r169ekeeYRn7
JVFZWYl6xh/JMj7rN2ootyhvofadGsiNSl1zYW2EhgntGE13y39uw+ZPhNy8
iNpYQFe4wV2YocXtkNuN3UbE0b4X/Tb1Y8pdLHcqLDH2S4L1yZ++RkmoOeSr
t2xoeK/ybusfmqmn8D3ww0825+KGjHCPic1f3jGlsUlj9iENE1ZdSlrhhYu1
fmv7JlpTP4uKy1PTr/Fj3Lpk51zIyVN/3vrSpcvJqQUVlbeGehyPyQiLSCop
qVBuxbhMMUr9v1hnIVcNmyq3FrsFB0NDQ9etW0fjQm8tfqfP+guurTN1Imbc
/6mnlrFfuRsSEvLZZ5/NmTMnOjpacg4dOuTi4rJixQonJycHBwcfHx9dN8p8
/fXXH3300aZNm6Sw0G29wUYOBNZzIQpbG0HRf5POFrLX9WNzQUFBmA67Yb1l
y5bt3btXqbG5xRzVNY91TbrYef/+/S+//PLBgwelWZvt1L8AbMquXbtmzJjx
6aefSsvIokWLXn/99QsXLuhtXo/CVWoMfKX+n7I1pQFia91W/6ilZvPvmLLx
py2v+TuSSs2PLcacytofflbr6OrmbSfzC0oVg2+sf/Ku/26Nwupn5eUrvQZ7
BAadqlI7vWLRSF3/X1YLu3odYgE+164/NsDOu3q51l1dPj+buXXW/J0kTp3O
6tTH7VxqgX7L9kCsfjPUaGRheyvcI5p1cBg0ck18Qp6iKDW/gmvdSJVxvmx2
eqMWqFttG97AuhGbQ9ML6IskRFskmjuyHNf1aGvIv8aIjL8EqverpmOz3L0i
16w7evbceck5k5C7JThW/gK2ntwbmmj9W963A7tbt249atQoEpMnT54yZYpS
s3gsfrVZseK81l5Uqf1zz8ZMY1Ny2aZNm9GjR5P46quvvve97z333HMvvvgi
iW+++YbMkSNHksZ1v/LKKy+99FKvXr1EedBNCr/66qsk+vTpo2MKDY4dO1YG
2wAT/dfEYi7EGoxaN8J9990HbJFZWVmp17JYXdZG1n3C888///Of//yNN97A
RH/9619nzZplXdJ6cq3T1hGCIGBkZGTbtm2PHDmi1Da19SKxuQCMzzVEk4KC
gs6dO99///3//Oc/X3jhBeywcOFC7hJ7dOjQ4eLFixa1rql8t27dNmzYoNj6
8XHFlIaKxboFqkrLqtfngcjkL+YEGwvX8rpWD1lqu81q9/jJF1sXO4SQiI3L
7tLX/VbRYZuiY3e3/u6btsRYqGrzl8Rt6m8sCfrz6eMf3XuIp/F3yatLXq1V
XfKnfL7li692kDgZm9Wuh/O5lGtgt1LbIMY2r1wRp13VoZerm1fkVW3/1lig
tgKWs2Odb8RQC7WN+XVVt9W43ohis4qxR+ttZ32RLLLfT8Jl1UEXj4OK7dmp
cxKtRlRla5i1mrJYnMxvk7bLh4/1HfX+umYdHdZtPE7mt8v3/6f18ncnbRz3
4fqR7/oRj6mhrFb4woVLovwtxG7RsLS09Omnnw4PD7906VKLFi169OhRVFRE
ptzNzc1NSEiwaCojIyMxMVG/pKI0m5KSkp+fr5dJT083GicnJ+f06dO6AnTx
1FNPRUVFkfODH/xg9uzZUnjz5s3wL9J2dnagthTWXe7q1atx7G5ubnJJddkx
0AcSERGhNPqfsDTOhShfVlb24x//2GiEffv2SWEuk5KSxJgiusHJTE1N1RvR
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
    "], {{0, 304.}, {330., 0}}, {
    0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144.],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{660., 608.},
  PlotRange->{{0, 330.}, {0, 304.}}]], "Output",
 TaggingRules->{},
 CellChangeTimes->{3.8394945797015743`*^9, 3.844767053495531*^9},
 CellLabel->"Out[21]=",
 CellID->195133643,ExpressionUUID->"fe904291-b1a6-4ea8-b783-5250191bfd72"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Source & Additional Information", "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source & Additional Information"},
 CellTags->{"Source & Additional Information", "TemplateSection"},
 CellID->871630328,ExpressionUUID->"cd6ecc7e-4c5c-47ad-8cef-4cd7cde40ad2"],

Cell[CellGroupData[{

Cell[TextData[{
 "Creator",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Contributed By", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter the name of the person, people or organization that should be \
publicly credited with contributing this function.", "MoreInfoText"], 
        Background -> GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> 
        GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoContributedBy"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fe664bd5-f984-4a02-b085-acf6cf2408c1"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Contributed By"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Contributed By", "ContributorInformation", "Creator", "TemplateCellGroup"},
 
 CellID->20087350,ExpressionUUID->"57637666-f0bf-4e0d-bb18-bee24d75267c"],

Cell["Bob Sandheinrich", "Text",
 TaggingRules->{},
 CellID->1409445663,ExpressionUUID->"df9f8309-7931-46fb-8eee-c2f9e6d50345"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source Control Repository",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"SourceControlURL", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "[[ If this paclet has a corresponding source control repository \
(e.g. GitHub), you can provide the URL here. ]]", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceControlURL"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d5b75bde-1e55-4101-bea0-a248b9629a65"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "SourceControlURL"},
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Source Control Repository", "SourceControlURL", "TemplateCellGroup"},
 CellID->475746126,ExpressionUUID->"a9afa5da-9d28-474c-9440-17c973e5685a"],

Cell["https://github.com/UserName/MyPaclet", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->75689085,ExpressionUUID->"8fe2111c-0c37-4e0d-a713-587ad365414b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Keywords",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Keywords", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List relevant terms (e.g. functional areas, algorithm names, related \
concepts) that should be used to include the function in search results.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoKeywords"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "b8c31885-0518-4a53-836a-48ccd9676a7f"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Keywords"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Keywords", "TemplateCellGroup"},
 CellID->854882061,ExpressionUUID->"fa95b910-3d8a-48cd-bf15-4a426d14671d"],

Cell["Baseball", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8354316106113577`*^9, 3.835431613878119*^9}},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->560424104,ExpressionUUID->"f9927e81-f153-4a70-b3d4-08677196c147"],

Cell["Sports", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8354316106113577`*^9, 3.8354316158123083`*^9}},
 CellID->412330860,ExpressionUUID->"89d6cb05-7c2c-4181-a3fa-483cd3d38cad"],

Cell["Statistics", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8354316106113577`*^9, 3.835431620088625*^9}},
 CellID->458529243,ExpressionUUID->"72aee28e-3893-401c-8e30-2adf07676830"],

Cell["MLB", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8354316106113577`*^9, 3.835431630144628*^9}},
 CellID->240810139,ExpressionUUID->"d5d612b9-709e-4f90-afc9-5b0f6858f62f"],

Cell["Home runs", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{{3.8354316106113577`*^9, 3.835431634505859*^9}},
 CellID->203998784,ExpressionUUID->"8c41af7e-6883-4c55-9254-35609e524ac1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Categories", "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Categories"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Categories", "TemplateCellGroup"},
 CellID->193940140,ExpressionUUID->"e13cd77f-0808-4f0a-8a7e-e39625462703"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Cloud & Deployment"}], "\" \"", 
        "\"Cloud & Deployment\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Core Language & Structure"}], "\" \"", 
        "\"Core Language & Structure\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Data Manipulation & Analysis", {
         False, "Data Manipulation & Analysis"}], "\" \"", 
        "\"Data Manipulation & Analysis\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Engineering Data & Computation"}], 
        "\" \"", "\"Engineering Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "External Interfaces & Connections", {
         False, "External Interfaces & Connections"}], "\" \"", 
        "\"External Interfaces & Connections\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Financial Data & Computation"}], "\" \"", 
        "\"Financial Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geographic Data & Computation"}], "\" \"",
         "\"Geographic Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Geometry"}], "\" \"", "\"Geometry\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Graphs & Networks"}], "\" \"", 
        "\"Graphs & Networks\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Higher Mathematical Computation"}], 
        "\" \"", "\"Higher Mathematical Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Images"}], "\" \"", "\"Images\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Knowledge Representation & Natural Language"}], 
        "\" \"", "\"Knowledge Representation & Natural Language\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Machine Learning"}], "\" \"", 
        "\"Machine Learning\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Notebook Documents & Presentation"}], 
        "\" \"", "\"Notebook Documents & Presentation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        False, {False, "Scientific and Medical Data & Computation"}], "\" \"",
         "\"Scientific and Medical Data & Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Social, Cultural & Linguistic Data"}], 
        "\" \"", "\"Social, Cultural & Linguistic Data\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Sound & Video"}], "\" \"", 
        "\"Sound & Video\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Strings & Text"}], "\" \"", 
        "\"Strings & Text\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[
        "Symbolic & Numeric Computation", {
         False, "Symbolic & Numeric Computation"}], "\" \"", 
        "\"Symbolic & Numeric Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "System Operation & Setup"}], "\" \"", 
        "\"System Operation & Setup\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Time-Related Computation"}], "\" \"", 
        "\"Time-Related Computation\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "User Interface Construction"}], "\" \"", 
        "\"User Interface Construction\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Visualization & Graphics"}], "\" \"", 
        "\"Visualization & Graphics\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], "\<\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxVT9EKwjAMFHG6ifgn+4gxFQbCxuIPdF3mil1bmvShf2+\
HIPqUI3eXu1R5CRlw1Aj7NrALXMKhnlG+\
cJw2tLsrSpusYVyIiiqwXQQrWULeeevQc4RjLRif1iuk5G0dK2to2n686+\
yDRsqvo2IxJJTdhCb8EsUFNf4yawGrw2L+A8+NYfTOJ+\
2aAEVlIoSBMPU79Ug2eImP6NIjnZDp5Bu0Gkuz"},
 CellChangeTimes->{{3.844767068016452*^9, 3.844767071411124*^9}},
 CellTags->{"Categories", "Categories-Checkboxes", "CheckboxCell"},
 CellID->991423350,ExpressionUUID->"7bff5a30-c44d-4de5-a354-6f3501b4689b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Resource Objects",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Related Resource Objects", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List the names of published resource objects from any Wolfram \
repository that are related to this function.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoRelatedResourceObjects"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "af67c777-c173-4aec-bd2c-d25b62087b39"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Related Resource Objects"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Related Resource Objects", "TemplateCellGroup"},
 CellID->869341850,ExpressionUUID->"913b690e-f05a-44ab-97ea-a64bb626b4ad"],

Cell["Babe Ruth Home Runs", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellChangeTimes->{3.8447670898982067`*^9},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->694609509,ExpressionUUID->"a7e0b161-4f93-4ace-9b1c-506b36ed3d55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Source/Reference Citation",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Source/Reference Citation", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Give a bibliographic-style citation for the original source of the \
function and/or its components (e.g. a published paper, algorithm, or code \
repository).", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 
        20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoSourceReferenceCitation"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "4ae35d54-370c-4b1e-a50e-1ed8dc238d2c"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Source/Reference Citation"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Source/Reference Citation", "TemplateCellGroup"},
 CellID->788767010,ExpressionUUID->"31a2cef6-e91f-4ff4-971e-e4ce54ba62ca"],

Cell[TextData[ButtonBox["MLB Stats, Scores, History, & Records | \
Baseball-Reference.com",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["https://www.baseball-reference.com/"], None},
 ButtonNote->"https://www.baseball-reference.com/"]], "Item",
 TaggingRules->{},
 CellID->1415262184,ExpressionUUID->"e2519b78-7cdf-4ca4-8780-4c820333c8a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Links",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Links", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "List additional URLs or hyperlinks for external information related \
to the function.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoLinks"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "7da325b8-6bee-44ee-bdf2-5ae2b7b00058"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Links"},
 DefaultNewCellStyle->"Item",
 CellTags->{"Links", "TemplateCellGroup"},
 CellID->341958311,ExpressionUUID->"4dcf7257-092e-45ff-aa82-20c3ac4d61ea"],

Cell["Link to other related material", "Item",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->938599834,ExpressionUUID->"0011c7f6-6e70-430a-a14a-7105074ba445"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compatibility",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Compatibility", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify any known compatibilities for your resource to ensure it is \
discoverable on the correct platforms.", "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibility"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "eb6a1967-2455-4004-87f7-8bedb0465824"]
}], "Subsection",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Compatibility"},
 CellTags->{"Compatibility", "TemplateCellGroup"},
 CellID->787186911,ExpressionUUID->"a09550ae-0f4d-4a0b-a0e6-0ec6e583fbe3"],

Cell[CellGroupData[{

Cell[TextData[{
 "Wolfram Language Version",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityWolframLanguageVersionRequired", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Enter required Wolfram Language Version (e.g. 12.1+).", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {
       "SectionMoreInfoCompatibilityWolframLanguageVersionRequired"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "a56f74d3-0331-49b2-b2ee-e9f7f35a1482"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{
  "TemplateGroupName" -> "CompatibilityWolframLanguageVersionRequired"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{
  "CompatibilityWolframLanguageVersionRequired", "TemplateCellGroup", 
   "Wolfram Language Version"},
 CellID->267876551,ExpressionUUID->"8341ca6e-96ec-42c3-9bb8-39e9ae5820bb"],

Cell["12.3+", "Text",
 TaggingRules->{},
 CellChangeTimes->{3.844767100864265*^9},
 CellID->1808631631,ExpressionUUID->"96c703a3-1621-463b-afc9-8fcaa45bd67c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Operating System",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityOperatingSystem", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Select all operating systems where your resource is expected to \
function properly.", "MoreInfoText"], Background -> GrayLevel[0.95], 
        FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5,
         ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityOperatingSystem"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "43c43b11-c513-4b8b-b87e-47b88c342385"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityOperatingSystem"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityOperatingSystem", "Operating System", "TemplateCellGroup"},
 CellID->641233002,ExpressionUUID->"5919e4f9-24c1-4702-a4f7-9c3062387172"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["Windows", {False, "Windows"}], "\" \"", "\"Windows\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["MacOSX", {False, "MacOSX"}], "\" \"", "\"Mac\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Unix", {False, "Unix"}], "\" \"", "\"Unix\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNkN2KwkAMhWFbtcLiE/\
gKfQjpKggrFbOL3k7b1B12OjNMMui8vVFo8S7JOfnysylKmAEngzCvI/vIJSyqP2z/\
seszyr81MSzO2nbuRjA/qLaGC+S/Vt+lcc840GjrPyg/\
RQFN9jGYlEz6R8hUfMFGZHEMzmPgBOvKDV6xbrTRnGopSmKvkEiGypK1Z+3si/0+\
nYptp1k1Es12yhBOwvILDb4rz0udiYOlKithtbeMwQexPMGw3NgEsSGUj3yekFwMLf4kL486qlZID5\
UKaxo="},
 CellTags->{
  "CheckboxCell", "CompatibilityOperatingSystem", 
   "CompatibilityOperatingSystem-Checkboxes"},
 CellID->232235591,ExpressionUUID->"e113a9b0-4421-41ed-8c79-b059e69c9acc"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Required Features",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityFeatures", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{"Choose any other features that are ", 
           Cell[
            BoxData[
             StyleBox[
              StyleBox["required", "TI"], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], 
           " in order to use your resource."}], "MoreInfoText"], Background -> 
        GrayLevel[0.95], FrameMargins -> 20, FrameStyle -> GrayLevel[0.9], 
        RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityFeatures"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "53c22335-cca3-4e31-944d-2c740f6372ec"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityFeatures"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{"CompatibilityFeatures", "Required Features", "TemplateCellGroup"},
 CellID->154956349,ExpressionUUID->"188ddff0-9c98-4f3c-852a-c11b8a64c374"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Notebooks"}], "\" \"", "\"Notebooks\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Parallel Kernels"}], "\" \"", 
        "\"Parallel Kernels\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox[False, {False, "Cloud Access"}], "\" \"", 
        "\"Cloud Access\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxlUMtqwzAQLE3c2BBKL73nB/wRxm0gtDQm6g/\
I8piKrCWhXR3891VaMC697Tx22J2mrFWhZCaoh3OSkKRWu/YL5ophvOPtu+XMFCfBxOPmF4/\
3vL2kvFF9eEHv/ZVX46I+dTpqItDhDdGB+D+zePct+TQcGmPA/BfVquyiD4gyq+fWT0GL7S1ZmY/\
QkiKyY3cOYr37yVtfyOXrYEX3eSqOmhiLUL2AsFZub3tKk+\
N2U6vHkxPEELPlFqyqxs0q9Yxcxv4C9ikafM4ht9Zpk5O+AVJDcOo="},
 CellTags->{
  "CheckboxCell", "CompatibilityFeatures", "CompatibilityFeatures-Checkboxes"},
 CellID->930433121,ExpressionUUID->"17049ca8-fff1-4a69-8eea-79d23671b23a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Environments",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityEvaluationEnvironment", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
         TextData[{
          "Select all evaluation environments where your resource is expected \
to be compatible. See ", 
           Cell[
            BoxData[
             StyleBox[
              TagBox[
               ButtonBox[
                StyleBox[
                "$EvaluationEnvironment", "SymbolsRefLink", 
                 ShowStringCharacters -> True, FontFamily -> 
                 "Source Sans Pro"], BaseStyle -> Dynamic[
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   "Link", FontColor -> RGBColor[0.8549, 0.39608, 0.1451]}, {
                   "Link"}]], ButtonData -> 
                "paclet:ref/$EvaluationEnvironment", ContentPadding -> False], 
               MouseAppearanceTag["LinkHand"]], ShowStringCharacters -> True, 
              FontFamily -> "Source Sans Pro"]]], " for more details."}], 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityEvaluationEnvironment"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "fe1f2183-0663-4c86-b3bb-9d8ea2159be7"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityEvaluationEnvironment"},
 DefaultNewCellStyle->"Item",
 FontSize->16,
 CellTags->{
  "CompatibilityEvaluationEnvironment", "Environments", "TemplateCellGroup"},
 CellID->929178938,ExpressionUUID->"a708b44f-7d2e-437b-9f5d-702634c389c3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["Session", {False, "Session"}], "\" \"", 
        TemplateBox[{"\"Session\"", "\"Local or cloud interactive session\""},
          "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Script", {False, "Script"}], "\" \"", 
        TemplateBox[{"\"Script\"", "\"Script run in batch mode\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Subkernel", {False, "Subkernel"}], "\" \"", 
        TemplateBox[{"\"Subkernel\"", "\"Parallel or grid subkernel\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["WebEvaluation", {False, "WebEvaluation"}], "\" \"", 
        TemplateBox[{
         "\"WebEvaluation\"", 
          "\"Cloud evaluation initiated by an HTTP request\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["WebAPI", {False, "WebAPI"}], "\" \"", 
        TemplateBox[{"\"WebAPI\"", "\"API called through an HTTP request\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], 
     StyleBox[
      TemplateBox[{
        CheckboxBox["Scheduled", {False, "Scheduled"}], "\" \"", 
        TemplateBox[{"\"Scheduled\"", "\"Scheduled task\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]},
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox["BatchJob", {False, "BatchJob"}], "\" \"", 
        TemplateBox[{"\"BatchJob\"", "\"Remote batch job\""}, 
         "PrettyTooltipTemplate"]},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12], "\<\"\"\>", "\<\"\"\>"}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxdUdFqwzAMhK1tEtj2EXvPR3RZBhmDhmqwZydRialjG0su5O/\
nlMTJ9uSTTtzp5GOawx54VAiHk2frOYek6LG9YndJaPcliSEBJJJGwwFaJy1DBr65otOo4PkHm/\
ImlBd8nwjlsa7CRNtj5xV2kL4JbvtP0wSninGgRffyQLtzGFn1FxCZxXB+Y3+zwAoj+2+nv+\
WqPa86vxvtuPoKIxvTbHOltTMWHY/wWpjBBp9GKsnj6lrqm3RGD6inA5/\
s1KNJdHsISstOsmgC2n8IRRiJ7B0Vbpnpl4zyg6biMYeXSjM668LIPXF21GM4C2EwezojGe9a/\
B5tCF2LNij9AojVrVE="},
 CellTags->{
  "CheckboxCell", "CompatibilityEvaluationEnvironment", 
   "CompatibilityEvaluationEnvironment-Checkboxes"},
 CellID->630833500,ExpressionUUID->"7118f53f-2a66-43bd-a9fb-a59e28ecb758"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Cloud Support",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"CompatibilityCloudSupport", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "Specify whether your resource is expected to work in the public \
cloud.", "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoCompatibilityCloudSupport"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "d8377f47-99bb-4de0-8092-20c2dc95746c"]
}], "Subsubsection",
 Editable->False,
 Deletable->False,
 CellMargins->{{Inherited, Inherited}, {4, 6}},
 TaggingRules->{"TemplateGroupName" -> "CompatibilityCloudSupport"},
 DefaultNewCellStyle->"Text",
 FontSize->16,
 CellTags->{"Cloud Support", "CompatibilityCloudSupport", "TemplateCellGroup"},
 CellID->584200270,ExpressionUUID->"bb9e7d3d-8339-4e33-896d-f081689730d3"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox[
      TemplateBox[{
        CheckboxBox[True, {False, True}], "\" \"", "\"Supported in cloud\""},
       "RowDefault"],
      StripOnInput->False,
      FontSize->12]}
   },
   AutoDelete->False,
   BaseStyle->{"ControlStyle"},
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{2}}}],
  "Grid"]], "Output",
 Editable->False,
 Deletable->False,
 TaggingRules->{
  "CheckboxData" -> 
   "OEM6eJxNj0EKwkAMRVFarSAu3LnzAj2EVoWC0NJ4gbFNcXA6GSaZRW/vFKy4C/n/v/\
ycshxSkNEgrKogLkgO6+\
KF7Ru7fsHJXbNw8vABo68UHHje9ktOmhBzewjOkRfsjtoeW0OhmxNZ7cmhlxEOBQ1OiX5qo2UsJtM3\
Fu9VTjRZnoj/\
ZM6unRb1jFN6U4bxJ2wuaPBfmUqTCYPlYpHDrrSC3vlomcCwPhMZVDaHbYNMwbf4GF38uFZt5HwA7D\
xZoQ=="},
 CellTags->{
  "CheckboxCell", "CompatibilityCloudSupport", 
   "CompatibilityCloudSupport-Checkboxes"},
 CellID->631048332,ExpressionUUID->"855ba9e5-6435-4316-930f-e3aa93103466"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Author Notes",
 Cell[BoxData[
  PaneSelectorBox[{True->
   TemplateBox[{"Author Notes", 
     Cell[
      BoxData[
       FrameBox[
        Cell[
        "This section, when used, will appear near the bottom of the \
published resource. Content displayed in this section can include background, \
possible improvements, additional information and/or implementation details \
that are otherwise beyond the scope of the function documentation.", 
         "MoreInfoText"], Background -> GrayLevel[0.95], FrameMargins -> 20, 
        FrameStyle -> GrayLevel[0.9], RoundingRadius -> 5, ImageSize -> {
          Scaled[0.65], Automatic}]], "MoreInfoText", Deletable -> True, 
      CellTags -> {"SectionMoreInfoAuthorNotes"}, 
      CellMargins -> {{66, 66}, {15, 15}}]},
    "MoreInfoOpenerButtonTemplate"]}, Dynamic[
    CurrentValue[
     EvaluationNotebook[], {TaggingRules, "ResourceCreateNotebook"}]],
   ImageSize->Automatic]],ExpressionUUID->
  "9f1a9957-3708-4cc8-b1eb-1f2a95c5fb5c"]
}], "Section",
 Editable->False,
 Deletable->False,
 TaggingRules->{"TemplateGroupName" -> "Author Notes"},
 DefaultNewCellStyle->"Text",
 CellTags->{"Author Notes", "TemplateCellGroup"},
 CellID->897529167,ExpressionUUID->"a6c59c73-2be3-4b0c-8bbb-162398859bdc"],

Cell["Additional information about limitations, issues, etc.", "Text",
 TaggingRules->{},
 CellEventActions->{Inherited, {"KeyDown", "\t"} :> Replace[SelectionMove[
       SelectedNotebook[], After, Cell]; NotebookFind[
       SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
       WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
       SelectedNotebook[], All, CellContents, AutoScroll -> True]], 
   PassEventsDown -> False, PassEventsUp -> False},
 CellTags->{"DefaultContent", "TabNext"},
 CellID->908162033,ExpressionUUID->"3331c157-1c86-474a-aa9a-7fecb35633bb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1010., Automatic},
WindowMargins->{{-1245, Automatic}, {-7, Automatic}},
WindowTitle->"BaseballReferenceData | Definition Notebook",
DockedCells->{
  Cell[
   BoxData[
    TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
   CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
   RGBColor[0.47058823529411764`, 0., 0.00784313725490196], 
   CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
  Cell[
   BoxData[
    TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
   TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
   CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
   CacheGraphics -> False, CellOpen -> Dynamic[
     CurrentValue[
      EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767400357429`16.33744506026832*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "5c9a62b4-400d-4288-9116-7328be25bb38"]]]]]), Appearance -> 
                   None, BoxID -> "5c9a62b4-400d-4288-9116-7328be25bb38", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767400357429`16.33744506026832*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "5c9a62b4-400d-4288-9116-7328be25bb38"]]]]]), Appearance -> 
                   None, BoxID -> "5c9a62b4-400d-4288-9116-7328be25bb38", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Testing: BaseballReferenceData\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Testing: BaseballReferenceData\"", "SummaryItem"]}]}, {
                    
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8201\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWM1u20YQtqJ/\
WVHcxEXRHgqBMFr0oMCxndrJxZUpKzEQO4JWSVoUBbKihtKi5JLYXdpRiz5CT7320Ldqz+\
0D9BHaWf5IMuUUrqz+HMQLiZ3dmW9n5psZ0M7IUpdeHHlvQNp5+\
c4JVyB8AYoq5nFctjOy0PX0Bjsnc8+\
YVPYtWejRIa6QIgksC6Qk6yRwXSrGT4EOSOZLOys3WmNOXWadeoPAAX381uR4loCStd7YBwnqtecD3\
9qS+TZ1JCTSzUQKbh8GBOHA1hbJd1H/GPes98D1HVyMEEaKs/\
JOh3Ig4IClPHHZZq6LMBIjeVl8Itjg8uHkXdRKtKggy0eBUokbKvGNIr0ftI87gp0jhNdt4XF1zAdd\
kF4gLCDl9vERUy71JdmIHYOHnuM9QWjwGkoLHDqGgaxFJtoBt7TH3+\
adXE8EMLlGpen7QAXl6PzcmcenkvIRlUDU2AF7LXX38vE5dQKKnpHlZqA8F0NsTaSFU1Ajb0AqHQHo\
W8XOZ5Q2HTbkLnCVOFQWTNCZkrynW09cOgTCvgH0WDH22OTUJbv5HnNBirXwqX42WcGDVTMQAhW/\
RMBAbrfRvyb1nwIbjjSEfMe7QJsZudnsS88JFMzul7dP6ZAzm1lhDpt/YLhLbUHdMKhZWQrdo9M3b/\
z64w8GKiy3mMCc0XdGeffJkek5nhDvhc/Ph+Je+Px2KD4Pn18OzfcnN64SJZj/\
nJ9wP1DTLI6ENROhI7AOHQwYH6bFlRBWiCcVx2ooOaViyLicTWP9NtfMtfT327EUpsme6MlM3gm3s2\
lup0kWHyVl4xQJjzE2SM54XDdIBTW0wKaBo8i7cbafKHCbnHtRFSHZ37//aaZqfGJ8gTyp+\
9RyQNVFzJo6k/U+\
oJPqftB3mBzBwJjUFa3wJqgLxhm6c3HIdaMHUiG4x3VNsD51nC7YgDlnQYsqmkKaxGMjdvwcf5IdpI\
iZFrhczlwuokruGdjTbTlEPL/nChpX9BLWFlCQTrY7MRiNMCTotbHM27k+\
oMQqwXBrBlzbqnnr7xubqX65VPXbJCPvQtODD80Rlk5LV6+\
0i9bPAmw3Amn39ZyshuUeiYx1gkldVrLTKIeqx1zRNxGV00f/4TTI9jz//\
5sAGzomDuPQ8SSLW1wU4IyZmeyK+tt/0pdNx5ML9+V0QV815lVjXqAxl1eN+V9pzDdC+\
uLFSWtxpB8ZAI92H+7u7zfo3sFOY2/n0/3GwSOr33j4YBcOtg/293Z3YXl4a0ZS93TJWhx3yeiE+\
bA8ZBXjFRVcs25hVDNmE62Zb0nmu6VhLBsvsYii4cUdVzS272/\
ff7DMiJKg7zKpYd0kEwvGwc72EnFtGFGVNgWE9hZHFk4BS8OVN1C+OJjNCYGmbl/N+\
as5fzXnLzDnT2fO9Ah9xYQ6o55UY77p4d9JD+n3Lv1kjIbMZLwmma9w++\
QP5d15MjdLDVKMhyby8TVHnwbJ6YmFfPjXcwdu0+MC2bpO02+\
Q6myvJoWo4zZIKWmUyaUQcNyXSD7sLg3toGlTIDld2hukdrkip38fRr9Iad+\
Zy53S8YBdKbgbnXnF1CgenWWk9U8Neob1"}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.016667], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                    
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 
                    20.19}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.56, 52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                    
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    56., 14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 
                    43.68}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.57, 22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 
                    16.28}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 
                    37.8}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 
                    35.85}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 30}}], 
                    StyleBox[
                    
                    RowBox[{"\"Testing: Ba\"", "\[Ellipsis]", 
                    "\"ferenceData\""}], FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    
                    "OEM6eJztWk1sG8cVFkVSP5Qsy4lyaBuo7EJI2jQUKcmOFCM2f0VJsSQrH\
DrpTwpnuBySK+3ubGd2pdDn+pgEKQoUzaFIEaCHHoICvQRNT+6hh/6gOQXtoYBRtCiQAsmlPRVt3+\
wPl1yuKsqof8G5LDlv3rw337z3Zt7bbUT4RAUfFejrhDfi/\
NyWbhJmMGJiU6E6dDcifKxCxYBGjMe2FW42RvlYFTehB81UCKcWk8nV2j6RTTSFLE3DrL1JcB1Fvtm\
I8tlSW8eaIu/\
QuqUSMctoZ5YoIiafqbYNwon5GjWIvrDA42WscuJR5zwq0WqkjkArsrCA4hWYvw1jpqpEM1TodBR1J\
o7ys3tYJ4iooBJlvTJjFVDDExLn4xtMqfcye89xMYkgjfHJgmWaHhoJd0XOvJ8vr+\
8x5RBUeK3MqG6u63UPEzRZXi8opoYNjmZdYIDpKqyTMKG8UKVEVNwmdT7jiChbuiyAPw6dWJVZpLOM\
RN4wCGZYlwmP7VLdp0wWMCfIbKukMRJY++\
T6IVYtDMjwybxlUg12Wu5Qx3aI2aJ1lNhjBLA1lcOuSfOq0tQ1opseoHysSITBeE9/\
6JaGmwQpNwggNu4i1uHqkRuvKhrhbMRu07lODzBOFy3GYOKXQWGCzpQB3yI2NonSbAkV4nv0CGRG+\
Fy+xqlqmaR7PD+zg5u60lBk25SL/4E9nbAhcXZuaoNho6XIXPxNuCBF+GQV+\
g50wjmLffen9Olzb2d7GCMdOGfKiqqSOsg8JOEmZD+LI8XR4kjXv0jfP4/TdzD76WIym2O3b8y9v/\
Gjy7l+ysfvGZcSH6/7lC/e/OSlD364mGPAcfvG9wohlHd+\
AO1za7mOXIgBZSyTMmUa6DBR2SgUqUqZK+WzLHvqjY8u/\
uSdP2ZZ4fvG31Lz72c7pM6OTyOTKcZVfUs3LNNzsPsFnI3K6nqOvXXrH19+9a0nfRBsJL+U9YD7c/\
YYyitfzfXP9m3geC9z/hEGblOg8CtY6j8BtltPvOiDIKxpTr+SY5UP5m9+\
8lE5189jD3mzGAQ718XzyALXcUjbRj5LhbiqcL/5+AsBh/zTCyEW10sRVnoScJH9/T984/\
qnWXZzYu07z1z4S5Y9+bt/7c/M/\
v7hAO5yzv2x64PQEO3HpRx7VXjxL7ps0cbYyIRYnOPvc6ewuIccuO0Qi7Pj+9fL7rFxO+\
lTBCgvfa183OHw7ytdB8ojC5xtGm8v5dhvfyPac7ljKH/\
PhzikDVz1UgjFDoMbmXDgol3AWXYDvL5gt19n2eN2++UDilfHQ4XTXXqmHOKh9o+/\
FoJB77KHStanrIj2s+UunkcNr851oc++OleMjq30Ufrsq3c2YZN3C6/\
xQKIwlecGZFAVcX0uRjrdsTykin6a5mYiBSwfNBm19HogE4mXGdaC6UnC7qzCRZsHExc/\
cQjJFnpyiXuXOAykXHG+M+5MEcst4uUXQaxCwR/zU9Forz11JeA+\
xUvAJ6RdAPJiUkJPuBnmlkm0vK5TJ4FH0U/\
feNcfH0yZ3QlRUqoSbip682JSJI41rKoV0iAAiUxK2MQSikpJKcjtKohi0q0PJaS0TNPgF9Ppo6Ojx\
SOqNmCLZZVa9UWZamla20/\
XaI2nDaumKrxF6uk9LKvErBCDcgWy0XaauYkzT7vaXL8eqg2a3oSsmKmKfnCtso0SgE6JNLCl+\
gUIgUIXTKOSFCQNgq1IvgfGFsY7K+oVBaPe/PlA8s5KJcJlMA0x+\
eBivyJtaQZlZrIO0CQbjGrJmotainmwiT04Ri/bJmdd4+\
vL8L0RaByCi6XpvCv8OB4Q2yYNf1gMltc/\
JqTQkBBdJQJ4kaCDnHWVsdXscraTdemXM7hCnlRkYBlsjw8stTh6emFd9ZlYIOzOoRY9EiFCbxZbmG\
FZ1FeCEE3tWlqNsB3MDvpoM3vAa+4xIitcxK+ov8v21G3dxK/\
bsvtY77IZRKvUeHANYFbsCQQVsicCklOEczY40n382RW4+1I5LKqU33HlMHhgD0uHw9LhsHQ4LB3+\
34Ablg6HpcNh6fAhAm5YOjw1cMPS4bB0OCwdDkuHD2rpcLLXnoalw2Hp8G6WDk/\
Ua1q6QtpHlNX5aezsGItzgwyKPAsm9ayEEpK3xRIAiMRCuAQixVdiMA7cR0JxaWe7ANpLm1QjSWbp0\
HcO1H1FMVuIGJjZxQweRy3g7l3kyEArPCeVqGyJwgY+\
FfbHOcSBdM984T763R0APSddZUpT0bGarBCVgJDB7fyMlFlK7tLD5HJmeUm6s23eho3iZvKaAb5yT0\
VPSS8Txk/l1+NSZjGzeGfiJqRr17ZKg8t6SiLk+ZULK6urKXx+\
bTl1fvm51dTa83ItdWFphaxl1lbPr6yQMFWGLx6GLx6GLx5OfPHgX1yDNf2Qy2XX9Gja9TjxNkJtBN\
4aPN7zXbZzefXq/SjyLZAa+LY7P5ZCMXFjRPP/+8IHw0QEQQuDxIUUmvbEiLWhMeeESaFxN+\
ihuB3KUmiq64aDnh7w3pJCj/mH1TZ1buWwtqg4hJZOOv1g1dw5AbGhpJcWM74JOR+\
X45raZ0IT63UllPCYwyNuHkVIKsDGufMy6b8UUgoU"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.844767400357429`16.33744506026832*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{
              Annotation[
               Grid[{{
                  Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                   "Heavy"], "", "Your paclet resource is being published"}}, 
                Alignment -> {Left, Center}, 
                Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
               DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
               "Your paclet resource is being published"]], ""}}, Spacings -> 
            0.25], "", "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "5c9a62b4-400d-4288-9116-7328be25bb38"]]]]], Appearance -> 
             None, BoxID -> "5c9a62b4-400d-4288-9116-7328be25bb38"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Testing: BaseballReferenceData\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Name\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Testing: BaseballReferenceData\"", "SummaryItem"]}]}, {
                    
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Warnings\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0.0.1\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"8201\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWM1u20YQtqJ/\
WVHcxEXRHgqBMFr0oMCxndrJxZUpKzEQO4JWSVoUBbKihtKi5JLYXdpRiz5CT7320Ldqz+\
0D9BHaWf5IMuUUrqz+HMQLiZ3dmW9n5psZ0M7IUpdeHHlvQNp5+\
c4JVyB8AYoq5nFctjOy0PX0Bjsnc8+\
YVPYtWejRIa6QIgksC6Qk6yRwXSrGT4EOSOZLOys3WmNOXWadeoPAAX381uR4loCStd7YBwnqtecD3\
9qS+TZ1JCTSzUQKbh8GBOHA1hbJd1H/GPes98D1HVyMEEaKs/\
JOh3Ig4IClPHHZZq6LMBIjeVl8Itjg8uHkXdRKtKggy0eBUokbKvGNIr0ftI87gp0jhNdt4XF1zAdd\
kF4gLCDl9vERUy71JdmIHYOHnuM9QWjwGkoLHDqGgaxFJtoBt7TH3+\
adXE8EMLlGpen7QAXl6PzcmcenkvIRlUDU2AF7LXX38vE5dQKKnpHlZqA8F0NsTaSFU1Ajb0AqHQHo\
W8XOZ5Q2HTbkLnCVOFQWTNCZkrynW09cOgTCvgH0WDH22OTUJbv5HnNBirXwqX42WcGDVTMQAhW/\
RMBAbrfRvyb1nwIbjjSEfMe7QJsZudnsS88JFMzul7dP6ZAzm1lhDpt/YLhLbUHdMKhZWQrdo9M3b/\
z64w8GKiy3mMCc0XdGeffJkek5nhDvhc/Ph+Je+Px2KD4Pn18OzfcnN64SJZj/\
nJ9wP1DTLI6ENROhI7AOHQwYH6bFlRBWiCcVx2ooOaViyLicTWP9NtfMtfT327EUpsme6MlM3gm3s2\
lup0kWHyVl4xQJjzE2SM54XDdIBTW0wKaBo8i7cbafKHCbnHtRFSHZ37//aaZqfGJ8gTyp+\
9RyQNVFzJo6k/U+\
oJPqftB3mBzBwJjUFa3wJqgLxhm6c3HIdaMHUiG4x3VNsD51nC7YgDlnQYsqmkKaxGMjdvwcf5IdpI\
iZFrhczlwuokruGdjTbTlEPL/nChpX9BLWFlCQTrY7MRiNMCTotbHM27k+\
oMQqwXBrBlzbqnnr7xubqX65VPXbJCPvQtODD80Rlk5LV6+\
0i9bPAmw3Amn39ZyshuUeiYx1gkldVrLTKIeqx1zRNxGV00f/4TTI9jz//\
5sAGzomDuPQ8SSLW1wU4IyZmeyK+tt/0pdNx5ML9+V0QV815lVjXqAxl1eN+V9pzDdC+\
uLFSWtxpB8ZAI92H+7u7zfo3sFOY2/n0/3GwSOr33j4YBcOtg/293Z3YXl4a0ZS93TJWhx3yeiE+\
bA8ZBXjFRVcs25hVDNmE62Zb0nmu6VhLBsvsYii4cUdVzS272/\
ff7DMiJKg7zKpYd0kEwvGwc72EnFtGFGVNgWE9hZHFk4BS8OVN1C+OJjNCYGmbl/N+\
as5fzXnLzDnT2fO9Ah9xYQ6o55UY77p4d9JD+n3Lv1kjIbMZLwmma9w++\
QP5d15MjdLDVKMhyby8TVHnwbJ6YmFfPjXcwdu0+MC2bpO02+\
Q6myvJoWo4zZIKWmUyaUQcNyXSD7sLg3toGlTIDld2hukdrkip38fRr9Iad+\
Zy53S8YBdKbgbnXnF1CgenWWk9U8Neob1"}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.016667], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                    
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 
                    20.19}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.56, 52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                    
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    56., 14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 
                    43.68}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.57, 22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 
                    16.28}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 
                    37.8}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 
                    35.85}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 30}}], 
                    StyleBox[
                    
                    RowBox[{"\"Testing: Ba\"", "\[Ellipsis]", 
                    "\"ferenceData\""}], FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  "OEM6eJztWk1sG8cVFkVSP5Qsy4lyaBuo7EJI2jQUKcmOFCM2f0VJsSQrHDr\
pTwpnuBySK+3ubGd2pdDn+pgEKQoUzaFIEaCHHoICvQRNT+6hh/6gOQXtoYBRtCiQAsmlPRVt3+\
wPl1yuKsqof8G5LDlv3rw337z3Zt7bbUT4RAUfFejrhDfi/\
NyWbhJmMGJiU6E6dDcifKxCxYBGjMe2FW42RvlYFTehB81UCKcWk8nV2j6RTTSFLE3DrL1JcB1Fvtm\
I8tlSW8eaIu/\
QuqUSMctoZ5YoIiafqbYNwon5GjWIvrDA42WscuJR5zwq0WqkjkArsrCA4hWYvw1jpqpEM1TodBR1J\
o7ys3tYJ4iooBJlvTJjFVDDExLn4xtMqfcye89xMYkgjfHJgmWaHhoJd0XOvJ8vr+\
8x5RBUeK3MqG6u63UPEzRZXi8opoYNjmZdYIDpKqyTMKG8UKVEVNwmdT7jiChbuiyAPw6dWJVZpLOM\
RN4wCGZYlwmP7VLdp0wWMCfIbKukMRJY++\
T6IVYtDMjwybxlUg12Wu5Qx3aI2aJ1lNhjBLA1lcOuSfOq0tQ1opseoHysSITBeE9/\
6JaGmwQpNwggNu4i1uHqkRuvKhrhbMRu07lODzBOFy3GYOKXQWGCzpQB3yI2NonSbAkV4nv0CGRG+\
Fy+xqlqmaR7PD+zg5u60lBk25SL/4E9nbAhcXZuaoNho6XIXPxNuCBF+GQV+\
g50wjmLffen9Olzb2d7GCMdOGfKiqqSOsg8JOEmZD+LI8XR4kjXv0jfP4/TdzD76WIym2O3b8y9v/\
Gjy7l+ysfvGZcSH6/7lC/e/OSlD364mGPAcfvG9wohlHd+\
AO1za7mOXIgBZSyTMmUa6DBR2SgUqUqZK+WzLHvqjY8u/\
uSdP2ZZ4fvG31Lz72c7pM6OTyOTKcZVfUs3LNNzsPsFnI3K6nqOvXXrH19+9a0nfRBsJL+U9YD7c/\
YYyitfzfXP9m3geC9z/hEGblOg8CtY6j8BtltPvOiDIKxpTr+SY5UP5m9+\
8lE5189jD3mzGAQ718XzyALXcUjbRj5LhbiqcL/5+AsBh/zTCyEW10sRVnoScJH9/T984/\
qnWXZzYu07z1z4S5Y9+bt/7c/M/\
v7hAO5yzv2x64PQEO3HpRx7VXjxL7ps0cbYyIRYnOPvc6ewuIccuO0Qi7Pj+9fL7rFxO+\
lTBCgvfa183OHw7ytdB8ojC5xtGm8v5dhvfyPac7ljKH/\
PhzikDVz1UgjFDoMbmXDgol3AWXYDvL5gt19n2eN2++UDilfHQ4XTXXqmHOKh9o+/\
FoJB77KHStanrIj2s+UunkcNr851oc++OleMjq30Ufrsq3c2YZN3C6/\
xQKIwlecGZFAVcX0uRjrdsTykin6a5mYiBSwfNBm19HogE4mXGdaC6UnC7qzCRZsHExc/\
cQjJFnpyiXuXOAykXHG+M+5MEcst4uUXQaxCwR/zU9Forz11JeA+\
xUvAJ6RdAPJiUkJPuBnmlkm0vK5TJ4FH0U/\
feNcfH0yZ3QlRUqoSbip682JSJI41rKoV0iAAiUxK2MQSikpJKcjtKohi0q0PJaS0TNPgF9Ppo6Ojx\
SOqNmCLZZVa9UWZamla20/\
XaI2nDaumKrxF6uk9LKvErBCDcgWy0XaauYkzT7vaXL8eqg2a3oSsmKmKfnCtso0SgE6JNLCl+\
gUIgUIXTKOSFCQNgq1IvgfGFsY7K+oVBaPe/PlA8s5KJcJlMA0x+\
eBivyJtaQZlZrIO0CQbjGrJmotainmwiT04Ri/bJmdd4+\
vL8L0RaByCi6XpvCv8OB4Q2yYNf1gMltc/\
JqTQkBBdJQJ4kaCDnHWVsdXscraTdemXM7hCnlRkYBlsjw8stTh6emFd9ZlYIOzOoRY9EiFCbxZbmG\
FZ1FeCEE3tWlqNsB3MDvpoM3vAa+4xIitcxK+ov8v21G3dxK/\
bsvtY77IZRKvUeHANYFbsCQQVsicCklOEczY40n382RW4+1I5LKqU33HlMHhgD0uHw9LhsHQ4LB3+\
34Ablg6HpcNh6fAhAm5YOjw1cMPS4bB0OCwdDkuHD2rpcLLXnoalw2Hp8G6WDk/\
Ua1q6QtpHlNX5aezsGItzgwyKPAsm9ayEEpK3xRIAiMRCuAQixVdiMA7cR0JxaWe7ANpLm1QjSWbp0\
HcO1H1FMVuIGJjZxQweRy3g7l3kyEArPCeVqGyJwgY+\
FfbHOcSBdM984T763R0APSddZUpT0bGarBCVgJDB7fyMlFlK7tLD5HJmeUm6s23eho3iZvKaAb5yT0\
VPSS8Txk/l1+NSZjGzeGfiJqRr17ZKg8t6SiLk+ZULK6urKXx+\
bTl1fvm51dTa83ItdWFphaxl1lbPr6yQMFWGLx6GLx6GLx5OfPHgX1yDNf2Qy2XX9Gja9TjxNkJtBN\
4aPN7zXbZzefXq/SjyLZAa+LY7P5ZCMXFjRPP/+8IHw0QEQQuDxIUUmvbEiLWhMeeESaFxN+\
ihuB3KUmiq64aDnh7w3pJCj/mH1TZ1buWwtqg4hJZOOv1g1dw5AbGhpJcWM74JOR+\
X45raZ0IT63UllPCYwyNuHkVIKsDGufMy6b8UUgoU"}, "ClickToCopyTemplate"]]}}, 
             Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767938926956`16.337445121103663*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/"]], Appearance -> None, BaseStyle -> "Hyperlink",
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0Bf\
eC/M2H9xb/\
O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3xyDzVqFu\
CHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, 
                  "ClickToCopyTemplate"], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "bbfc1919-5088-45b6-9d39-5e245df4f6c9"]]]]]), Appearance -> 
                   None, BoxID -> "bbfc1919-5088-45b6-9d39-5e245df4f6c9", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767938926956`16.337445121103663*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/"]], Appearance -> None, BaseStyle -> "Hyperlink",
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0Bf\
eC/M2H9xb/\
O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3xyDzVqFu\
CHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, 
                  "ClickToCopyTemplate"], "", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "bbfc1919-5088-45b6-9d39-5e245df4f6c9"]]]]]), Appearance -> 
                   None, BoxID -> "bbfc1919-5088-45b6-9d39-5e245df4f6c9", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.435858`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.435858`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/BaseballReferenceData.m"], "Hash" -> 
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a"|>, <|"File" -> File["Kernel/Endpoints.m"], "Hash" -> 
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964"|>, <|"File" -> File["Kernel/TopLevel.m"], "Hash" -> 
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4"|>, <|"File" -> File["Kernel/XMLRules.m"], "Hash" -> 
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a"|>, <|"File" -> 
                    File["Documentation/English/Guides/BaseballReferenceData.\
nb"], "Hash" -> 
                    "163b6ef357a832a5d3b26059c54915b72de61471a57d6d692189e97ce\
fa9fa5a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], "Hash" -> 
                    "76379ba665756a2a09401412828f9ff6aeb0f0eb37a0d19ebf09abf71\
e19b08c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], "Hash" -> 
                    "bfe91fec63fb485e8fa5d4fb595ccd7ea6e37af6acb6041718302f090\
5eb0173"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/BaseballReferenceData.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoints.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/TopLevel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/XMLRules.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/BaseballReferenceData.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "163b6ef357a832a5d3b26059c54915b72de61471a57d6d692189e97ce\
fa9fa5a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76379ba665756a2a09401412828f9ff6aeb0f0eb37a0d19ebf09abf71\
e19b08c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bfe91fec63fb485e8fa5d4fb595ccd7ea6e37af6acb6041718302f090\
5eb0173", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.181046`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.181046`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"13.82517`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"FailedFiles\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPc1vI0tecfwVZzKTzLx5j91FgmC8CNh14va3V0+\
a5zjJTNjJvEwqM2+fEHpT3V0dt9LuNl3tZLyABBJXDrB75MCJFULiAtrrHvgDECeWI+\
wBcWGPcHv8qvrD7a9Md9uTiWfsSHHSXR+/qt/3r35VpcTo2im+\
2jNeE6ok6f0j3SJm1yQWtlRDh8dKjKZODVZASdDEU5VayipNneFzeILSqCdJhFJ0B/\
U6HWz2nxAso9jvK3G6td/XcUeVjg25pxFWfdWrHkfEovfO+\
l1CifXK6BI9l6PJQ6xR4r596L4lHZHICMAhuRxKnkL7fShz54x0uho8tCG0G47TzROsE0Q0IlmGOdx\
n4hTAcDtJ0vRjU5WHK7vfadYIe5Wimb2eZbnTsO6MyG73W4cHJ6Z6CSC8OjQN3TrQ5VNCjZ4pEZQ5P\
NhTrQ7uUrTlTAxU+hzGSUwGPANln2i4T2R6z+7isKdLbManzU7izOwRbxjrzW6XYBPrMPmJZ4Y+\
eJPZw5Qgq68RZWVk7JmDS6z1MMwMzTR7ltEBFEve29QxsdqGjNZPTAJza6mXvkabmnqud4huuRNKUy\
3CKMX9HhQ96uBzgtQfEpixtDNjXq2hfpNnaodQc4V/\
Nj7znkDFjVbPNKHhlwAwQXcPYX5buPuEqOdtBkLyxLiCPmP0YVOkhtaziL88vXuMz3VVUSVOw62vAd\
1rhybucKTG6RqfHka+yex//vWPstBgZl81gWbYmOH96eO9lqEZpvkr/PNvj8yP+OcXj8wf8M/PH7W+\
6Y14A1mm2v1cP9K7PWtAxfbLey0AHQA7wbKs6uejr9c5WByeETxu8DfH2DxXdeonY/\
bdWmmtjP49HZbUgNjddmLet8vb8VHeHmUypyrazJ5gSSNW05TaMF9ZlMh+\
bzuL1qGdfaLgnmahjx2aP7JIp6nrhi1LUPyXf/\
E3Ptnx97Hs7gsKJLQrGiLdvTI0BYacvzLMC9rFEtmlFqbtXUbPIta0U6IQQLFE9rGFd88ItWA+v/\
oq0muxp2ryGwrlhZ0C/\
HT5YLOegGNjmmX67mTPYD40RuiRpw56G2rbkctovVjcKZcq9Ur9FYpnaRalKZEMXaYok0X2X1m09ry\
HdUu1+gMiRH3dwq8PDbND4yCuh8fqltpyaGhMFLglUBqYptfRqW96bK5PPCXKoFgChjteZoJEWmePQ\
EwSi4zyzaYDDIOQy5rAsIz3Exwgt1cERMGYOXCvrdXwnfkEeWJEkD9EbeOKcbp+\
3mqDFpCYIB6dojvPeqA5TZAgF2Pv7oHmApkEIk+lTELGB1jmTXN6sKXSaNW3TAbxM6N7ewlgi+\
FEU3VyYlDV0dY2gmOtmFfKVtXvxMRoaQaNbGKM6qaljbG0MSLYGMmljbG0McLZGDOMdcshlWMM3AiT\
HX3ASd/Q3b9SE9zYzLAbm2dSFPUptP3qGQBAZMYIrwCqCxBSrvzOUduDbT7IoztHOigPrDEKaMbyKH\
mowgwpabvd5moeJdgTNivsG/\
3a94mpE20yle50oPgTIGL0WaNcKSikXG9IWBYbRaXakEWF1AmuFQpivY7lWrEmKmK5XhDLklzGgtCo\
iSUBlxulhliq4vGeHzg9g+LpGmAxUF9vRJZJqVovlyu1cgNLZVyViFRX6lKtpNShF7leq+\
KiVK4rUr1Ua2CxIhSFSkGSKvVqtVEtj/d23+\
kNTICn5JJovs6wUCkTWapWKjUZfgrlulwuwiBKjUahVCtWijKWKsVysULqxXqhTMoVAk8lWSxUCgDP\
NZ394PgpJ1B/\
Z42SLArVelFoKFKlKhUEARcKlYqASV0oFeW6IpCiIolipSKWawBZVcJVQRJq9ZJYq1QmzGNl35B6TL\
VxwoPpPNdUEDuPe6pM6BS86qIHkFAtiVWilCo1XC8VcUUuicVqodKQKuWGUBFrRZlUBYAEw+\
xU5WqjKNQbpFGTgPwbCp4E0KeTAfIgOAHSpbuo3xENje6eMDPCfGJ0QJD64apVAbEirlYrtQrgGhca\
5YJQFoqAA6WhKFVMxIJSIGKphguy0CCiUgA6UGoCERpioS7NBy4ERorU9sMFVN8QFCJVS4zagSZgEu\
SyIlYaFUmSawRXCYAE8ElitVAWakK9VCgCbIUKACzUSnl0r6lpxtUBCz1xlcpNujzacDgXtXGXqdHf\
9PG+w/BIAmvqFQuDAWSsWDOed6UZjUOz/BcMeHta3e+T/j7Iq34r3opNqGrP2JRXbPxgiSbor09r/\
anaUUFGAQBTgbctZ3eM374GTtt04gVj9DemFWyCOcYLmTFuhj39bI4ABmpp6lyDkrCR5KPEN4+\
j9alDasFGzQf9p3/2GZTesm1AIh/\
pigq01AfHYdWzXD1EttKTyw7cJFYoNqWQY5MPFA0DkUVkfaA2KTUkqL/\
pfwYQ05TtVwJM932vXvKA6shDKNmTPHvRnj9nXgZxprEO3Gme1nMrDbSNEuAp4OZKHmUARWdgoRKr9\
RAY0Ea982AddOeSFZesuACsmFhEHjzBVnswhPv7Ku3ygAKgqmX0wF2GQg+\
9pzYp2C8AhxvMivGX3GQPRgplkGFarBs66Ocee+b4yobuf/FEBZtTZ1Y8PcZdcGZ7mpZH6y+\
6MtjWbCitGC0EM8eNngXe69F+\
Lufa8d8NVrELwEKllWEnIGDlyxOD5nI8VBSmWjtatXN4CKDG6d0hH2Z0HU4I1BqYXyBG7XfMT9snXc\
3og9OUtANB4L3wV2tjsa4Ed/\
Hgm8W84Ht94IKxqMix0aPEuCQmi4o8NnG3rUp0PK7khXxaqWvCcQAYkrBGZLPEP//\
8s6FWByyRgWd97mU4JX/xiMWSTgytfw7t+CKuzrcdDuISYu2UA4+11tf8fzui1Pr6+\
lJBGgpQO1Bf82so2NBmRRE8DEaFOaSpEotYXfDQ3E6gSpoB/\
T0xNDmCcBhT7DQBypaiNdc0sF0DlORkPClCORpWY64OyK1J4dENXmtaPC5ph+\
n534lWchBa2QPwz00QqfIwYSv88z+\
Prgux8pg8XXOx9EZ23Ti4hOpPsC5rPCC7ycc9iBQPcbSjx1cdGeH960DDI64sBjoUD/\
2rv2Sff31kCvzzH4/ML/nnvx+htaeqfsH6Hglwe+pvg3fdAhq5AH3E5OXqkQKTUguEd6lNpAue/\
4BZmBY0eMjgjrKqpALSWI/rLJ7WELKTcIoqnGYKp5BC6qHQ7PpuGNw16hdKKjmGn+\
Me2S7PUjJdJ5kcE9mVTK7FvJRMS8l0eyWTE1NYLMnEY7LvuWQK5OqEk1DOqpAnorz/\
lzJqKaNui4waLNzGwSFyaPR2S6iJIPMwsyOc7IyG4NLJC6XeaiG1eq1wCrjUfJvxGp9Cis7/\
TmSUBw/DYrj16bxRuzaatzaxg+kIm32xf5FRyS2KaKj0VgDeAUZd2+\
gu6mL90DQ6TdG4DMqZE1IxFg+Fq+8rN86aDLPIqPwQuXE8VWnxMBh/X5lx1mSxRUblh8yMg1S+\
xcNg4r1lxhmTKRcZlR8iM0ZLdV08LCffV4adNdl4kVH5ITLsTKngi4fs1PvKt7Mm4y8yKpd8G3KrxO\
IhO/2+8u2sm1UWGZULyrcedNO36N/he3JfW8dE7ylDm5QftIxOl63pHLzumoSy/\
fe0HmxmpUGbZ6Z6fg5YTNHkF21VYrkr6Rc6xR3ynBaDtaZhan3u4OpGqGGQ05tEHNDIw6afBh9ia7x\
2JVJt7wieCRhUnFzq2eCKTgZO99EGxhCyB4i98NZGwzV3rhng0yHJNDTtxPA47W0unrM+\
vlCt9uhm3IBEDONnmw5yAcvn3ApuN8E4zK3FCufCcKVbKVx3Kn1KsGIvYufo98J1d+\
SrHK7bNq9jb83gmymaPMMkdYwtqR1KGPmGvdHULGLqmJ2W4F+\
cH84jgoLhYXweFumh01js2dsNVAtr2mDqQla5ZSPR+6FH4la5qZGUAtWi/\
v1HzIgJJpcleyvc0OalsPIlFnJg/g1UoeuObrQKJUPb+JIH71hCTfyZwWy8tUOsaj2TPA+\
cMyZDA5RYvvMQIiI2mDGiUnfXhgc1qL5Dk5DwBMi3gTAD9/cMVfelALKUOfj9uen0EHE6QzNd+\
CmgaeinzfYZxukaswOc477W7T2AbFwoyY6D2lbWBlZm8uAPe2CpR9CAtqGPVmZrxKcL4vDnbI0NaRO\
Uco6MsrNTVwATd+\
2VpYPXROpZhCcoVkMkKPr2Ky7TFN9hmmJYsxClTNIxfGdT3WXsMfFkK5vhE7MwfFBtyXB90Ola/\
betLSNIU9vsC23zRDExA4ktKEuWYmsptj4ssRXHsvxmmUUz+\
0Tj5zGYnvji3BtecIVz8oaIeMzJGybqwf7aCM5vSBtq4IIlhsw4X0gtiuOAMk0qEV0eEVUowczuyVw\
aDGBn9wO0smTPd8dsPuy+meV8OmselLW+\
TyaS1sYpuSQmJdtLEnsfSMyP5pumMeeoUD91paC9JV0tPl2NnAL7ZoryWwzuIk7SU5UDAvlWy+\
j2t92TPrYtY7ulqV3RwKY8TjSxgDapZTjn7rrtBqQcCWBh3Qd14kKbP/6Rf8JHzp6/\
YdRBI9beqCMExeY+QRMJYQjxJ0BbZIB5Vd9+Rq62W4QfrzY3xAfDkAS9cnhuBvP20Dnqrx32jWB+\
7jM00Cpu0XW28fgQd1StjzYRP4x8G2Gdbp+YxmARnRXiRwHdG674BT9emyZPNKzqg+L76qXK9l7aJ/\
INangnVw9vgPy//2Wf/xpsgFwbPZJ/6MTqwfZIOnQGvX8BPz6ygP82hrn5VNXJnknwBVu7VPWxI/\
v9i7KjJ2Bde54/C9MynI2e2R/ihGLVDsI/95a5fTkLwSiXEqvXfamSKx5zCneeWnLKqrq9A517c+\
GGwb3TieedBWvH6nTZ4xxN59iyBt8mH666G84Pps+\
dpZAoayDx6zISwo3WsR19azkhxxvpNLnA5qNdjb1Zmo/zMx9DUrSfKaNRik1qkY8fDMvB/\
JzIiMLQlqRvNZVlnOUincj4sa8SaEOTEufFhu/FE/SN32aSZls3tjVDPyfmNhMYoBl/J0qvo/\
eMnJmYnR3iJJ3eUCLQEAgfDR11aV/VMXpYZ8DVE8vo7mGTd+GpwlhAVdjBF4QbLzI0AQ38lq+WU9Q+\
mhb1RFdjioCzcEpzeVzKu5Sbb6L+WDjqd3AaSirmRMMCQ90lU+co1hRN2bQ3bMSlT0lXwxIJ6H51+\
OFEXqJyLjea46qs3trEY0fkr7C8Rqxf8MW7oSOPbnHO9Cq7HMpiCyP0dwOvC+\
e8sfrrBwO26y3JTGojyvKL105qomUKrtyRLpmEO2Qz57yGXQsPM6mhEiGHchhDz73T1Qxpm5FQFX6E\
N5oyHtT1ZPqWT70JNlQYFAfMcXbbP9Bsqh2V/\
ba8YUcbd0HCmq31UYHjscT0MlMVSFR5PSGMMnoBmH+HhP+KL//FYJMDKUMX9Y1v0/CFkFqbE+\
IlQYOAk0Z139FpX5i42yXONb/DN+elzwz7RuMM/WTf9qxfOd/OZWn+\
Kxmd1MsEJ9Kw6tppwzG2Q7Xh2CpuG0luoXmNhM6EdCB5yXLwQ0Jy6WXV2208idBGe7iN1Bm3n71Wwl\
vddjuZPdfG8ZqKZBzZra35xFfixhI5NgCzuoxNmd1/FtRrejuWukdzXO5HZcIV9/BK//\
mWw6NyknrVH7qvQyTqDu8aWm+ZBJ6+eAFYC+fujUV5YyOvpkdkh7rZYiupl0R+\
iU0VixoZyObwtODenOCCsOXcUucBidwSMfoNV3Z5t7K7Qmxw2+i6fd05B2skLLx2IKsTXzyw67AxO+\
KQOulj87qW71ezQ9tT99hliKeEwjhp9Bv6xuBAsT9a3lm/vLN+eZ/s+\
3yf7KonhSJLo0z2GBgecBz9Jtn8sEDb5te7bkvg3bLrqeVtagsVBfyA/s6CXOUq1HaEulAoV5fXxS+\
vi19eF7+8Ln55XfxSvd+0el9fqvcFUu8zjPV+9hi/\
Vju9DjsFZrYRT3QEx0GaMjEZobRTL1aE2mzzEvsu+mksu/\
sCJCjdFQ2R7l4ZmgIskr8yQImyIO8uBW+9PfnUw90zQi3gv6++ivR6llPbsij2J3ND64OsnR9ln+\
3DLvaMzoWxwtzAuusHax6U5jYc/+Wf/4j9+vEcZ/CEgI7WLR6YIDKR5y4LkkKhsMPI/\
dtA7l2nt4zbbxZtuuQOloqlqK/fvjT4OHtiGkykzolySnOD7JMs8oT9LQPtoyy6UMHMum3MlszC++\
iQPJwQLMwu3cqlW7l0K8O7lQMXZ9Rjm+AQ+ZpHGw6/MV9TG/UJr1toQbE/\
gOJeWP3BODM3M3mU8SxdKOyZV+aLB/+e/nJH+AylHdsrjzZH7ETfrA7q/fzxT/7hj//\
2O4N66J9ii2iL5dHWqP3UWsmjO76HTfh/a9REGJoM21/9EibDKZZHH01Qr614Hj2cpNzYi/\
tjqoXBsel4Vq7UR98J4Sf5rIh5rlHN0XidUXHdzZ5gCQa+\
1FhLjbXUWAurse74uLiZyKO79v9NU2qrlwT93TtTLFy6vqFQXtgpwE+XgzxVzQr/+C/\
Sj42qX83es0d5jHVVIXaY2ckuaMby7nWjaXvCmqt55/b2gDcF5p3DfWe+\
p2685wk3oXm9zXoP13hv4zc9eZ3Nes/\
Q9M4GN9kMOpvxHpXxzqLd1OEBNOs9EeMAzXQTgQfXrOfgzwcu76R1D67Zz/mmW75koyalBtuPsul/\
BoKRpmwFB9x/3/fqJc8uGXkIJXuSp4jck9Xdq9AdoT7WgTs503pupVsxZrJ+c2oGkC8Na+k1LL2GG/\
Ea/h/n8T+z"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.844767938926956`16.337445121103663*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                  True -> StyleBox[
                   "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
               SystemOpen[
                 File[
                 "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/\
Testing__BaseballReferenceData/Testing__BaseballReferenceData/build/"]], 
               Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0BfeC/\
M2H9xb/O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3x\
yDzVqFuCHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++\
1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "bbfc1919-5088-45b6-9d39-5e245df4f6c9"]]]]], Appearance -> 
             None, BoxID -> "bbfc1919-5088-45b6-9d39-5e245df4f6c9"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.435858`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.435858`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/BaseballReferenceData.m"], "Hash" -> 
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a"|>, <|"File" -> File["Kernel/Endpoints.m"], "Hash" -> 
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964"|>, <|"File" -> File["Kernel/TopLevel.m"], "Hash" -> 
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4"|>, <|"File" -> File["Kernel/XMLRules.m"], "Hash" -> 
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a"|>, <|"File" -> 
                    File["Documentation/English/Guides/BaseballReferenceData.\
nb"], "Hash" -> 
                    "163b6ef357a832a5d3b26059c54915b72de61471a57d6d692189e97ce\
fa9fa5a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], "Hash" -> 
                    "76379ba665756a2a09401412828f9ff6aeb0f0eb37a0d19ebf09abf71\
e19b08c"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], "Hash" -> 
                    "bfe91fec63fb485e8fa5d4fb595ccd7ea6e37af6acb6041718302f090\
5eb0173"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[2]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/BaseballReferenceData.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoints.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/TopLevel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/XMLRules.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/BaseballReferenceData.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "163b6ef357a832a5d3b26059c54915b72de61471a57d6d692189e97ce\
fa9fa5a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "76379ba665756a2a09401412828f9ff6aeb0f0eb37a0d19ebf09abf71\
e19b08c", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "bfe91fec63fb485e8fa5d4fb595ccd7ea6e37af6acb6041718302f090\
5eb0173", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.181046`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.181046`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"13.82517`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"FailedFiles\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPc1vI0tecfwVZzKTzLx5j91FgmC8CNh14va3V0+\
a5zjJTNjJvEwqM2+fEHpT3V0dt9LuNl3tZLyABBJXDrB75MCJFULiAtrrHvgDECeWI+\
wBcWGPcHv8qvrD7a9Md9uTiWfsSHHSXR+/qt/3r35VpcTo2im+\
2jNeE6ok6f0j3SJm1yQWtlRDh8dKjKZODVZASdDEU5VayipNneFzeILSqCdJhFJ0B/\
U6HWz2nxAso9jvK3G6td/XcUeVjg25pxFWfdWrHkfEovfO+\
l1CifXK6BI9l6PJQ6xR4r596L4lHZHICMAhuRxKnkL7fShz54x0uho8tCG0G47TzROsE0Q0IlmGOdx\
n4hTAcDtJ0vRjU5WHK7vfadYIe5Wimb2eZbnTsO6MyG73W4cHJ6Z6CSC8OjQN3TrQ5VNCjZ4pEZQ5P\
NhTrQ7uUrTlTAxU+hzGSUwGPANln2i4T2R6z+7isKdLbManzU7izOwRbxjrzW6XYBPrMPmJZ4Y+\
eJPZw5Qgq68RZWVk7JmDS6z1MMwMzTR7ltEBFEve29QxsdqGjNZPTAJza6mXvkabmnqud4huuRNKUy\
3CKMX9HhQ96uBzgtQfEpixtDNjXq2hfpNnaodQc4V/\
Nj7znkDFjVbPNKHhlwAwQXcPYX5buPuEqOdtBkLyxLiCPmP0YVOkhtaziL88vXuMz3VVUSVOw62vAd\
1rhybucKTG6RqfHka+yex//vWPstBgZl81gWbYmOH96eO9lqEZpvkr/PNvj8yP+OcXj8wf8M/PH7W+\
6Y14A1mm2v1cP9K7PWtAxfbLey0AHQA7wbKs6uejr9c5WByeETxu8DfH2DxXdeonY/\
bdWmmtjP49HZbUgNjddmLet8vb8VHeHmUypyrazJ5gSSNW05TaMF9ZlMh+\
bzuL1qGdfaLgnmahjx2aP7JIp6nrhi1LUPyXf/\
E3Ptnx97Hs7gsKJLQrGiLdvTI0BYacvzLMC9rFEtmlFqbtXUbPIta0U6IQQLFE9rGFd88ItWA+v/\
oq0muxp2ryGwrlhZ0C/\
HT5YLOegGNjmmX67mTPYD40RuiRpw56G2rbkctovVjcKZcq9Ur9FYpnaRalKZEMXaYok0X2X1m09ry\
HdUu1+gMiRH3dwq8PDbND4yCuh8fqltpyaGhMFLglUBqYptfRqW96bK5PPCXKoFgChjteZoJEWmePQ\
EwSi4zyzaYDDIOQy5rAsIz3Exwgt1cERMGYOXCvrdXwnfkEeWJEkD9EbeOKcbp+\
3mqDFpCYIB6dojvPeqA5TZAgF2Pv7oHmApkEIk+lTELGB1jmTXN6sKXSaNW3TAbxM6N7ewlgi+\
FEU3VyYlDV0dY2gmOtmFfKVtXvxMRoaQaNbGKM6qaljbG0MSLYGMmljbG0McLZGDOMdcshlWMM3AiT\
HX3ASd/Q3b9SE9zYzLAbm2dSFPUptP3qGQBAZMYIrwCqCxBSrvzOUduDbT7IoztHOigPrDEKaMbyKH\
mowgwpabvd5moeJdgTNivsG/\
3a94mpE20yle50oPgTIGL0WaNcKSikXG9IWBYbRaXakEWF1AmuFQpivY7lWrEmKmK5XhDLklzGgtCo\
iSUBlxulhliq4vGeHzg9g+LpGmAxUF9vRJZJqVovlyu1cgNLZVyViFRX6lKtpNShF7leq+\
KiVK4rUr1Ua2CxIhSFSkGSKvVqtVEtj/d23+\
kNTICn5JJovs6wUCkTWapWKjUZfgrlulwuwiBKjUahVCtWijKWKsVysULqxXqhTMoVAk8lWSxUCgDP\
NZ394PgpJ1B/\
Z42SLArVelFoKFKlKhUEARcKlYqASV0oFeW6IpCiIolipSKWawBZVcJVQRJq9ZJYq1QmzGNl35B6TL\
VxwoPpPNdUEDuPe6pM6BS86qIHkFAtiVWilCo1XC8VcUUuicVqodKQKuWGUBFrRZlUBYAEw+\
xU5WqjKNQbpFGTgPwbCp4E0KeTAfIgOAHSpbuo3xENje6eMDPCfGJ0QJD64apVAbEirlYrtQrgGhca\
5YJQFoqAA6WhKFVMxIJSIGKphguy0CCiUgA6UGoCERpioS7NBy4ERorU9sMFVN8QFCJVS4zagSZgEu\
SyIlYaFUmSawRXCYAE8ElitVAWakK9VCgCbIUKACzUSnl0r6lpxtUBCz1xlcpNujzacDgXtXGXqdHf\
9PG+w/BIAmvqFQuDAWSsWDOed6UZjUOz/BcMeHta3e+T/j7Iq34r3opNqGrP2JRXbPxgiSbor09r/\
anaUUFGAQBTgbctZ3eM374GTtt04gVj9DemFWyCOcYLmTFuhj39bI4ABmpp6lyDkrCR5KPEN4+\
j9alDasFGzQf9p3/2GZTesm1AIh/\
pigq01AfHYdWzXD1EttKTyw7cJFYoNqWQY5MPFA0DkUVkfaA2KTUkqL/\
pfwYQ05TtVwJM932vXvKA6shDKNmTPHvRnj9nXgZxprEO3Gme1nMrDbSNEuAp4OZKHmUARWdgoRKr9\
RAY0Ea982AddOeSFZesuACsmFhEHjzBVnswhPv7Ku3ygAKgqmX0wF2GQg+\
9pzYp2C8AhxvMivGX3GQPRgplkGFarBs66Ocee+b4yobuf/FEBZtTZ1Y8PcZdcGZ7mpZH6y+\
6MtjWbCitGC0EM8eNngXe69F+\
Lufa8d8NVrELwEKllWEnIGDlyxOD5nI8VBSmWjtatXN4CKDG6d0hH2Z0HU4I1BqYXyBG7XfMT9snXc\
3og9OUtANB4L3wV2tjsa4Ed/\
Hgm8W84Ht94IKxqMix0aPEuCQmi4o8NnG3rUp0PK7khXxaqWvCcQAYkrBGZLPEP//\
8s6FWByyRgWd97mU4JX/xiMWSTgytfw7t+CKuzrcdDuISYu2UA4+11tf8fzui1Pr6+\
lJBGgpQO1Bf82so2NBmRRE8DEaFOaSpEotYXfDQ3E6gSpoB/\
T0xNDmCcBhT7DQBypaiNdc0sF0DlORkPClCORpWY64OyK1J4dENXmtaPC5ph+\
n534lWchBa2QPwz00QqfIwYSv88z+\
Prgux8pg8XXOx9EZ23Ti4hOpPsC5rPCC7ycc9iBQPcbSjx1cdGeH960DDI64sBjoUD/\
2rv2Sff31kCvzzH4/ML/nnvx+htaeqfsH6Hglwe+pvg3fdAhq5AH3E5OXqkQKTUguEd6lNpAue/\
4BZmBY0eMjgjrKqpALSWI/rLJ7WELKTcIoqnGYKp5BC6qHQ7PpuGNw16hdKKjmGn+\
Me2S7PUjJdJ5kcE9mVTK7FvJRMS8l0eyWTE1NYLMnEY7LvuWQK5OqEk1DOqpAnorz/\
lzJqKaNui4waLNzGwSFyaPR2S6iJIPMwsyOc7IyG4NLJC6XeaiG1eq1wCrjUfJvxGp9Cis7/\
TmSUBw/DYrj16bxRuzaatzaxg+kIm32xf5FRyS2KaKj0VgDeAUZd2+\
gu6mL90DQ6TdG4DMqZE1IxFg+Fq+8rN86aDLPIqPwQuXE8VWnxMBh/X5lx1mSxRUblh8yMg1S+\
xcNg4r1lxhmTKRcZlR8iM0ZLdV08LCffV4adNdl4kVH5ITLsTKngi4fs1PvKt7Mm4y8yKpd8G3KrxO\
IhO/2+8u2sm1UWGZULyrcedNO36N/he3JfW8dE7ylDm5QftIxOl63pHLzumoSy/\
fe0HmxmpUGbZ6Z6fg5YTNHkF21VYrkr6Rc6xR3ynBaDtaZhan3u4OpGqGGQ05tEHNDIw6afBh9ia7x\
2JVJt7wieCRhUnFzq2eCKTgZO99EGxhCyB4i98NZGwzV3rhng0yHJNDTtxPA47W0unrM+\
vlCt9uhm3IBEDONnmw5yAcvn3ApuN8E4zK3FCufCcKVbKVx3Kn1KsGIvYufo98J1d+\
SrHK7bNq9jb83gmymaPMMkdYwtqR1KGPmGvdHULGLqmJ2W4F+\
cH84jgoLhYXweFumh01js2dsNVAtr2mDqQla5ZSPR+6FH4la5qZGUAtWi/\
v1HzIgJJpcleyvc0OalsPIlFnJg/g1UoeuObrQKJUPb+JIH71hCTfyZwWy8tUOsaj2TPA+\
cMyZDA5RYvvMQIiI2mDGiUnfXhgc1qL5Dk5DwBMi3gTAD9/cMVfelALKUOfj9uen0EHE6QzNd+\
CmgaeinzfYZxukaswOc477W7T2AbFwoyY6D2lbWBlZm8uAPe2CpR9CAtqGPVmZrxKcL4vDnbI0NaRO\
Uco6MsrNTVwATd+\
2VpYPXROpZhCcoVkMkKPr2Ky7TFN9hmmJYsxClTNIxfGdT3WXsMfFkK5vhE7MwfFBtyXB90Ola/\
betLSNIU9vsC23zRDExA4ktKEuWYmsptj4ssRXHsvxmmUUz+\
0Tj5zGYnvji3BtecIVz8oaIeMzJGybqwf7aCM5vSBtq4IIlhsw4X0gtiuOAMk0qEV0eEVUowczuyVw\
aDGBn9wO0smTPd8dsPuy+meV8OmselLW+\
TyaS1sYpuSQmJdtLEnsfSMyP5pumMeeoUD91paC9JV0tPl2NnAL7ZoryWwzuIk7SU5UDAvlWy+\
j2t92TPrYtY7ulqV3RwKY8TjSxgDapZTjn7rrtBqQcCWBh3Qd14kKbP/6Rf8JHzp6/\
YdRBI9beqCMExeY+QRMJYQjxJ0BbZIB5Vd9+Rq62W4QfrzY3xAfDkAS9cnhuBvP20Dnqrx32jWB+\
7jM00Cpu0XW28fgQd1StjzYRP4x8G2Gdbp+YxmARnRXiRwHdG674BT9emyZPNKzqg+L76qXK9l7aJ/\
INangnVw9vgPy//2Wf/xpsgFwbPZJ/6MTqwfZIOnQGvX8BPz6ygP82hrn5VNXJnknwBVu7VPWxI/\
v9i7KjJ2Bde54/C9MynI2e2R/ihGLVDsI/95a5fTkLwSiXEqvXfamSKx5zCneeWnLKqrq9A517c+\
GGwb3TieedBWvH6nTZ4xxN59iyBt8mH666G84Pps+\
dpZAoayDx6zISwo3WsR19azkhxxvpNLnA5qNdjb1Zmo/zMx9DUrSfKaNRik1qkY8fDMvB/\
JzIiMLQlqRvNZVlnOUincj4sa8SaEOTEufFhu/FE/SN32aSZls3tjVDPyfmNhMYoBl/J0qvo/\
eMnJmYnR3iJJ3eUCLQEAgfDR11aV/VMXpYZ8DVE8vo7mGTd+GpwlhAVdjBF4QbLzI0AQ38lq+WU9Q+\
mhb1RFdjioCzcEpzeVzKu5Sbb6L+WDjqd3AaSirmRMMCQ90lU+co1hRN2bQ3bMSlT0lXwxIJ6H51+\
OFEXqJyLjea46qs3trEY0fkr7C8Rqxf8MW7oSOPbnHO9Cq7HMpiCyP0dwOvC+\
e8sfrrBwO26y3JTGojyvKL105qomUKrtyRLpmEO2Qz57yGXQsPM6mhEiGHchhDz73T1Qxpm5FQFX6E\
N5oyHtT1ZPqWT70JNlQYFAfMcXbbP9Bsqh2V/\
ba8YUcbd0HCmq31UYHjscT0MlMVSFR5PSGMMnoBmH+HhP+KL//FYJMDKUMX9Y1v0/CFkFqbE+\
IlQYOAk0Z139FpX5i42yXONb/DN+elzwz7RuMM/WTf9qxfOd/OZWn+\
Kxmd1MsEJ9Kw6tppwzG2Q7Xh2CpuG0luoXmNhM6EdCB5yXLwQ0Jy6WXV2208idBGe7iN1Bm3n71Wwl\
vddjuZPdfG8ZqKZBzZra35xFfixhI5NgCzuoxNmd1/FtRrejuWukdzXO5HZcIV9/BK//\
mWw6NyknrVH7qvQyTqDu8aWm+ZBJ6+eAFYC+fujUV5YyOvpkdkh7rZYiupl0R+\
iU0VixoZyObwtODenOCCsOXcUucBidwSMfoNV3Z5t7K7Qmxw2+i6fd05B2skLLx2IKsTXzyw67AxO+\
KQOulj87qW71ezQ9tT99hliKeEwjhp9Bv6xuBAsT9a3lm/vLN+eZ/s+\
3yf7KonhSJLo0z2GBgecBz9Jtn8sEDb5te7bkvg3bLrqeVtagsVBfyA/s6CXOUq1HaEulAoV5fXxS+\
vi19eF7+8Ln55XfxSvd+0el9fqvcFUu8zjPV+9hi/\
Vju9DjsFZrYRT3QEx0GaMjEZobRTL1aE2mzzEvsu+mksu/\
sCJCjdFQ2R7l4ZmgIskr8yQImyIO8uBW+9PfnUw90zQi3gv6++ivR6llPbsij2J3ND64OsnR9ln+\
3DLvaMzoWxwtzAuusHax6U5jYc/+Wf/4j9+vEcZ/CEgI7WLR6YIDKR5y4LkkKhsMPI/\
dtA7l2nt4zbbxZtuuQOloqlqK/fvjT4OHtiGkykzolySnOD7JMs8oT9LQPtoyy6UMHMum3MlszC++\
iQPJwQLMwu3cqlW7l0K8O7lQMXZ9Rjm+AQ+ZpHGw6/MV9TG/UJr1toQbE/\
gOJeWP3BODM3M3mU8SxdKOyZV+aLB/+e/nJH+AylHdsrjzZH7ETfrA7q/fzxT/7hj//\
2O4N66J9ii2iL5dHWqP3UWsmjO76HTfh/a9REGJoM21/9EibDKZZHH01Qr614Hj2cpNzYi/\
tjqoXBsel4Vq7UR98J4Sf5rIh5rlHN0XidUXHdzZ5gCQa+\
1FhLjbXUWAurse74uLiZyKO79v9NU2qrlwT93TtTLFy6vqFQXtgpwE+XgzxVzQr/+C/\
Sj42qX83es0d5jHVVIXaY2ckuaMby7nWjaXvCmqt55/b2gDcF5p3DfWe+\
p2685wk3oXm9zXoP13hv4zc9eZ3Nes/\
Q9M4GN9kMOpvxHpXxzqLd1OEBNOs9EeMAzXQTgQfXrOfgzwcu76R1D67Zz/mmW75koyalBtuPsul/\
BoKRpmwFB9x/3/fqJc8uGXkIJXuSp4jck9Xdq9AdoT7WgTs503pupVsxZrJ+c2oGkC8Na+k1LL2GG/\
Ea/h/n8T+z"}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767967071866`16.337445124282834*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767967071866`16.337445124282834*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767967071866`16.337445124282834*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767967071866`16.337445124282834*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
              "\"Found 2 suggestions\"", ItemSize -> Scaled[0.75], 
               StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], 
            ButtonFunction :> (CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "3f9cdfbf-7f28-451c-ab41-b7e63b0e987b"]]]]]), Appearance -> 
            None, BoxID -> "3f9cdfbf-7f28-451c-ab41-b7e63b0e987b", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767996024006`16.33744512755319*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/"]], Appearance -> None, BaseStyle -> "Hyperlink",
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0Bf\
eC/M2H9xb/\
O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3xyDzVqFu\
CHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, 
                  "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2ea70191-8f3d-40e3-9d07-044afaa05a37"]]]]]), Appearance -> 
                   None, BoxID -> "2ea70191-8f3d-40e3-9d07-044afaa05a37", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844767996024006`16.33744512755319*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  
                  GridBox[{{
                    "\"Paclet build completed successfully.\"", "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 TemplateBox[{
                   ButtonBox[
                    TagBox[
                    
                    PaneSelectorBox[{
                    False -> 
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", True -> 
                    StyleBox[
                    "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
                    SystemOpen[
                    File[
                    "/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/"]], Appearance -> None, BaseStyle -> "Hyperlink",
                     Evaluator -> Automatic, Method -> "Preemptive"], 
                   "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0Bf\
eC/M2H9xb/\
O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3xyDzVqFu\
CHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, 
                  "ClickToCopyTemplate"], "\"\"", 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "2ea70191-8f3d-40e3-9d07-044afaa05a37"]]]]]), Appearance -> 
                   None, BoxID -> "2ea70191-8f3d-40e3-9d07-044afaa05a37", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Build result: \"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.203736`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.203736`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|"File" -> 
                    File["Kernel/BaseballReferenceData.m"], "Hash" -> 
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a"|>, <|"File" -> File["Kernel/Endpoints.m"], "Hash" -> 
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964"|>, <|"File" -> File["Kernel/TopLevel.m"], "Hash" -> 
                    
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4"|>, <|"File" -> File["Kernel/XMLRules.m"], "Hash" -> 
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a"|>, <|"File" -> 
                    File["Documentation/English/Guides/BaseballReferenceData.\
nb"], "Hash" -> 
                    "04d6743f80d3d856c73462b765d8db0b08ef477ee7642cee429b5ee5b\
dcc5e9a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], "Hash" -> 
                    "0c6187f0043d3b9f287b58d8ec97676346f35c1b1eeee5367e7f35a77\
804f9ff"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], "Hash" -> 
                    "e26f8ef5db355982d33d49afb21503e8c1d5a259005881005a159b5e2\
33fa6e3"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|"File" -> 
                    TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 
                    2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
                    Rational[-1, 2]}}]}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, ImageMargins -> {{5, 
                    3}, {4, 5}}], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/BaseballReferenceData.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoints.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/TopLevel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/XMLRules.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/BaseballReferenceData.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04d6743f80d3d856c73462b765d8db0b08ef477ee7642cee429b5ee5b\
dcc5e9a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0c6187f0043d3b9f287b58d8ec97676346f35c1b1eeee5367e7f35a77\
804f9ff", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, ImageMargins -> {{5,
                     3}, {4, 5}}], ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e26f8ef5db355982d33d49afb21503e8c1d5a259005881005a159b5e2\
33fa6e3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], ItemSize -> {
                    Full, Automatic}]}}, BaseStyle -> {ContextMenu -> 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> GrayLevel[
                    0.7490196078431373], Spacings -> {0, 0}, Alignment -> 
                    Left, BaseStyle -> {FontFamily -> "Source Sans Pro", 
                    FontSize -> 14, FontWeight -> Plain}], LineBreakWithin -> 
                    False, ContextMenu -> {}, NumberMarks -> False, 
                    ShowAutoStyles -> False]], 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], ButtonFunction :> (
                    Typeset`open$$ = True), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.053258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], ButtonFunction :> (
                    Typeset`open$$ = False), Appearance -> None, 
                    BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.053258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"14.094142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"FailedFiles\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztPUtvG0l6ovjQw5IlezyT2Q2QKAw32CRDi+/\
HYgCboqSxs9YMrZI9u0iCcXV3tdhQs5vpakrmBgESINccsptjDkFui1yDXHPIL8gpuW72EOSSPWZvk\
6+q33zI3U1aFm1SgCh11+Or+t5ffVUlJ+j6Kb460F8TKqfpvaeaSYy+QUxsKroGj+\
UEzZzqrICcoqlnCjXlVZo5w+fwBK2hgSgSStEdNOj1sDF8QrCEEn8sJ+\
nu4VDDPUU80aWBSlj1Vbd6EhGT3j0b9gkl5iu9T7RcjqaPsUqJ8/\
aB85b0BCIhAIfkcih9Cu0PocydM9Lrq/\
DQgtBqOEl3OlgjiKhENHUj2GfqFMBwOknTtS8MRQpWdr7XWCPsVYZuHAxM05mGTXtEVrvfPT7qGMol\
gPDq2NA180iTTgnVB4ZI0Mbx0YFi9nCfol17YqDSVzBOYjDgGSiHRMVDItG7VhfHA01kMz5tdlJnxo\
C4w9hs9fsEG1iDyU99qWvem40DTAkyhyqRV0bGvnF0idUBhpmhG62BqfcAxaL7NnNCzK4uoc2OQWBu\
TeXS12hLVc61HtFMZ0Jppk0YpTjfXtGnPXxOkPITAjO2Zs+YWyvQb/\
pM6RFqrPDP1mP3CVTcag8MAxp+CQATtH0M89vG/SdEOe8yENId/Qr6TNAHLYHq6sAk/vJ0+\
wSfa4qsiJyG298CutePDdzjSE3SdT49jHzT2f/6+59locGNQ8UAmmFjhvenXxy0dVU3jN/gn/\
94ZHzEP798ZPyIf/7zUfs77oi3kGko/a+0p1p/\
YHpUbL282wbQAbAOliRFOx99vcnB4vCM4HGLvznBxrmiUT8Zs+/2Sntl9O/\
psGQ8YnfaSbjfDm8nR3l7lMnsqmgn28GiSsyWIXZhvrIolf3BXhZtQjuHRMYD1UQf2zT/\
1CS9lqbplixByV/9zT/4ZMc/JbL7LyiQ0L6gC3T/SldlGHL+SjcuaB+LZJ+\
amHb3GT0LWFVPiUwAxSI5xCbePyPUhPn85ptYr4WBokpvKJQvPizAT58PNusKODamWabvTvYM5kNlh\
B576qC3QNu2XEabpdLDUqFcL9deoWSWZtEaJaKuSRRtZJH1VxatPx9gzVTMoUeEaKiZ+\
PWxbvRoEsR1cKxOqV2bhsZEgVMCrQHTDHoa9U2PxfWpZ0T2iqVguONlJkikTfYIxCQxySjf7NjAMAi\
5rAkNy3g/4QFyekVAFIyZQ/faXo3emU+Qp0YE+\
QPU1a8Yp2vn7S5oAZEJ4tEpuvPlADSnARLkYuzdXdBcIJNA5CmUScikh2XeNKcHSyqNVn3LZJA80/\
u3lwB2GU5URSMdnSq2trYQnGgn3FKWqn4nJkZb1WlsE2NUNy1tjKWNEcPGSC9tjKWNEc3GmGGsuzap\
nGDgRpjs+ANO+4bu/JWZ4MZuBN3YPJOiaEih7VdfAgBEYozwCqC6ACHlyO8ctTzY1v08uvNUA+\
WBVUYBrUQepY8VmCF5zWq3tZpHKfaEzQr7Rr/\
1Q2JoRJ1MpQ97UPwJEDF63KxUCzKpNJoiloRmSa41JUEmDYLrhYLQaGCpXqoLslBpFISKKFVwsdisC\
+UirjTLTaFcw+\
M937d7BsXT18FioL7eiCSRcq1RqVTrlSYWK7gmErEhN8R6WW5AL1KjXsMlsdKQxUa53sRCtVgqVgui\
WG3Uas1aZby3e3ZvYAI8I5dE9XWGi9UKkcRatVqX4KdQaUiVEgyi3GwCLZaqJQmL1VKlVCWNUqNQIZ\
UqgaeiJBSqBYDnms5+dPKME6i/\
s2ZZEoq1RqnYlMVqTSwUi7hQqFaLmDSK5ZLUkIukJIuCUK0KlTpAVhNxrSgW642yUK9WJ8xj9VAXB0\
y1ccKD6TxXFRA7XwwUidApeNUEF6BCRarVKzCtBaksNQCierlSKwn1WlVqwBCFQoPIlXqdkHqtUhIJ\
qZSaQpWQqiDBbJPmBIA+\
nwyQC0EHSJfuo2FP0FW632FmhPFE74EgDcAl1oqNulwoVMpSWWjKpUZdqDakBhGb9Vq9BkDK5apYFI\
oEPtVyrU7q8ADX64AiuSnL84ELgZEidv1wkVJNhimpSkK5Wm02SlK5LAGNygIjwDJpiEWpikvVJiC1\
0SjCbyAvNmOlclnGNVLOo7stVdWvjljoiatUbtLl0ZbNuaiL+0yN/\
q6P922GRyJYU69YGAwgY8VaybwjzWgSmuW/YMB70+r+kAwPQV4N2+\
l2YkJVa8amvGLjB0s0RX97WuvPlJ4CMgoAmAq8ZTk7Y/zeNXBaphMvmKC/\
M61gC8wxXshIcDPs2eM5AhiqpalzDUrCQpKPEt88jvbnNqmFGzUf9F/+\
1WMovWvZgER6qskK0NIQHIdV13J1Edlem1zWc5NYocSUQrZN7ikaBiKLyPpAbVGqi1B/x/\
8MIKYZy68EmO75Xr3kAdWRh1ByILr2ojV/\
9rx4caaxDpxpntZzew1oG6XAU8CtlTzaABSdgYVKzPYDYEAL9faDTdCdS1ZcsuICsGJqEXmwg82uN4\
R7hwrt84ACoKqtD8BdhkIP3KcWKVgvAIdbzIrxl9xhD0YKbSDdMFk31OvnLntm+8q65n/\
xRAGbU2NWPD3BfXBmB6qaR5sv+hLY1mwo7QQthDPH9YEJ3uvTw1zOseM/\
C1exD8BCpZWgExCy8mVHp7kcDxVFqdaNV+0cHgKoSbod8GFG1+GKoVoD8wvEqPWO+WmHpK/\
qQ3Ca0lYgCLwX/\
mp9LNaV4i4efLOYF3xvei4Yi4qc6ANK9EtisKjIFwbudxWRjseV3JBPO3NNOA4AQyJWiWSU+eff/\
jXQqscSG/BsyL0Mu+QvH7FYUkdXh+fQji/ian9b4SAuIdZPOfBYbX/L/7ciSu1vry8VpqEQtUP1Nb+\
Gwg1tVhTBw3BUmEOqIrKI1QUPzT0MVUnVob8nuirFEA5jip2mQNlStO6YBpZrgNKcjCdFKEfDaszVA\
bk1KTy6xWtNi8elrTA9/zvVTnuhlQMA/9wAkSoFCVvmn/99dF2Ilcfk6bqDpTey69bRJVR/\
gjVJ5QHZHT5uL1Ic4Ghbj6/aMsL914aGR1xZDDQQD/3p37LPvz8yivzzi0fGj/\
nnfx6h9WeKdsH6Hglwu+pvi3fdBhq5AH3E5OXqUxkmpR4K72KXiBc8/\
wGzMC1o8IjBHXlVzoSksQHXWTytIWIn0RRVNM0UTSFF1EOR2fXdMLhj1C+\
UVLINP9s9slyepWS6TjLZJrIjmRyLeSmZlpLp9komO6awWJKJx2Tfc8kUytWJJqHsVSFXRLn/\
L2XUUkbdFhnlLdwmwSGyafR2S6iJIPMwsy2crIyG8NLJDaXeaiG1eq1wCrnUfJvxmpxCivb/\
dmSUBw+jYrj9+bxRuz6atzaxg+\
kIm32xf5FRyS2KeKh0VwDeAUYd22gb9bF2bOi9lqBfhuXMCakYi4fC1feVG2dNhllkVH6I3DieqrR4\
GEy+r8w4a7LYIqPyQ2ZGL5Vv8TCYem+ZccZkykVG5YfIjPFSXRcPy+n3lWFnTTZeZFR+\
iAw7Uyr44iE7897y7YzJ+IuMyiXfRtwqsXjIXntf+XbWzSqLjMoF5VsXuulb9O/\
wPbmvzROiDeTAJuX7bb3XZ2s6R6/7BqFs/z1thJtZ0WvzzFDOzwGLGZr+\
uquILHdl7YVGcY88p6VwramYml/\
ZuLoRavByetOIAxp72PTz8ENsj9euxqrtHsEzAYOynUs9G1zxycDuPt7AGEIOALEX7tpotObOVR18O\
iQauqp2dJfT3ubiOevja8Xsjm7GDUnEMH626SAXsnzOqeB0E47DnFqscC4KVzqVonWn0GcEy9Yido7\
+IFp3T32Vo3Xb5XWsrRl8M0WLZ5hkTrApdiMJI9+wt1qqSQwNs9MS/\
IvzwTwiKBgdxudRkR45jcWavf1QtbCqelMXscotG4k2jDwSp8pNjaQcqhb17z9iRkw4uSxaW+\
ECm5eiypdExIH5N1BFrju60SqSDO3iSx68Ywk1yS91ZuOtH2NFHRjkeeicMQkaoMT0nYcQE7HhjBGF\
Ors2XKhB9R0bhEQnQL4NhBm4f6Qrmi8FkKXMwe+vDLuHmNMZmemiTwFdg366bJ9hkq4zO8A+\
7mvT2gPIxoXS7DioPXndszLTR382AEs9hga0DH20MlsjPl2QhD9nayygTVDGPjLKyk5dAUxsWytLR6\
+JODAJT1CsRUhQ9O1XXKYpvsM0xahmIcoYpKf7zqbaZuwx8WQri+\
FTszB8WG3JcH3U65vDt60tY0hTy+\
yLbPPEMTFDiS0oS5Ziaym2PiyxlcSS9GaZRTcOicrPYzBc8cW5N7rgiubkBYh4zMkLErW3vzaG8xvR\
hvJcsFTAjPOF1OI4DmijRUWiSSOiCqWY2T2ZS8MBbO9+gFaW7PnumM2H3TeznE9nzYOyNg/\
JRNLaOiWXxKBkb0li7wOJ+dF80zRmHxXqp64MtLekq8Wnq5FTYN9MUX6LwVnESbuq0iOQ77b1/\
nDPOeljz9T32qrSF3RsSONEkwhpk5q6fe6u025IyhEBFtZ9WCcusvnjH/knfOTs+\
RtGHTZi7Y46RlBs7hM0kRACiO8AbREP84q29yW52msTfrza3BAfDkMi9MrhuRnMW0PnqL922DeC+\
bnPkKdVnKKbbOPxMe4p6hDtIH4Y+R7CGt3rGLq3iM4K8aOA7gYrfs2P16bpjooVzSt+qFwqbO+\
ldSKfV8M9uTq4AfLX/8c+/+1tgFwfPZI/cGK1tz2SBs6g9y/gJ0cW8N/GMHeeKRo5MAi+\
YGuXijZ2ZL9/UXb0BKxrz/NnYVqGs9Ez+\
yOcUKxYQfjn7jK3L2chHOVSYg76LxVyxWNO0c5TS09ZVbd2oHNvLtowuHc68byzcO2YvT57nKNrOba\
swbfJR6vuhPPD6XN7KSTOGkjyuoyEaKO1bUffWk7E8cY6TS60+WhVY2+\
W5uP8zMeIFO1nyniUYpFa7OMHo3IwPycypjC0JOlbTWUZZ7lYJzJ+\
7KsE2tCgxH6x5XvxBH36fSZp9jR9T9W1c2LsMYEBmvH34/Q6es/\
ImYHZ2SF20ukNJQIFQPgocNSldVXH6GGdIVdPTL1/\
gA3ehasKEyFVYQ9fEG68SNAENPB7vlp2UetoWjQQHI0pAM6iKc3lcSnvUm6+\
ifoT0ajfxmkkqZgTdBMMdYdM7aNYMzRj0V7QiFs7JX0ViySk+9XjhxO5icq53GiOq7x6axOPbZG/\
wvIasXbBF+\
8CRx7d4pzpVXY5lMkWRugfhF4Xzrlj9dcPB2zfXZKZ1Eac5Re3ncxEyxRcuaeaaBDukM2c8xp1LTzK\
pEZKhAzkMEaee7urGdI2Y6Eq+ghvNGU8rOvJ9C2fegNsqCgoDpnj7LR/\
pFpUOyr7LXnDjjbug4Q12pujAsdliellpiqQuPJ6Qhhl9AIw/w4J/xVf/ovBJgdSAhf1jW/\
T8IWQ2jsT4iVhg4CTRnXP1mlfG7jfJ/Y1v8Gb89bOdOtG4w36yaHlWb+yv+\
3L0vxXMtqplylOpFHVtd2GbWxHasO2VZw20txCcxuJnAlpQ/\
KS5eBHhOTSzaq32ngSo41usI3MGbef3VaiW91WOxsHjo3jNhXLOLJaW/eJr9SNJXJsAWY1CRsSu/\
8srNf0dix1l+a43I/LhCvO4ZX+8y2Do7KTepWfOK8jJOoGdw1ttg0CT1+8AKxFc/\
fGoryJkVfTI7KBbnbZSuolkV5iQ8GCSjzZHJ0WnJsTHBB27VvqXCCRUyJBP3Vkl3sruyPEvNtGN63r\
zjlYI2Hh9SNJmfjivlWHjdkWh9ROH5vXtXy/mQ1sTz1glyGeEgrjpPFv6BuDAyX+fHln/fLO+\
uV9su/zfbKrrhSKLY02sifA8IDj+DfJ5oMCbY9f77ongnfLrqeW9qglVGTwA4YPF+\
Qq12L9YaFaLlUby+vil9fFL6+LX14Xv7wufqneb1q9by7V+\
wKp9xnGei97gl8rvUGPnQIz24gnOoLjIE2dmMrDQrNSrJRmm5jEZ+hfEtn9FyBC6b6gC3T/\
Sldl4JH8lQ5alEV59ym4693Jxx7unxFqAgN+802s17Mc25ZFib+\
YG17vZ60EKetwH3azZ3w2TBTmBta2H6x5kJrTcPJXf/\
0z9uvv5jiDHQJKWjN5ZIJIRJq7MEgXC4WHjNy/B+\
Tet3vbcPrNoh2H3MFUMWXl9dsXBx9nO4bOZOqcKKc8N8g+\
ySJX2t8y0D7KogsF7KzbxmzpLLyPD8mDCdHC7NKvXPqVS78yul/p+TijLtsEj8jXPNqy+Y05m+\
qoU3jdSgtK/CkUd+Pq98eZubWRRxuuqQuFXfPK+PTxrzv/uF18jNZs2yuPdkYMRd+sevXyf/\
ISlwufefXQPycW0RbLo91R+6m9kkd3fA9b8P/uqIkQmAzLYf0xTIZdLI8+\
mqBe28k8ejBJubEX98ZUC4Njx3atHKmP/jCCo+\
SzIua5SDVH43VGxbWd7WARBr7UWEuNtdRYC6ux7vi4uJXKo23r/5YhdpVLgn7+\
zhQLl65vKJQvPizAT5+DPFXN/jT1i83vV2p+\
NXvXGuUJ1hSZWHFmO72glcg7942uWRPWWs3b17eHvCowb5/uO/NFdeM9T7gKze1t1ou4xnsbv+\
rJ7WzWi4amd+\
ZdZeN1NuNFKuOdxbuqwwVo1osixgGa6SoCD64ZD8KfD1zuUeseac580Dfd9WUbtSjV2YaUHf8zEIw0\
Yyk44P57vlcveXrJyEMoORBdReQcre7chW4L9bEOnMmZ1nN7rZ1gJut3pqYA+fKwll7D0mu4Ea/h/\
wE28jle"}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.844767996024006`16.33744512755319*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           
           Grid[{{"Paclet build completed successfully.", ""}}, Spacings -> 
            0.25], 
           RawBoxes[
            TemplateBox[{
              ButtonBox[
               TagBox[
                
                PaneSelectorBox[{
                 False -> "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                  True -> StyleBox[
                   "\"Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "HyperlinkActive", StripOnInput -> False]}, 
                 Dynamic[
                  CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                 FrameMargins -> 0], 
                MouseAppearanceTag["LinkHand"]], ButtonFunction :> 
               SystemOpen[
                 File[
                 "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/\
Testing__BaseballReferenceData/Testing__BaseballReferenceData/build/"]], 
               Appearance -> None, BaseStyle -> "Hyperlink", Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              "OEM6eJydj0EKwjAQRYkUEfQU3dfoESziylVTVyJlUic1OG1KZkq9k5e0BfeC/\
M2H9xb/O8WrAsY8vJCd4mUR5u4STs6exSQnT2jU1S14XWLbEwjOXH35W6X6whhZ22BZj4FchDYbQ3x\
yDzVqFuCHzoHRAlGBDiN2NR5BQJfI4rumqv7CdvB0/yFl++\
1uyrSEUFKzmd8cYjO02IlRtw9ewVrE"}, "ClickToCopyTemplate"]], "", 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "2ea70191-8f3d-40e3-9d07-044afaa05a37"]]]]], Appearance -> 
             None, BoxID -> "2ea70191-8f3d-40e3-9d07-044afaa05a37"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Build result: ", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.203736`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletArchive\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/build/Testing__BaseballReferenceData-1.0.0.paclet\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"22.203736`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PacletManifest\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    TagBox[
                    TagBox[
                    
                    DynamicModuleBox[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
                    "InitialData" -> <|"Files" -> {<|
                    "File" -> File["Kernel/BaseballReferenceData.m"], "Hash" -> 
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a"|>, <|"File" -> File["Kernel/Endpoints.m"], "Hash" -> 
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964"|>, <|"File" -> File["Kernel/TopLevel.m"], "Hash" -> 
                    
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4"|>, <|"File" -> File["Kernel/XMLRules.m"], "Hash" -> 
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a"|>, <|"File" -> 
                    File["Documentation/English/Guides/BaseballReferenceData.\
nb"], "Hash" -> 
                    "04d6743f80d3d856c73462b765d8db0b08ef477ee7642cee429b5ee5b\
dcc5e9a"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], "Hash" -> 
                    "0c6187f0043d3b9f287b58d8ec97676346f35c1b1eeee5367e7f35a77\
804f9ff"|>, <|"File" -> 
                    File["Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], "Hash" -> 
                    "e26f8ef5db355982d33d49afb21503e8c1d5a259005881005a159b5e2\
33fa6e3"|>}|>, "AllowEmbedding" -> True, "InitialShape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "InitialType" -> 
                    TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Meta" -> <||>, 
                    "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
                    TypeSystem`PackageScope`HeaderShape[<|{All, All, 
                    TypeSystem`PackageScope`KeyDummy[4]} -> 
                    1, {All, All, "File"} -> 1, {All, All, "Hash"} -> 1|>, 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`KeyValueShape[
                    TypeSystem`PackageScope`AtomShape[56.00000000000001], 
                    TypeSystem`PackageScope`Limited[
                    TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`Limited[
                    
                    TypeSystem`PackageScope`RowShape[<|
                    "File" -> TypeSystem`PackageScope`AtomShape[60], "Hash" -> 
                    TypeSystem`PackageScope`AtomShape[560.]|>], 
                    DirectedInfinity[1], 2, {All, All}]], 7, 
                    DirectedInfinity[1], {All}]]], 1, 
                    DirectedInfinity[1], {}]], "Type" -> TypeSystem`Assoc[
                    TypeSystem`Atom[String], 
                    TypeSystem`Vector[
                    TypeSystem`Struct[{"File", "Hash"}, {
                    TypeSystem`Atom[File], 
                    TypeSystem`Atom[String]}], 7], 1], "Path" -> {}, 
                    "DisplayedRowCount" -> 1, "DisplayedColumnCount" -> 2, 
                    "DataRowCount" -> 1, "DataColumnCount" -> 2, 
                    "SortPaths" -> {}, "SortDirections" -> {}, 
                    "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
                    DynamicModule[{
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                    Style[
                    Grid[{{
                    Item[
                    Pane[
                    Annotation[
                    Mouseover[
                    
                    Graphics[{}, ImageSize -> 6, BaselinePosition -> 
                    Scaled[-0.15]], 
                    Graphics[{
                    GrayLevel[0.6], 
                    
                    Polygon[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                    2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], 2^Rational[-1, 2]}, {-2^
                    Rational[-1, 2], -2^Rational[-1, 2]}}]}, ImageSize -> 6, 
                    BaselinePosition -> Scaled[-0.15]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, Keys}, "KeyDummy", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["File", 
                    Style[
                    "File", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "File"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "File"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Hash", 
                    Style[
                    "Hash", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, All, "Hash"}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, All, "Hash"}, "ColumnHeader", True], "Mouse"], 
                    ImageSize -> {{1, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                    Item[
                    Pane[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover["Files", 
                    Style[
                    "Files", FontColor -> RGBColor[0.27450980392156865`, 
                    0.5372549019607843, 0.792156862745098]]], "LinkHand"], {
                    "MouseClicked", 1} :> If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Files"]}, 1]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"]}, "RowHeader", False], "Mouse"], 
                    ImageSize -> {{56.00000000000001, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/BaseballReferenceData.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "9450fe489cadb92f69dbfe8ea700b88ad727bfb480b4cd4a1197b31a4\
939b36a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 1, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/Endpoints.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "edde368445749ac4a6cec8f8c73f8fb4d876a2c48fc8379ab512150cc\
5866964", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 2, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/TopLevel.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a154edc6557d7d7048d424cd399037252dac52425e82804e45e725cdb\
05073f4", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 3, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File["Kernel/XMLRules.m"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "a93db168219fc56c011a00551ae8132d8f1e2fcbb55b471546ca61c17\
83b755a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 4, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/Guides/BaseballReferenceData.nb"], 
                    
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "04d6743f80d3d856c73462b765d8db0b08ef477ee7642cee429b5ee5b\
dcc5e9a", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 5, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "0c6187f0043d3b9f287b58d8ec97676346f35c1b1eeee5367e7f35a77\
804f9ff", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 6, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}, {SpanFromAbove, 
                    Item[
                    Pane[
                    Annotation[
                    File[
                    "Documentation/English/ReferencePages/Symbols/\
PlayerSearch.nb"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["File"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{60, Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}], 
                    Item[
                    Pane[
                    Annotation[
                    "e26f8ef5db355982d33d49afb21503e8c1d5a259005881005a159b5e2\
33fa6e3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    Key["Files"], 7, 
                    Key["Hash"]}, "Item", False], "Mouse"], 
                    ImageSize -> {{560., Full}, Automatic}, 
                    ImageMargins -> {{5, 3}, {4, 5}}], 
                    ItemSize -> {Full, Automatic}]}}, 
                    BaseStyle -> {ContextMenu -> Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem["Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem["Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                    "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
                    Dividers -> All, FrameStyle -> 
                    GrayLevel[0.7490196078431373], Spacings -> {0, 0}, 
                    Alignment -> Left, BaseStyle -> {
                    FontFamily -> "Source Sans Pro", FontSize -> 14, 
                    FontWeight -> Plain}], LineBreakWithin -> False, 
                    ContextMenu -> {}, NumberMarks -> False, ShowAutoStyles -> 
                    False]], TypeSystem`NestedGrid`PackagePrivate`initialQ = 
                    True}, 
                    Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`datasetData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                    TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
                    DynamicModuleValues :> {}], 
                    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                    TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                    TypeSystem`PackageScope`SubViewPathbar[
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = 
                    Style[
                    Framed[
                    Dynamic[
                    Replace[
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
                    Blank[]] -> "", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                    Blank[]], 
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                    Blank[]], 
                    Pattern[
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Blank[]]] :> (
                    Increment[
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
                    TypeSystem`NestedGrid`PackagePrivate`pathType$; 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader = TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path$, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                    Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                    TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
                    FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, 
                    Alignment -> Top, ImageSize -> {Automatic, 15}], FontSize -> 
                    1], TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$\
}, 
                    DynamicWrapperBox[
                    DynamicBox[
                    ToBoxes[
                    Dataset`DatasetContent[
                    2, "Path" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
                    "Grid" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
                    "State" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    "VPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
                    "HPos" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
                    "TopBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
                    "BottomBar" -> 
                    Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
                    "OutputID" -> Hold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
                    StandardForm], TrackedSymbols :> {
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
                    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
                    MouseAnnotation[]], 
                    Initialization :> (
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
                    CreateUUID[]), DynamicModuleValues :> {}, 
                    BaseStyle -> {LineBreakWithin -> False}, 
                    UnsavedVariables :> {
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$}], 
                    Deploy, DefaultBaseStyle -> "Deploy"], 
                    Dataset`InterpretDataset[1], Selectable -> False, 
                    Editable -> False, SelectWithContents -> True], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DocumentationBuildResults\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    DynamicModuleBox[{Typeset`open$$ = False, 
                    Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.053258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}}, GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{2}}, 
                    "Rows" -> {{Automatic}}}, BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}], 
                    True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Documentation build completed successfully.\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"TotalTime\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"17.053258`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"MaximumFileTime\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{
                    
                    TemplateBox[{"14.094142`", "\"s\"", "seconds", 
                    "\"Seconds\""}, "Quantity", SyntaxForm -> Mod], ",", 
                    "\"/Users/bobs/wolfram-workspace/stash/\
BaseballReferenceData/Testing__BaseballReferenceData/Testing__\
BaseballReferenceData/Documentation/English/ReferencePages/Symbols/\
PlayerHomers.nb\""}], "}"}], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"FailedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"FailedFiles\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"PercentSucceeded\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    
                    TemplateBox[{"100.`", "\"%\"", "percent", "\"Percent\""}, 
                    "QuantityPostfix", SyntaxForm -> Mod], "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"ProcessedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"SuccessfulFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SkippedFilesCount\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"DocumentationBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Automatic}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {"Columns" -> {{Left}}, 
                    "Rows" -> {{Top}}}, AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {{Automatic}}, 
                    "Rows" -> {{Automatic}}}, BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], "}"}],
                     "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"PacletBuild\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztPUtvG0l6ovjQw5IlezyT2Q2QKAw32CRDi+/\
HYgCboqSxs9YMrZI9u0iCcXV3tdhQs5vpakrmBgESINccsptjDkFui1yDXHPIL8gpuW72EOSSPWZvk\
6+q33zI3U1aFm1SgCh11+Or+t5ffVUlJ+j6Kb460F8TKqfpvaeaSYy+QUxsKroGj+\
UEzZzqrICcoqlnCjXlVZo5w+fwBK2hgSgSStEdNOj1sDF8QrCEEn8sJ+\
nu4VDDPUU80aWBSlj1Vbd6EhGT3j0b9gkl5iu9T7RcjqaPsUqJ8/\
aB85b0BCIhAIfkcih9Cu0PocydM9Lrq/\
DQgtBqOEl3OlgjiKhENHUj2GfqFMBwOknTtS8MRQpWdr7XWCPsVYZuHAxM05mGTXtEVrvfPT7qGMol\
gPDq2NA180iTTgnVB4ZI0Mbx0YFi9nCfol17YqDSVzBOYjDgGSiHRMVDItG7VhfHA01kMz5tdlJnxo\
C4w9hs9fsEG1iDyU99qWvem40DTAkyhyqRV0bGvnF0idUBhpmhG62BqfcAxaL7NnNCzK4uoc2OQWBu\
TeXS12hLVc61HtFMZ0Jppk0YpTjfXtGnPXxOkPITAjO2Zs+YWyvQb/\
pM6RFqrPDP1mP3CVTcag8MAxp+CQATtH0M89vG/SdEOe8yENId/Qr6TNAHLYHq6sAk/vJ0+\
wSfa4qsiJyG298CutePDdzjSE3SdT49jHzT2f/6+59locGNQ8UAmmFjhvenXxy0dVU3jN/gn/\
94ZHzEP798ZPyIf/7zUfs77oi3kGko/a+0p1p/\
YHpUbL282wbQAbAOliRFOx99vcnB4vCM4HGLvznBxrmiUT8Zs+/2Sntl9O/\
psGQ8YnfaSbjfDm8nR3l7lMnsqmgn28GiSsyWIXZhvrIolf3BXhZtQjuHRMYD1UQf2zT/\
1CS9lqbplixByV/9zT/4ZMc/JbL7LyiQ0L6gC3T/SldlGHL+SjcuaB+LZJ+\
amHb3GT0LWFVPiUwAxSI5xCbePyPUhPn85ptYr4WBokpvKJQvPizAT58PNusKODamWabvTvYM5kNlh\
B576qC3QNu2XEabpdLDUqFcL9deoWSWZtEaJaKuSRRtZJH1VxatPx9gzVTMoUeEaKiZ+\
PWxbvRoEsR1cKxOqV2bhsZEgVMCrQHTDHoa9U2PxfWpZ0T2iqVguONlJkikTfYIxCQxySjf7NjAMAi\
5rAkNy3g/4QFyekVAFIyZQ/faXo3emU+Qp0YE+\
QPU1a8Yp2vn7S5oAZEJ4tEpuvPlADSnARLkYuzdXdBcIJNA5CmUScikh2XeNKcHSyqNVn3LZJA80/\
u3lwB2GU5URSMdnSq2trYQnGgn3FKWqn4nJkZb1WlsE2NUNy1tjKWNEcPGSC9tjKWNEc3GmGGsuzap\
nGDgRpjs+ANO+4bu/JWZ4MZuBN3YPJOiaEih7VdfAgBEYozwCqC6ACHlyO8ctTzY1v08uvNUA+\
WBVUYBrUQepY8VmCF5zWq3tZpHKfaEzQr7Rr/\
1Q2JoRJ1MpQ97UPwJEDF63KxUCzKpNJoiloRmSa41JUEmDYLrhYLQaGCpXqoLslBpFISKKFVwsdisC\
+UirjTLTaFcw+\
M937d7BsXT18FioL7eiCSRcq1RqVTrlSYWK7gmErEhN8R6WW5AL1KjXsMlsdKQxUa53sRCtVgqVgui\
WG3Uas1aZby3e3ZvYAI8I5dE9XWGi9UKkcRatVqX4KdQaUiVEgyi3GwCLZaqJQmL1VKlVCWNUqNQIZ\
UqgaeiJBSqBYDnms5+dPKME6i/\
s2ZZEoq1RqnYlMVqTSwUi7hQqFaLmDSK5ZLUkIukJIuCUK0KlTpAVhNxrSgW642yUK9WJ8xj9VAXB0\
y1ccKD6TxXFRA7XwwUidApeNUEF6BCRarVKzCtBaksNQCierlSKwn1WlVqwBCFQoPIlXqdkHqtUhIJ\
qZSaQpWQqiDBbJPmBIA+\
nwyQC0EHSJfuo2FP0FW632FmhPFE74EgDcAl1oqNulwoVMpSWWjKpUZdqDakBhGb9Vq9BkDK5apYFI\
oEPtVyrU7q8ADX64AiuSnL84ELgZEidv1wkVJNhimpSkK5Wm02SlK5LAGNygIjwDJpiEWpikvVJiC1\
0SjCbyAvNmOlclnGNVLOo7stVdWvjljoiatUbtLl0ZbNuaiL+0yN/\
q6P922GRyJYU69YGAwgY8VaybwjzWgSmuW/YMB70+r+kAwPQV4N2+\
l2YkJVa8amvGLjB0s0RX97WuvPlJ4CMgoAmAq8ZTk7Y/zeNXBaphMvmKC/\
M61gC8wxXshIcDPs2eM5AhiqpalzDUrCQpKPEt88jvbnNqmFGzUf9F/+\
1WMovWvZgER6qskK0NIQHIdV13J1Edlem1zWc5NYocSUQrZN7ikaBiKLyPpAbVGqi1B/x/\
8MIKYZy68EmO75Xr3kAdWRh1ByILr2ojV/\
9rx4caaxDpxpntZzew1oG6XAU8CtlTzaABSdgYVKzPYDYEAL9faDTdCdS1ZcsuICsGJqEXmwg82uN4\
R7hwrt84ACoKqtD8BdhkIP3KcWKVgvAIdbzIrxl9xhD0YKbSDdMFk31OvnLntm+8q65n/\
xRAGbU2NWPD3BfXBmB6qaR5sv+hLY1mwo7QQthDPH9YEJ3uvTw1zOseM/\
C1exD8BCpZWgExCy8mVHp7kcDxVFqdaNV+0cHgKoSbod8GFG1+GKoVoD8wvEqPWO+WmHpK/\
qQ3Ca0lYgCLwX/\
mp9LNaV4i4efLOYF3xvei4Yi4qc6ANK9EtisKjIFwbudxWRjseV3JBPO3NNOA4AQyJWiWSU+eff/\
jXQqscSG/BsyL0Mu+QvH7FYUkdXh+fQji/ian9b4SAuIdZPOfBYbX/L/7ciSu1vry8VpqEQtUP1Nb+\
Gwg1tVhTBw3BUmEOqIrKI1QUPzT0MVUnVob8nuirFEA5jip2mQNlStO6YBpZrgNKcjCdFKEfDaszVA\
bk1KTy6xWtNi8elrTA9/zvVTnuhlQMA/9wAkSoFCVvmn/99dF2Ilcfk6bqDpTey69bRJVR/\
gjVJ5QHZHT5uL1Ic4Ghbj6/aMsL914aGR1xZDDQQD/3p37LPvz8yivzzi0fGj/\
nnfx6h9WeKdsH6Hglwu+pvi3fdBhq5AH3E5OXqUxkmpR4K72KXiBc8/\
wGzMC1o8IjBHXlVzoSksQHXWTytIWIn0RRVNM0UTSFF1EOR2fXdMLhj1C+\
UVLINP9s9slyepWS6TjLZJrIjmRyLeSmZlpLp9komO6awWJKJx2Tfc8kUytWJJqHsVSFXRLn/\
L2XUUkbdFhnlLdwmwSGyafR2S6iJIPMwsy2crIyG8NLJDaXeaiG1eq1wCrnUfJvxmpxCivb/\
dmSUBw+jYrj9+bxRuz6atzaxg+\
kIm32xf5FRyS2KeKh0VwDeAUYd22gb9bF2bOi9lqBfhuXMCakYi4fC1feVG2dNhllkVH6I3DieqrR4\
GEy+r8w4a7LYIqPyQ2ZGL5Vv8TCYem+ZccZkykVG5YfIjPFSXRcPy+n3lWFnTTZeZFR+\
iAw7Uyr44iE7897y7YzJ+IuMyiXfRtwqsXjIXntf+XbWzSqLjMoF5VsXuulb9O/\
wPbmvzROiDeTAJuX7bb3XZ2s6R6/7BqFs/z1thJtZ0WvzzFDOzwGLGZr+\
uquILHdl7YVGcY88p6VwramYml/\
ZuLoRavByetOIAxp72PTz8ENsj9euxqrtHsEzAYOynUs9G1zxycDuPt7AGEIOALEX7tpotObOVR18O\
iQauqp2dJfT3ubiOevja8Xsjm7GDUnEMH626SAXsnzOqeB0E47DnFqscC4KVzqVonWn0GcEy9Yido7\
+IFp3T32Vo3Xb5XWsrRl8M0WLZ5hkTrApdiMJI9+wt1qqSQwNs9MS/\
IvzwTwiKBgdxudRkR45jcWavf1QtbCqelMXscotG4k2jDwSp8pNjaQcqhb17z9iRkw4uSxaW+\
ECm5eiypdExIH5N1BFrju60SqSDO3iSx68Ywk1yS91ZuOtH2NFHRjkeeicMQkaoMT0nYcQE7HhjBGF\
Ors2XKhB9R0bhEQnQL4NhBm4f6Qrmi8FkKXMwe+vDLuHmNMZmemiTwFdg366bJ9hkq4zO8A+\
7mvT2gPIxoXS7DioPXndszLTR382AEs9hga0DH20MlsjPl2QhD9nayygTVDGPjLKyk5dAUxsWytLR6\
+JODAJT1CsRUhQ9O1XXKYpvsM0xahmIcoYpKf7zqbaZuwx8WQri+\
FTszB8WG3JcH3U65vDt60tY0hTy+\
yLbPPEMTFDiS0oS5Ziaym2PiyxlcSS9GaZRTcOicrPYzBc8cW5N7rgiubkBYh4zMkLErW3vzaG8xvR\
hvJcsFTAjPOF1OI4DmijRUWiSSOiCqWY2T2ZS8MBbO9+gFaW7PnumM2H3TeznE9nzYOyNg/\
JRNLaOiWXxKBkb0li7wOJ+dF80zRmHxXqp64MtLekq8Wnq5FTYN9MUX6LwVnESbuq0iOQ77b1/\
nDPOeljz9T32qrSF3RsSONEkwhpk5q6fe6u025IyhEBFtZ9WCcusvnjH/knfOTs+\
RtGHTZi7Y46RlBs7hM0kRACiO8AbREP84q29yW52msTfrza3BAfDkMi9MrhuRnMW0PnqL922DeC+\
bnPkKdVnKKbbOPxMe4p6hDtIH4Y+R7CGt3rGLq3iM4K8aOA7gYrfs2P16bpjooVzSt+qFwqbO+\
ldSKfV8M9uTq4AfLX/8c+/+1tgFwfPZI/cGK1tz2SBs6g9y/gJ0cW8N/GMHeeKRo5MAi+\
YGuXijZ2ZL9/UXb0BKxrz/NnYVqGs9Ez+\
yOcUKxYQfjn7jK3L2chHOVSYg76LxVyxWNO0c5TS09ZVbd2oHNvLtowuHc68byzcO2YvT57nKNrOba\
swbfJR6vuhPPD6XN7KSTOGkjyuoyEaKO1bUffWk7E8cY6TS60+WhVY2+\
W5uP8zMeIFO1nyniUYpFa7OMHo3IwPycypjC0JOlbTWUZZ7lYJzJ+\
7KsE2tCgxH6x5XvxBH36fSZp9jR9T9W1c2LsMYEBmvH34/Q6es/\
ImYHZ2SF20ukNJQIFQPgocNSldVXH6GGdIVdPTL1/\
gA3ehasKEyFVYQ9fEG68SNAENPB7vlp2UetoWjQQHI0pAM6iKc3lcSnvUm6+\
ifoT0ajfxmkkqZgTdBMMdYdM7aNYMzRj0V7QiFs7JX0ViySk+9XjhxO5icq53GiOq7x6axOPbZG/\
wvIasXbBF+\
8CRx7d4pzpVXY5lMkWRugfhF4Xzrlj9dcPB2zfXZKZ1Eac5Re3ncxEyxRcuaeaaBDukM2c8xp1LTzK\
pEZKhAzkMEaee7urGdI2Y6Eq+ghvNGU8rOvJ9C2fegNsqCgoDpnj7LR/\
pFpUOyr7LXnDjjbug4Q12pujAsdliellpiqQuPJ6Qhhl9AIw/w4J/xVf/ovBJgdSAhf1jW/\
T8IWQ2jsT4iVhg4CTRnXP1mlfG7jfJ/Y1v8Gb89bOdOtG4w36yaHlWb+yv+\
3L0vxXMtqplylOpFHVtd2GbWxHasO2VZw20txCcxuJnAlpQ/\
KS5eBHhOTSzaq32ngSo41usI3MGbef3VaiW91WOxsHjo3jNhXLOLJaW/eJr9SNJXJsAWY1CRsSu/\
8srNf0dix1l+a43I/LhCvO4ZX+8y2Do7KTepWfOK8jJOoGdw1ttg0CT1+8AKxFc/\
fGoryJkVfTI7KBbnbZSuolkV5iQ8GCSjzZHJ0WnJsTHBB27VvqXCCRUyJBP3Vkl3sruyPEvNtGN63r\
zjlYI2Hh9SNJmfjivlWHjdkWh9ROH5vXtXy/mQ1sTz1glyGeEgrjpPFv6BuDAyX+fHln/fLO+\
uV9su/zfbKrrhSKLY02sifA8IDj+DfJ5oMCbY9f77ongnfLrqeW9qglVGTwA4YPF+\
Qq12L9YaFaLlUby+vil9fFL6+LX14Xv7wufqneb1q9by7V+\
wKp9xnGei97gl8rvUGPnQIz24gnOoLjIE2dmMrDQrNSrJRmm5jEZ+hfEtn9FyBC6b6gC3T/\
Sldl4JH8lQ5alEV59ym4693Jxx7unxFqAgN+802s17Mc25ZFib+\
YG17vZ60EKetwH3azZ3w2TBTmBta2H6x5kJrTcPJXf/\
0z9uvv5jiDHQJKWjN5ZIJIRJq7MEgXC4WHjNy/B+\
Tet3vbcPrNoh2H3MFUMWXl9dsXBx9nO4bOZOqcKKc8N8g+\
ySJX2t8y0D7KogsF7KzbxmzpLLyPD8mDCdHC7NKvXPqVS78yul/p+TijLtsEj8jXPNqy+Y05m+\
qoU3jdSgtK/CkUd+Pq98eZubWRRxuuqQuFXfPK+PTxrzv/uF18jNZs2yuPdkYMRd+sevXyf/\
ISlwufefXQPycW0RbLo91R+6m9kkd3fA9b8P/uqIkQmAzLYf0xTIZdLI8+\
mqBe28k8ejBJubEX98ZUC4Njx3atHKmP/jCCo+\
SzIua5SDVH43VGxbWd7WARBr7UWEuNtdRYC6ux7vi4uJXKo23r/5YhdpVLgn7+\
zhQLl65vKJQvPizAT5+DPFXN/jT1i83vV2p+\
NXvXGuUJ1hSZWHFmO72glcg7942uWRPWWs3b17eHvCowb5/uO/NFdeM9T7gKze1t1ou4xnsbv+\
rJ7WzWi4amd+\
ZdZeN1NuNFKuOdxbuqwwVo1osixgGa6SoCD64ZD8KfD1zuUeseac580Dfd9WUbtSjV2YaUHf8zEIw0\
Yyk44P57vlcveXrJyEMoORBdReQcre7chW4L9bEOnMmZ1nN7rZ1gJut3pqYA+fKwll7D0mu4Ea/h/\
wE28jle"}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     TagBox[
      GridBox[{{
         ItemBox[
          TagBox[
           GridBox[{{
              OverlayBox[{
                StyleBox[
                 TagBox[
                  DynamicModuleBox[{Typeset`var$$ = False}, 
                   InterpretationBox[
                    StyleBox[
                    PaneSelectorBox[{False -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.84476800767411`16.337445128869152*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    AutoDelete -> False, 
                    GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    OpenerBox[
                    Dynamic[Typeset`var$$], Appearance -> Automatic, Enabled -> 
                    Automatic, AutoAction -> False, ContinuousAction -> 
                    False], 
                    StyleBox[
                    DynamicBox[
                    ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.84476800767411`16.337445128869152*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                    "System"], FontSlant -> Italic, FontColor -> 
                    GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                    False]}, {"", 
                    PaneBox["\"\"", ImageMargins -> 0]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`var$$], Alignment -> Automatic, ImageSize -> 
                    Automatic, ImageMargins -> 0, BaseStyle -> {}, 
                    DefaultBaseStyle -> "OpenerView", BaselinePosition -> 
                    Baseline], Deployed -> False, StripOnInput -> False], 
                    OpenerView[{
                    Style[
                    Dynamic[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.84476800767411`16.337445128869152*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    SingleEvaluation -> True, Evaluator -> "System"], 
                    FontSlant -> Italic, FontColor -> GrayLevel[0.5], 
                    FontSize -> 0.9 Inherited], ""}, False]], 
                   DynamicModuleValues -> Automatic], Setting[#, {0}]& ], 
                 ShowContents -> False, StripOnInput -> False], 
                StyleBox[
                 DynamicBox[
                  ToBoxes[
                   DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.84476800767411`16.337445128869152*^9, TimeZone -> 0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                   StandardForm], SingleEvaluation -> True, Evaluator -> 
                  "System"], FontSlant -> Italic, FontColor -> GrayLevel[0.5],
                  FontSize -> 0.9 Inherited, StripOnInput -> False]}, 
               Alignment -> {Right, Baseline}], "\"   \"", 
              ItemBox[
              "\"Found 1 suggestion\"", ItemSize -> Scaled[0.75], 
               StripOnInput -> False]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
          ItemSize -> Fit, StripOnInput -> False], 
         ItemBox["", ItemSize -> All, StripOnInput -> False], 
         ItemBox[
          TagBox[
           ButtonBox[
            TagBox[
             PaneSelectorBox[{False -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> None],
                True -> GraphicsBox[{
                  GrayLevel[
                   NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                  
                  PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                   0.42426406871192845`}, {0.42426406871192845`, 
                   0.282842712474619}}], 
                  
                  PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                   0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                   0.42426406871192845`}}]}, ImageSize -> 18, 
                 PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                 None]}, 
              Dynamic[
               CurrentValue["MouseOver"]], ImageSize -> Automatic, 
              FrameMargins -> 0], 
             MouseAppearanceTag["LinkHand"]], 
            ButtonFunction :> (CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "ddacd162-3b93-4d6e-8992-0d9733e0e5cd"]]]]]), Appearance -> 
            None, BoxID -> "ddacd162-3b93-4d6e-8992-0d9733e0e5cd", Evaluator -> 
            Automatic, Method -> "Preemptive"], 
           MouseAppearanceTag["LinkHand"]], ItemSize -> All, StripOnInput -> 
          False]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
       AutoDelete -> False, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     "Text", FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> 
     False]], "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]], 
  Cell[
   BoxData[
    StyleBox[
     InterpretationBox[
      StyleBox[
       PaneSelectorBox[{False -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844768058307329`16.337445134588542*^9, TimeZone -> 
                    0]], {"MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", 
                 StyleBox[
                  ActionMenuBox[
                   TagBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "1", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"], 
                    "\"   \""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    MouseAppearanceTag["LinkHand"]], {TemplateBox[{
                    TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Unable to determine categories\""}, "RowDefault"] :> (
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", 
                    NotebookObject[
                    FrontEndObject[
                    LinkObject["4f7t2_shm", 3, 1]], 55]]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    ParentNotebook[
                    CellObject[59761]], 991423350, "CategoriesUnknown", {}]; 
                    DefinitionNotebookClient`PackageScope`seek[
                    CellObject[59761]]; Null)}, Appearance -> None, Method -> 
                   "Queued"], "BoxID" -> "WarningCountButton", StripOnInput -> 
                  False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "f4fb93b7-6866-4d1e-827a-0fe837211667"]]]]]), Appearance -> 
                   None, BoxID -> "f4fb93b7-6866-4d1e-827a-0fe837211667", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             OpenerBox[
              Dynamic[
               CurrentValue[
                EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], 
              Appearance -> Automatic, Enabled -> Automatic, AutoAction -> 
              False, ContinuousAction -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   ToBoxes[
                    DateString[
                    TimeZoneConvert[
                    DateObject[
                    3.844768058307329`16.337445134588542*^9, TimeZone -> 
                    0]], {
                    "MonthName", " ", "DayShort", ", ", "Year", " ", 
                    "Hour12Short", ":", "Minute", " ", "AMPMLowerCase"}], 
                    StandardForm], SingleEvaluation -> True, Evaluator -> 
                   "System"], FontSlant -> Italic, FontColor -> 
                  GrayLevel[0.5], FontSize -> 0.9 Inherited, StripOnInput -> 
                  False], "\"   \"", 
                 TagBox[
                  GridBox[{{
                    TagBox[
                    TagBox[
                    GridBox[{{
                    StyleBox["\"\[Checkmark]\"", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> "Heavy",
                     StripOnInput -> False], "\"\"", 
                    "\"Your paclet resource is being published\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "ColumnsIndexed" -> {2 -> 0.1}, 
                    "Rows" -> {{Automatic}}}], "Grid"], Annotation[#, 
                    
                    DefinitionNotebookClient`Stripes`PackagePrivate`$\
stripeText["Your paclet resource is being published"]]& ], "\"\""}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                 "\"\"", 
                 StyleBox[
                  ActionMenuBox[
                   TagBox[
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "1", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"], 
                    "\"   \""}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Grid"], 
                    MouseAppearanceTag["LinkHand"]], {TemplateBox[{
                    TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], "\" \"", 
                    "\"Unable to determine categories\""}, "RowDefault"] :> (
                    DefinitionNotebookClient`LoadDefinitionNotebook[
                    "Paclet", 
                    NotebookObject[
                    FrontEndObject[
                    LinkObject["4f7t2_shm", 3, 1]], 55]]; 
                    DefinitionNotebookClient`PackageScope`setHint[
                    "Suggestion", "Paclet", 
                    ParentNotebook[
                    CellObject[59761]], 991423350, "CategoriesUnknown", {}]; 
                    DefinitionNotebookClient`PackageScope`seek[
                    CellObject[59761]]; Null)}, Appearance -> None, Method -> 
                   "Queued"], "BoxID" -> "WarningCountButton", StripOnInput -> 
                  False], 
                 TagBox[
                  ButtonBox[
                   TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[64, 85], 0.7529411764705882]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None], True -> GraphicsBox[{
                    GrayLevel[
                    NCache[
                    Rational[128, 255], 0.5019607843137255]], 
                    
                    PolygonBox[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                    0.42426406871192845`}, {0.42426406871192845`, 
                    0.282842712474619}}], 
                    
                    PolygonBox[{{0.42426406871192845`, -0.282842712474619}, {
                    0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                    0.42426406871192845`}}]}, ImageSize -> 18, 
                    PlotRangePadding -> 0, PlotRange -> 0.7, Background -> 
                    None]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], 
                   ButtonFunction :> (CurrentValue[
                    EvaluationNotebook[], DockedCells] = If[
                    TrueQ[
                    MemberQ[
                    CurrentValue["ModifierKeys"], "Control"]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Cell[
                    Blank[], "StripeCell", 
                    BlankNullSequence[]]], 
                    DeleteCases[
                    Flatten[{
                    CurrentValue[
                    EvaluationNotebook[], DockedCells]}], 
                    Condition[
                    Pattern[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    Blank[Cell]], 
                    Not[
                    FreeQ[
                    DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                    "f4fb93b7-6866-4d1e-827a-0fe837211667"]]]]]), Appearance -> 
                   None, BoxID -> "f4fb93b7-6866-4d1e-827a-0fe837211667", 
                   Evaluator -> Automatic, Method -> "Preemptive"], 
                  MouseAppearanceTag["LinkHand"]]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left, Left, Right, Right, Right}, 
                 "Rows" -> {{Baseline}}}, AutoDelete -> False, 
               GridBoxItemSize -> {
                "Columns" -> {
                  Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
                 "Rows" -> {{Automatic}}}], "Grid"]}, {"", 
             PaneBox[
              TagBox[
               GridBox[{{"\"\"", 
                  StyleBox[
                   TagBox[
                    
                    GridBox[{{
                    "\"\[FilledVerySmallSquare]\"", "\"Submission result:\"", 
                    
                    TemplateBox[{
                    TagBox[
                    RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 3.5 (CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0775\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {ShowStringCharacters -> False, NumberMarks -> 
                    False, PrintPrecision -> 3, ShowSyntaxStyles -> False}]}},
                     GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                    Short[#, 0.75]& ], 
                    "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uEqbBKdcgrOJ20hNa3ncAkJIHe8+2yN2Z1czs0nNd+DElQPfCs7wAfgI8Gb/\
2VmnUnCC6MF7WWvfv9+8ee/9njwqyPU+\
vTjy34IcleQHp1yBCAQoqpjP8fOoIMt9XyuMDGk8Z1KN7sjygI7xC6mQ0LZBSrJBQs+\
jYvoMqEMK342KcvN4yqnH7DPfCV3Q5ncy8yIBJRuDaQAS1Bs/\
AL69LUtd6kpIpVupFLwhOAThwPY2KfXR/xR1NgbgBS5+\
jBHGjovyXo9yIOCCrXxxOabRRxhpkJKsPBXMuWycvivaiRaVZfUoVCpNQy05Uez3k+\
5JT7BzhPCmK3yuTrjTB+mHwgZS7Z4cMeXRQJLNJDFo9BLPCUKD11COwaVTcGQjDtENua0z/\
q7sGAMRQnaMWicIgArKMfnGC5/\
PJNUjKoGoqQujtdzZqyfn1A0pZkZWO6HyPbxiO5OWz0BNfIfUegIwt4qdzzntuGzMPeAqTagsW6ArJ\
X3PVE89OgbCfgTMWCXJWGZ1KW5pwDyQYi166l9lX9CwboVCoOPXCBjI3S7m16LBM2DjiYZQ6vkXGLM\
gtzpD6buhgnl9efeMjjkbMTuqYetvvO71rqBedKlFuR6lR5dvyfzjl59NdFg9ZgJrRp8Z5f2nR5bv+\
kJ8FD2/HYoH0fPnofgmen4/tD7OTlwnSrDgJT/lQahmVRwLGxZCR2A96jiMj/\
PiWgQrwpO7x3okOaNizLicL2P9ttastfzvd2Mpz4o99VPI3mlvF/O9nW+yxJQ0zLTMdYWaxDC/\
bJqkhm6OYURDV5EPk5I/VeB1OPfjUUKKf/3069zoWDd71HZBmdns0Po3QVY2X706PV4e0acmwJPd/\
d12u0X3Dh639h5/\
0W4dPLGHrf1Hu3Cwc9De292FHN4085tJihc6JdUgFayp0ONy7ohxUxjPYTRTMxD3os4VDVvTn3CKgI\
J8Wd1LwGiEUSteG8tinOsDSqOSgNq61q8d1brz74PNzTkjN+e2yMS/0I3Ax9YEh6St51Q+\
RRsvQiQWgQ32w4KsgYMdWxYnApN6gBRntxy5nnJF38ZNmzf9j8ugOPCD97cANvWduIxDz5csIbP4gg\
tWIdOKmex/\
YWDL9eXSDJwf3SsKXlHwEhRcWVHwLVPwDfBWzdfYQAhkecgV89HDnYc7t4epYZJw6DGpYd0kl2Vzp9\
3evz1cm2bcoZaAKN7yyCIGuMU7PEMexom3PKDPzW+\
xnZpB1A1NkTRXk8nmEHBkNINw6DI5Aef2slkyUb484q1sBMyKZbWZrjbT1Wa6xGY625LyS98VO9Wce\
1JP+k2vq25+rXxw6Q+weC1KF0JS+B7Vs3/\
P7i82c6fcIvV5miflmKxbxNAcS7avw5QtUkkIjpQimmppzDN2IYbmiBZpXB7t8Y6OxslkJZ9dcz7OK\
iD+E44O3YUKWD9x2JWC+7HN10xNkpVNxkD+AX8i9DE="}, "ClickToCopyTemplate"]}, {
                    "\"\[FilledVerySmallSquare]\"", "\"Resource object:\"", 
                    TemplateBox[{
                    TagBox[
                    RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.016667], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                    
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 
                    20.19}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.56, 52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                    
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    56., 14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 
                    43.68}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.57, 22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 
                    16.28}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 
                    37.8}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 
                    35.85}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 30}}], 
                    StyleBox[
                    
                    RowBox[{"\"Testing: Ba\"", "\[Ellipsis]", 
                    "\"ferenceData\""}], FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                    "OEM6eJztWk1s48YVtizJP7LX602cQ9vAVQkjadPQki1t7F1kVz+\
UZTtrex2NNulPimZEjiR6SQ47Q9rRnrvHJEhRoGgORYsAPfQQFOglSHvaHnpoEiSnoD0UWBQtCqRAc\
mlPRdsZ/ogSJdfyotk/kBdK8+bNe/PNe2/\
mvWEzRqdq8KiMX0G0maTntg0LEZMgC1oqNlhzM0Ynaph3aCZoYkelVnOcTtRhi7WAuRqi2CYyuto4Q\
LIFZoCt65B0thBUQOzbzTidr3QMqKvyLlZsDfFRxrujxAGy6Fy9YyKKrJexiYylJZqsQo0in7rgU5H\
eQApgWqGlJZCssfE7rM9MHemmxhpdRd2B4/TsPjQQQBpTCZN+mYkaU8MXkqSTm0RV+\
pn99yQfhJMm6HTZtiwfjZQ3I3fcL1Y39ol6yFR4uUqwYW0Yio8JmK5ulFVLhyYF8x4wjOkqmyciXHm\
uSgVpsIMUOueKqNqGzIE/\
Dp1EndioO41UyTQRJNCQEU3sYSOgTJchRcDqaKg5Fpr79MYh1GzIkKHTJdvCOltpuUud2EVWGysgtU\
8Qw9ZSD3sGLWlqy9CRYfmA0gkJcYPx30HXbR22EFBvIIbYpIdYl6tPbrKu6oiSMeeZLXZbGOOsZBPC\
Bn6BKYzAmSrDV4LmFlJbba5Cch8fMZkxulBqUKzZFurtT8/\
swpahNlXZMWXpP2xNpxxI3JWb2STQbKsy5X9THkgxOl1nbdcNRClJ/OCX+\
MlzbxT6GGNdOOeqqqYhhck8RMNNyHlLY9K4NNbzLzbwz+cMHMx5e5jMF8ntGwtvb/\
7scnGQ8vFb5qXUxxsB5cs3P3n+nZ8sFwnjuH3jh+UhlDd/\
zJ4vrBe7clkMqEIZVTHRmQ5Ttc2yhDVMPCmfFcgTr3508Rdv/rFAyj8y/\
yYuvl3okrorPgssoppXjW3DtC3fwe4VcA4qaxtF8vqtf3z1pdcfD0BwkPxKwQfuz4VjKC9+\
vTg42vcYx1vZ/EMM3BZH4Xdsqv9ksN167LkABG5NC8aVIqm9s3jzk4+qxUEep8trUhjsYg/\
PQwtc1yEdG/lMHOKq3P0Wk8+GHPJPzw6xuH4Kt9KTgIsdHPzhW9/9tEBuTq1//6nzfymQxz/418Hc/\
IcPBnCXi96PvQCEJn9+XimSl7gX/6bHFh2MzewQi3P9feEUFveAA7czxOKc+P7Nqrdt3E4HFA7K89+\
oHrc5/PtKz4by0ALnmMYbK0Xy/nv8eaZ4DOXvpSEO6QBXvzSE4oTBzexw4OI9wNnOw/\
D6kvP8vkAedZ7f3qd4dT2UO92lp6pDPNT58ddyOOhd9lEpBJQcf3612sPzsOHVPS4M2Ff3iNG1lQHK\
gH31j8Zt8vPCazKUKMyUqMkyqBo/PkuxbnOixFLFIE3zMpEylK+\
3CLYNJZSJJKsE6uH0JOU01tlBm4YTlyBxGJIt9OUSdy9xGEk5abHb74wE5Tby84swVkPBnwhS0Xi/\
PfUk4AHFT8CnhD0G5MW0AB7zMsxtC+klw8BuAg/in77606B/\
OGX2BgRpoY6opRqti2meODagptVQEzFIZFSBFhRAXEgLYW5PQZAQbv1aAGbbskx6MZM5OjpaPsJaky\
2xrGFbWZaxnsGNg0wDN2jGtBuaSttIyexDWUNWDZmYqiwb7WSIlzjTDEIXcudza2sizK+\
vivnVZ9bE9QtyQzy/kkPr2fW1fC6HMmB2iyXHRFON69dqOyDFQKqgJrS1oA7BwehBa1wQwqRRIOY5+\
MgQs/7uxPpFsV6vvTuSvLNCBVGZWQgffHSxXxO2dRMTK62w9Uo3CdbTDW8pReKvJV+KY/\
RyTHPes8GBRN/vASZZjLF1g/\
ZEIdcREjuoGXRLsOkN9hlSb0jxpgpieKGwn5z1lHHU7PG5k3UZlDO6Qr5UYEKZOQQdWao0fnphPWWa\
RCj6LoA2PuKRwmhJbUigzMssYYhm9my9gcguJNcHaHP7jNfaJ0hWKQ9j8WCVnaE7hgVfcWQPsH7OZh\
CvY/P+NYB5viYsqKB9HpfcWpy7wLHeXdApxN2TAqKkYXrHBcTwvh1VEKMKYlRBjCqI/\
zfgogpiVEGMKogPEHBRBfHUwEUVxKiCGFUQowri/\
VpBnO63p6iCGFUQ70IF8US9ZoUrqHOEiUJPY27HGJ4Xa0DsaWZZTwsgJfh2JzAAAZ8IFZhI/\
s0Y68e8SABJYXenzLQXtrCO0sQ2WNs5pu6LqtUGyITEqWnQJGgz7v5Jjo00w3NCBcs2r2/AU2F/\
nF8Q4W67xL33wjuAfUG4StSWakAtXUMaYnYwutWfEbIr6T18mF7Nrq4Id7boO2zZqJW+\
ZjLPuauiZ4QXEKGn8vJJIbucXb4zcVPCtWvbldFlPSGMYgDDVIluI6LbiOg24sTbiOA0Gy70Dzlx9g\
wPZj2P41cUWjN0lfBo3zfb7onWvwQAse8wqaHvvkuTIkjwYyRY/N+\
nQNaNRxCwNEpcEMGsL4bPDUy4G40IJr2gB5JOKBPBTM95Bzw54ilGBI8Ee9YOdo/\
qbG5xvgmtnLQJsllTdyOEpppZWc6KIOXqx7JDfmUxI/\
Hu3nfxGyfuqStKbm0ll1dE2IB5MZ9HUIQXGutiVllT1nIwn1fWVwMrdb9thw1twEqnNhR1KOERl4cf\
dSSWzDA3ou4l1n8Bwq8eqw=="}, "ClickToCopyTemplate"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {Automatic, Automatic, Fit}, 
                    "Rows" -> {{Automatic}}}], "Grid"], FontColor -> 
                   GrayLevel[0.5], FontSize -> 12, StripOnInput -> False]}}, 
                GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                False, GridBoxDividers -> {
                 "Columns" -> {{None}}, "RowsIndexed" -> {-1 -> GrayLevel[
                    Rational[239, 255]]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {Automatic, Fit}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {1, {}, 1}, "Rows" -> {1, {}, 2}}], "Grid"], 
              ImageMargins -> 0]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxBackground -> {"Columns" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {"Columns" -> {{0.2}}, "Rows" -> {{0.5}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[
         CurrentValue[
          EvaluationCell[], {TaggingRules, "StripeOpen"}, False]], Alignment -> 
        Automatic, ImageSize -> Automatic, ImageMargins -> 0, BaseStyle -> {},
         DefaultBaseStyle -> "OpenerView", BaselinePosition -> Baseline], 
       Deployed -> False, StripOnInput -> False], 
      OpenerView[{
        Grid[{{
           Style[
            Dynamic[
             DateString[
              TimeZoneConvert[
               DateObject[
               3.844768058307329`16.337445134588542*^9, TimeZone -> 0]], {
              "MonthName", " ", "DayShort", ", ", "Year", " ", "Hour12Short", 
               ":", "Minute", " ", "AMPMLowerCase"}], SingleEvaluation -> 
             True, Evaluator -> "System"], FontSlant -> Italic, FontColor -> 
            GrayLevel[0.5], FontSize -> 0.9 Inherited], "   ", 
           Grid[{{
              Annotation[
               Grid[{{
                  Style["\[Checkmark]", FontColor -> RGBColor[0, 
                    Rational[2, 3], 0], FontSize -> 16, FontWeight -> 
                   "Heavy"], "", "Your paclet resource is being published"}}, 
                Alignment -> {Left, Center}, 
                Spacings -> {{0.25, 2 -> 0.1}, Automatic}], 
               DefinitionNotebookClient`Stripes`PackagePrivate`$stripeText[
               "Your paclet resource is being published"]], ""}}, Spacings -> 
            0.25], "", 
           Style[
            ActionMenu[
             MouseAppearance[
              Grid[{{
                 RawBoxes[
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                    "SuggestionIconTemplate"], 
                    StyleBox[
                    "1", FontColor -> GrayLevel[0.5], FontSize -> 9, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"], 
                    "\"Suggestions found\""}, "PrettyTooltipTemplate"]], 
                 "   "}}], "LinkHand"], {Row[{
                 RawBoxes[
                  TemplateBox[{
                    RGBColor[{
                    Rational[25, 51], 
                    Rational[25, 51], 
                    Rational[25, 51]}], 
                    RGBColor[{1, 1, 1}], 10, {{0, 18}, {-2, 17}}}, 
                   "SuggestionIconTemplate"]], " ", 
                 "Unable to determine categories"}] :> (
               DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", 
                 NotebookObject[
                  FrontEndObject[
                   LinkObject["4f7t2_shm", 3, 1]], 55]]; 
               DefinitionNotebookClient`PackageScope`setHint[
                "Suggestion", "Paclet", 
                 ParentNotebook[
                  CellObject[59761]], 991423350, "CategoriesUnknown", {}]; 
               DefinitionNotebookClient`PackageScope`seek[
                 CellObject[59761]]; Null)}, Appearance -> None, Method -> 
             "Queued"], "BoxID" -> "WarningCountButton"], 
           MouseAppearance[
            Button[
             MouseAppearance[
              Mouseover[
               Graphics[{
                 GrayLevel[
                  Rational[64, 85]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None], 
               Graphics[{
                 GrayLevel[
                  Rational[128, 255]], 
                 
                 Polygon[{{-0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, -0.282842712474619}, {0.282842712474619, 
                  0.42426406871192845`}, {0.42426406871192845`, 
                  0.282842712474619}}], 
                 
                 Polygon[{{0.42426406871192845`, -0.282842712474619}, {
                  0.282842712474619, -0.42426406871192845`}, \
{-0.42426406871192845`, 0.282842712474619}, {-0.282842712474619, 
                  0.42426406871192845`}}]}, ImageSize -> 18, PlotRangePadding -> 
                0, PlotRange -> 0.7, Background -> None]], "LinkHand"], 
             CurrentValue[
               EvaluationNotebook[], DockedCells] = If[
               TrueQ[
                MemberQ[
                 CurrentValue["ModifierKeys"], "Control"]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Cell[
                 Blank[], "StripeCell", 
                 BlankNullSequence[]]], 
               DeleteCases[
                Flatten[{
                  CurrentValue[
                   EvaluationNotebook[], DockedCells]}], 
                Condition[
                 Pattern[DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                  Blank[Cell]], 
                 Not[
                  FreeQ[
                  DefinitionNotebookClient`Stripes`PackagePrivate`c$, 
                   "f4fb93b7-6866-4d1e-827a-0fe837211667"]]]]], Appearance -> 
             None, BoxID -> "f4fb93b7-6866-4d1e-827a-0fe837211667"], 
            "LinkHand"]}}, 
         ItemSize -> {{Automatic, Automatic, Automatic, Fit, 8, Automatic}, 
           Automatic}, 
         Alignment -> {{Left, Left, Left, Right, Right, Right}, Baseline}], 
        Grid[{{"", 
           Style[
            Grid[{{"\[FilledVerySmallSquare]", "Submission result:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{
                    TagBox["Success", "SummaryHead"], "[", 
                    
                    DynamicModuleBox[{
                    Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
                    TemplateBox[{
                    PaneSelectorBox[{False -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxOpener"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}], True -> GridBox[{{
                    PaneBox[
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SummaryBoxCloser"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                    "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                    Dynamic[{Automatic, 
                    3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    FrameBox[
                    StyleBox["\"\[Checkmark]\"", 
                    Directive[
                    RGBColor[
                    0.3607843137254902, 0.596078431372549, 
                    0.3803921568627451], 25], StripOnInput -> False], 
                    ContentPadding -> False, FrameStyle -> None, 
                    FrameMargins -> {{0, 0}, {0, 0}}, StripOnInput -> False], 
                    
                    GridBox[{{
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"ResourceType\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"Paclet\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"UUID\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"ee935377-a482-4267-89cb-513e8087433e\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Version\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"1.0.0\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"SubmissionID\"", "\": \""}, "RowDefault"],
                     "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"0775\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    
                    TemplateBox[{"\"DirectCreation\"", "\": \""}, 
                    "RowDefault"], "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["True", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Message\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox[
                    "\"Your paclet resource is being published\"", 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox[
                    TemplateBox[{"\"Tag\"", "\": \""}, "RowDefault"], 
                    "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                    TagBox["\"ResourceSubmission\"", "SummaryItem"]}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                    BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    BaselinePosition -> {1, 1}]}, 
                    Dynamic[Typeset`open$$], ImageSize -> Automatic]}, 
                    "SummaryPanel"], DynamicModuleValues :> {}], "]"}], 
                   Short[#, 0.75]& ], 
                  "OEM6eJztWE9vG0UUj+\
u1HTuuG9ogBCdrFYE4uEqbBKdcgrOJ20hNa3ncAkJIHe8+2yN2Z1czs0nNd+DElQPfCs7wAfgI8Gb/\
2VmnUnCC6MF7WWvfv9+8ee/9njwqyPU+\
vTjy34IcleQHp1yBCAQoqpjP8fOoIMt9XyuMDGk8Z1KN7sjygI7xC6mQ0LZBSrJBQs+\
jYvoMqEMK342KcvN4yqnH7DPfCV3Q5ncy8yIBJRuDaQAS1Bs/\
AL69LUtd6kpIpVupFLwhOAThwPY2KfXR/xR1NgbgBS5+\
jBHGjovyXo9yIOCCrXxxOabRRxhpkJKsPBXMuWycvivaiRaVZfUoVCpNQy05Uez3k+\
5JT7BzhPCmK3yuTrjTB+mHwgZS7Z4cMeXRQJLNJDFo9BLPCUKD11COwaVTcGQjDtENua0z/\
q7sGAMRQnaMWicIgArKMfnGC5/\
PJNUjKoGoqQujtdzZqyfn1A0pZkZWO6HyPbxiO5OWz0BNfIfUegIwt4qdzzntuGzMPeAqTagsW6ArJ\
X3PVE89OgbCfgTMWCXJWGZ1KW5pwDyQYi166l9lX9CwboVCoOPXCBjI3S7m16LBM2DjiYZQ6vkXGLM\
gtzpD6buhgnl9efeMjjkbMTuqYetvvO71rqBedKlFuR6lR5dvyfzjl59NdFg9ZgJrRp8Z5f2nR5bv+\
kJ8FD2/HYoH0fPnofgmen4/tD7OTlwnSrDgJT/lQahmVRwLGxZCR2A96jiMj/\
PiWgQrwpO7x3okOaNizLicL2P9ttastfzvd2Mpz4o99VPI3mlvF/O9nW+yxJQ0zLTMdYWaxDC/\
bJqkhm6OYURDV5EPk5I/VeB1OPfjUUKKf/3069zoWDd71HZBmdns0Po3QVY2X706PV4e0acmwJPd/\
d12u0X3Dh639h5/\
0W4dPLGHrf1Hu3Cwc9De292FHN4085tJihc6JdUgFayp0ONy7ohxUxjPYTRTMxD3os4VDVvTn3CKgI\
J8Wd1LwGiEUSteG8tinOsDSqOSgNq61q8d1brz74PNzTkjN+e2yMS/0I3Ax9YEh6St51Q+\
RRsvQiQWgQ32w4KsgYMdWxYnApN6gBRntxy5nnJF38ZNmzf9j8ugOPCD97cANvWduIxDz5csIbP4gg\
tWIdOKmex/\
YWDL9eXSDJwf3SsKXlHwEhRcWVHwLVPwDfBWzdfYQAhkecgV89HDnYc7t4epYZJw6DGpYd0kl2Vzp9\
3evz1cm2bcoZaAKN7yyCIGuMU7PEMexom3PKDPzW+\
xnZpB1A1NkTRXk8nmEHBkNINw6DI5Aef2slkyUb484q1sBMyKZbWZrjbT1Wa6xGY625LyS98VO9Wce\
1JP+k2vq25+rXxw6Q+weC1KF0JS+B7Vs3/\
P7i82c6fcIvV5miflmKxbxNAcS7avw5QtUkkIjpQimmppzDN2IYbmiBZpXB7t8Y6OxslkJZ9dcz7OK\
iD+E44O3YUKWD9x2JWC+7HN10xNkpVNxkD+AX8i9DE="}, "ClickToCopyTemplate"]]}, {
              "\[FilledVerySmallSquare]", "Resource object:", 
               RawBoxes[
                TemplateBox[{
                  TagBox[
                   RowBox[{"ResourceObject", "[", 
                    ButtonBox[
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.016667], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                    
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 
                    20.19}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.56, 52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                    
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    56., 14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 
                    43.68}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                    False], 
                    StyleBox[{
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.57, 22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 
                    16.28}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 
                    37.8}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 
                    35.85}}}]}, {
                    FaceForm[
                    RGBColor[
                    0.6705882352941176, 0.21176470588235294`, 
                    0.14901960784313725`]]}, StripOnInput -> False]}, {
                    ImageSize -> 12, BaselinePosition -> Scaled[0.1], 
                    ImageSize -> {Automatic, 30}}], 
                    StyleBox[
                    
                    RowBox[{"\"Testing: Ba\"", "\[Ellipsis]", 
                    "\"ferenceData\""}], FontFamily -> Dynamic[
                    CurrentValue["PanelFontFamily"]], FontSize -> 
                    0.8 Inherited, ShowStringCharacters -> False, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.25}}, "Rows" -> {{0}}}], "Grid"], 
                    ButtonFunction :> {}, Evaluator -> None, Active -> False, 
                    Alignment -> Left, 
                    Appearance -> {
                    "Default" -> 
                    FrontEnd`FileName[{"Typeset", "SummaryBox"}, 
                    "Panel.9.png"]}, FrameMargins -> {{3, 3}, {3, 0}}, 
                    BaseStyle -> {Deployed -> False}, 
                    DefaultBaseStyle -> {Background -> None}, 
                    BaselinePosition -> Baseline, Method -> "Preemptive"], 
                    "]"}], Short[#, 0.75]& ], 
                  
                  "OEM6eJztWk1s48YVtizJP7LX602cQ9vAVQkjadPQki1t7F1kVz+\
UZTtrex2NNulPimZEjiR6SQ47Q9rRnrvHJEhRoGgORYsAPfQQFOglSHvaHnpoEiSnoD0UWBQtCqRAc\
mlPRdsZ/ogSJdfyotk/kBdK8+bNe/PNe2/\
mvWEzRqdq8KiMX0G0maTntg0LEZMgC1oqNlhzM0Ynaph3aCZoYkelVnOcTtRhi7WAuRqi2CYyuto4Q\
LIFZoCt65B0thBUQOzbzTidr3QMqKvyLlZsDfFRxrujxAGy6Fy9YyKKrJexiYylJZqsQo0in7rgU5H\
eQApgWqGlJZCssfE7rM9MHemmxhpdRd2B4/TsPjQQQBpTCZN+mYkaU8MXkqSTm0RV+\
pn99yQfhJMm6HTZtiwfjZQ3I3fcL1Y39ol6yFR4uUqwYW0Yio8JmK5ulFVLhyYF8x4wjOkqmyciXHm\
uSgVpsIMUOueKqNqGzIE/\
Dp1EndioO41UyTQRJNCQEU3sYSOgTJchRcDqaKg5Fpr79MYh1GzIkKHTJdvCOltpuUud2EVWGysgtU\
8Qw9ZSD3sGLWlqy9CRYfmA0gkJcYPx30HXbR22EFBvIIbYpIdYl6tPbrKu6oiSMeeZLXZbGOOsZBPC\
Bn6BKYzAmSrDV4LmFlJbba5Cch8fMZkxulBqUKzZFurtT8/\
swpahNlXZMWXpP2xNpxxI3JWb2STQbKsy5X9THkgxOl1nbdcNRClJ/OCX+\
MlzbxT6GGNdOOeqqqYhhck8RMNNyHlLY9K4NNbzLzbwz+cMHMx5e5jMF8ntGwtvb/\
7scnGQ8vFb5qXUxxsB5cs3P3n+nZ8sFwnjuH3jh+UhlDd/\
zJ4vrBe7clkMqEIZVTHRmQ5Ttc2yhDVMPCmfFcgTr3508Rdv/rFAyj8y/\
yYuvl3okrorPgssoppXjW3DtC3fwe4VcA4qaxtF8vqtf3z1pdcfD0BwkPxKwQfuz4VjKC9+\
vTg42vcYx1vZ/EMM3BZH4Xdsqv9ksN167LkABG5NC8aVIqm9s3jzk4+qxUEep8trUhjsYg/\
PQwtc1yEdG/lMHOKq3P0Wk8+GHPJPzw6xuH4Kt9KTgIsdHPzhW9/9tEBuTq1//6nzfymQxz/418Hc/\
IcPBnCXi96PvQCEJn9+XimSl7gX/6bHFh2MzewQi3P9feEUFveAA7czxOKc+P7Nqrdt3E4HFA7K89+\
oHrc5/PtKz4by0ALnmMYbK0Xy/nv8eaZ4DOXvpSEO6QBXvzSE4oTBzexw4OI9wNnOw/\
D6kvP8vkAedZ7f3qd4dT2UO92lp6pDPNT58ddyOOhd9lEpBJQcf3612sPzsOHVPS4M2Ff3iNG1lQHK\
gH31j8Zt8vPCazKUKMyUqMkyqBo/PkuxbnOixFLFIE3zMpEylK+\
3CLYNJZSJJKsE6uH0JOU01tlBm4YTlyBxGJIt9OUSdy9xGEk5abHb74wE5Tby84swVkPBnwhS0Xi/\
PfUk4AHFT8CnhD0G5MW0AB7zMsxtC+klw8BuAg/in77606B/\
OGX2BgRpoY6opRqti2meODagptVQEzFIZFSBFhRAXEgLYW5PQZAQbv1aAGbbskx6MZM5OjpaPsJaky\
2xrGFbWZaxnsGNg0wDN2jGtBuaSttIyexDWUNWDZmYqiwb7WSIlzjTDEIXcudza2sizK+\
vivnVZ9bE9QtyQzy/kkPr2fW1fC6HMmB2iyXHRFON69dqOyDFQKqgJrS1oA7BwehBa1wQwqRRIOY5+\
MgQs/7uxPpFsV6vvTuSvLNCBVGZWQgffHSxXxO2dRMTK62w9Uo3CdbTDW8pReKvJV+KY/\
RyTHPes8GBRN/vASZZjLF1g/\
ZEIdcREjuoGXRLsOkN9hlSb0jxpgpieKGwn5z1lHHU7PG5k3UZlDO6Qr5UYEKZOQQdWao0fnphPWWa\
RCj6LoA2PuKRwmhJbUigzMssYYhm9my9gcguJNcHaHP7jNfaJ0hWKQ9j8WCVnaE7hgVfcWQPsH7OZh\
CvY/P+NYB5viYsqKB9HpfcWpy7wLHeXdApxN2TAqKkYXrHBcTwvh1VEKMKYlRBjCqI/\
zfgogpiVEGMKogPEHBRBfHUwEUVxKiCGFUQowri/\
VpBnO63p6iCGFUQ70IF8US9ZoUrqHOEiUJPY27HGJ4Xa0DsaWZZTwsgJfh2JzAAAZ8IFZhI/\
s0Y68e8SABJYXenzLQXtrCO0sQ2WNs5pu6LqtUGyITEqWnQJGgz7v5Jjo00w3NCBcs2r2/AU2F/\
nF8Q4W67xL33wjuAfUG4StSWakAtXUMaYnYwutWfEbIr6T18mF7Nrq4Id7boO2zZqJW+\
ZjLPuauiZ4QXEKGn8vJJIbucXb4zcVPCtWvbldFlPSGMYgDDVIluI6LbiOg24sTbiOA0Gy70Dzlx9g\
wPZj2P41cUWjN0lfBo3zfb7onWvwQAse8wqaHvvkuTIkjwYyRY/N+\
nQNaNRxCwNEpcEMGsL4bPDUy4G40IJr2gB5JOKBPBTM95Bzw54ilGBI8Ee9YOdo/\
qbG5xvgmtnLQJsllTdyOEpppZWc6KIOXqx7JDfmUxI/\
Hu3nfxGyfuqStKbm0ll1dE2IB5MZ9HUIQXGutiVllT1nIwn1fWVwMrdb9thw1twEqnNhR1KOERl4cf\
dSSWzDA3ou4l1n8Bwq8eqw=="}, "ClickToCopyTemplate"]]}}, Alignment -> Left, 
             ItemSize -> {{Automatic, Automatic, Fit}, Automatic}], FontColor -> 
            GrayLevel[0.5], FontSize -> 12]}}, 
         ItemSize -> {{Automatic, Fit}, Automatic}, Alignment -> Left, 
         Dividers -> {None, {-1 -> GrayLevel[
              Rational[239, 255]]}}, Spacings -> {{1, {}, 1}, {1, {}, 2}}]}, 
       Dynamic[
        CurrentValue[
         EvaluationCell[], {TaggingRules, "StripeOpen"}, False]]]], "Text", 
     FontSize -> 12, FontColor -> GrayLevel[0.25], StripOnInput -> False]], 
   "StripeCell", CellFrameMargins -> {{20, 5}, {2, 2}}, 
   CellFrame -> {{0, 0}, {1, 0}}, CellFrameColor -> GrayLevel[0.75]]},
TaggingRules->{
 "ResourceType" -> "Paclet", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> "1.5.45", "CreationTimestamp" -> 
  3.844766681924579`16.33744497911609*^9, "UpdatedTimestamp" -> 
  3.844766681924648`16.337444979116093*^9, "CompatibilityTest" -> HoldComplete[
    BinaryDeserialize[
     BaseDecode[
     "OEM6eJzVWFtv2zYUri+\
5IPEyNECB9a0PeciCbR2GAduaXerJSeohSZPQ6XNo6UgRTJMqSaXxv98hJTm2I7mS7WCdHxJapL7z8\
dz40X5N7TpiGImYe0f3kQSlQsH9mlq7jEPQfj13uq7qXR//\
Ntrcw39rRx9jytTO3geQZv48HvZBSt9+9t+aFYQO4RIHLSeWErj+QFkM/\
jO1e3SHI6rNW0JDX4gBrmqehkqrVo8GQciDq5iBIq0rUCKWLvRGEZBmh2qKNJvvuQuFLNf+\
ZsIdmGUJ4J4juIZ7fUH1rd8o2vk5gKfIfmaPjJSGocNCpH3TAT/\
k4STdm4dXXhlS2Wt5S1XzPGYMif3weDI1cAUBUgWJTP0wiKV1zXi7f5UldQWRUKEWcpQAJjgqBWrY+\
NXU5jENWSwxMjX11QV1GeguV5oyRr4pYuivL+Lshdza6ompyGwRLTEf/hGhsdc4o5HdQ8xd86a/\
llgmLwuda8lRZdJ6O8EiEQu1eUyY0E6N1G5I/c0fEw/qh1uWPOavIt+WJX/\
gNwu81CBg7G11xCdui0Cp38qiZoP3scYwgmcKagsjzagLbcyrFcJum6LrAKMj8BB3+\
51gHgYSE5OrP8sCX8jwDgFv7pK2cCIBv0m1cc1V2g5yvNGpik6jCLh3zW8p9xh4DjCm5jpmVRbm+\
Ai/VvaSi7DY8VIE8rwHQ9yABmPuRIo4Wh4Ua7fVZmaE7eAOE/\
qFg4sCIUNQ3zu34A764h4f7zw8NtZJK5uz33bQHo2ZtvXNdQ5T8nX2iEBSm7mhLt3NxoFQg564jjwc\
p32/OMorAJ8KcAMfbGQlsHnCRJ+\
ym1tzpE16VP1S1uwJ6Heh5wFPGlH5cj2m3B05tyJ0oRNSJoJJYq2UmNR4SuL5ik2Z8kEedYqzz+\
2sOZMIfIwBd012Uw8wLzN4icfFeL/\
TBibAsiNlrSdjW9pLdokqh102yJIulSHqp6oUeL9KjaVSZtbqlIcyf57Dp7E/\
c32cFIg6q0p5L1ZwCgF1R92AC5l0pyzWqmmikV98h2Ut5eDOFN68MlzSzLweW1frp/\
imbYzHVf0WgM7a2LTFlZUSlsQ2Mgfsi1SBegq6hdWIEtqq5nWzutsxdWn5qY0u9uwAM3Wzy62x0Wec\
3BizLth4Cly672U7UuOT4RFs/8HbY/MTNmvqqPIxSLngoUvZhRQRoLesnluU8wTR/\
EtEPW2GrbZSwg2t9r5U7cq1HaVsyQjpj4YmhzbbVoz0xGrgbJqQHWKBzkBTz9wP0hsY2XRCnVxAXiY\
rXl+BD9Jk96ts6qG7rCYqE0ZnaCW3p/EdKrmCNk/R54+uns/s5+\
At3gmWuazMuUlU0PcHhSjVBH01nHkK/udCJLwEDmgAxMWAVNPt14WYyWmXlweJsYWF/JOZnK/\
sS3qvjJ5fCOoLU/EXy0ehgqx/CmuL6Pz9Qh6zwr64bP8nSn6hboEAP362X81KZ2fp4FoF/\
7oQ5ikkezHpKfcsLNS/K8RfTplXxS0rxX8v54//VoAvRfILkt2/\
Fu6DuJJG2H9mK2QZ3X1Y8rjKVdsLU11Qbnfn/Mae/TiO1RZHs2bny+6Vwq5Sfi8TnHKi+1+K4NOh"]\
]], "DefinitionNotebookFramework" -> "DefinitionNotebookClient", 
  "RuntimeConfiguration" -> {
   "LoadingMethod" -> "Paclet", "PacletName" -> "PacletResource", 
    "Contexts" -> {"PacletResource`", "PacletResource`DefinitionNotebook`"}, 
    "DefaultContentMethod" -> "Tagged"}, "ToolsOpen" -> True, "StatusMessage" -> 
  "", "SubmissionReviewData" -> {"Review" -> False}, "AutoUpdate" -> True, 
  "PacletBuildData" -> {
   "LastBuiltArchive" -> 
    "/Users/bobs/wolfram-workspace/stash/BaseballReferenceData/Testing__\
BaseballReferenceData/Testing__BaseballReferenceData/build/Testing__\
BaseballReferenceData-1.0.0.paclet", "FileHashes" -> ByteArray[CompressedData["
1:eJwBdQKK/SFib1JiAQAAAGgCAAA4Qzp4nHMU0w02dclPLs1NzStJLMnMz9N3
zUvPySzO0HcvzUxJLdZ3SixOTUrMyQlKTUstSs1LTnVJLEnUy0tyZNINZgvO
Ly1KTvXp/PFrgmdFfwFQJCSxKD21xMdR8biCYuB7Ft1gJeyme+alpFboxxvo
JacVIxlVzOKXn5eKMGdFZ0H79enXSnWD1fCZU5yaDpIqjjfGY9bL2JCVT/d9
KNYN1iDGLL301Dw8pgn6PmhcUvHcUjfYBrtp8AALSEwHhmNwZW5Sfk6xfkBO
YmVqkUd+bmpRMVowil745u/VUyKIsMTB+u3tBWxLC8mzJDg1sSg5A82SfLFL
i94lTXFAWHKyP93w7bvtrrrBWtgtgZgDCR1TSJyl4gmZzSvFlav/nuQmxTx8
acDgT3DCrzksurrBmkSaV5yJx7gp9ay3ThkcMdMN1iXGuLTM1JyUYr3yHDxG
pqvddshbFK+mG2xCjJGZINo3tSQxBZSV8JqcIfzp4e07Vim6wXrEmAzPB0Z4
zIzJfGli9bNCiUgzy4syS1L1cvKTs/GYmRnqrxTxKNRbN1gdh5kFqTk5RGb6
uF0J6d8OhwDzgTZBw4jK+U1vFeN+qMxjwB3lmAYSnf3lvFOL8lJzcBSUuch5
78kxn4X+xw/nIYxBiAhBjXHNSynIzwQ5AEVrtONUkX+KqsoIrQgRQajWkPwC
n9Sy1BxUndL/H97cEm7FgNCJEIHpjPD1CSrNSUWz0ztPTr/4nyKSnQgR3oDE
5JzUEs+8tHzUFOzTpMnwwmXVbKRSDCEiCNHlm5iXmZZaXII/7Ztcjvj9fEOM
HwDSCWvE0p45pA==
      "]]}},
CreateCellID->True,
FrontEndVersion->"13.0 for Mac OS X x86 (64-bit) (October 31, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.47058823529411764`, 0., 0.00784313725490196], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{0, 0}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    PrivateNotebookOptions -> {
     "FileOutlineCache" -> False, "SafeFileOpen" -> "IgnoreCache"}, 
    CellLabelAutoDelete -> False, 
    CodeAssistOptions -> {"AutoDetectHyperlinks" -> False}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.627441, 0.627441, 0.627441, 1.]}, StripOnInput -> 
             False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.627441, 0.627441, 0.627441, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 3.25}], 
              Thickness[0.04581818181818182], 
              RGBColor[0.5, 0.5, 0.5, 1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGYC4vinF5RuVyo58OlumvteXcIBxj//Pfjx0tky
Dh8v+SYJzFB0kGAJ49MtUnBYIKV/V4UNRis5GHKskYl6IuPwCaxO2eEcWJ+E
QwLYHBUHfrC5InD+7CMKG4oy+OH81TJRKdb32eD6+w991YjpZ4CbD1L2s+6L
Pcz+R1Ui69wfvrKHuQ/Gh7kfxvdLEoiw3CIM178BbA8f3PwJYJoDbn9JxsS3
NfZMcPcV2HJdX1zw1x7mfhgf5j8YH+Z/mH5Y+MDMh4UfzH5Y+MLchx7+ANUf
raY=
               "]]}, {
              FaceForm[
               RGBColor[0.5, 0.5, 0.5, 1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQLTQ3t12zRcShJLdco9dU3mHepS6LtrvCcP4+Xv/m
N77CDovcOdKu58g7FPjtSo+5KuTw57fmw+zb8g5K/ao+Z2KEHHRuqOoxqCo4
1OhH27UoCDnsSqhWX5aN4K+ZPvXO8oMI/txz6yeuFFeE67fRSpTaE6sIN79j
1cqy+5MV4fZf1fp0iemUItx9v7PEGkWeKjrA3A/jf+Fa9FHHQBTOX+1ud9n/
oChcv3mwk84kczG4+Yfi3FqvrBWD29+RcmLj1xdicPfB+DD3w/gw/8H0w/wP
Mx8WPjD7YeEHcx8sfNHDHwBu/qSR
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQvf+bus9hGwmHDp1Dj7Lq+R1g/C8aMf2HvvI4TGr/
8PXaHQEMPkz934jyRxrThRx4jt4OchAXgPMDH16pmH8JwZ97RmCl6XRBOP9D
W/9jplQhOF+/1m7LFGNhOJ/l29N9k18i+AUfW5kZ2kXg/Ple3+bO/C4K5+fN
DQ4+fUAMzt9xf9q57xnicH6N4AF++Q8IvqPzywC3cgk4PyFkivMkFkk4/4bL
wedMMyQdDs1vE5FYJOBwYaHqp4u3EPzQT5dO7vwk5SCxtot3p4WYw73/Kfef
X5RxYLv4XzxkhpjDona/Xv0OBH+hx9ZwiywJOB/mHxgf5l8Y30/526VcIyR+
5Tb7vkQhON/3fNmadRME4fxHts2x9mcF4HxYfKDHLwCFIt67
                "]}]}, {
              FaceForm[
               RGBColor[0.999985, 0.999985, 0.999985, 1.]]}, StripOnInput -> 
             False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
            "\"Click for more information\""}, "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        DynamicModuleBox[{
         RSNB`mPosRegion$$, RSNB`attachPos$$, RSNB`offsetPos$$, 
          RSNB`horizontalRegion$$, RSNB`verticalRegion$$, 
          RSNB`chooseAttachLocation$$}, 
         TagBox[
          TemplateBox[{
            TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
           "PrettyTooltipTemplate"], 
          EventHandlerTag[{"MouseDown" :> AttachCell[
              ParentBox[
               EvaluationBox[]], #2, 
              RSNB`chooseAttachLocation$$[], 
              RemovalConditions -> {"EvaluatorQuit", "MouseClickOutside"}], 
            Method -> "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
            True}]], 
         DynamicModuleValues :> {{DownValues[RSNB`mPosRegion$$] = {HoldPattern[
                RSNB`mPosRegion$$[]] :> RSNB`mPosRegion$$[
                Ceiling[MousePosition["WindowScaled"] 3]], HoldPattern[
                RSNB`mPosRegion$$[
                 Pattern[RSNB`reg, {
                   Blank[Integer], 
                   Blank[Integer]}]]] :> RSNB`reg, HoldPattern[
                RSNB`mPosRegion$$[
                 BlankNullSequence[]]] :> None}}, {
           DownValues[RSNB`attachPos$$] = {HoldPattern[
                RSNB`attachPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[RSNB`h$], 
                RSNB`verticalRegion$$[RSNB`v$]}}}, {
           DownValues[RSNB`offsetPos$$] = {HoldPattern[
                RSNB`offsetPos$$[{
                  Pattern[RSNB`h$, 
                   Blank[Integer]], 
                  Pattern[RSNB`v$, 
                   Blank[Integer]]}]] :> {
                RSNB`horizontalRegion$$[4 - RSNB`h$], 
                RSNB`verticalRegion$$[4 - RSNB`v$]}}}, {
           DownValues[RSNB`horizontalRegion$$] = {HoldPattern[
                RSNB`horizontalRegion$$[1]] :> Left, HoldPattern[
                RSNB`horizontalRegion$$[2]] :> Center, HoldPattern[
                RSNB`horizontalRegion$$[3]] :> Right}}, {
           DownValues[RSNB`verticalRegion$$] = {HoldPattern[
                RSNB`verticalRegion$$[1]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[2]] :> Top, HoldPattern[
                RSNB`verticalRegion$$[3]] :> Top}}, {
           DownValues[RSNB`chooseAttachLocation$$] = {HoldPattern[
                RSNB`chooseAttachLocation$$[]] :> 
              With[{RSNB`p$ = RSNB`mPosRegion$$[]}, 
                Apply[Sequence, {
                  RSNB`offsetPos$$[RSNB`p$], {-30, 30}, 
                  RSNB`attachPos$$[RSNB`p$]}]]}}}], BoxBaselineShift -> -0.5, 
        BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.85], 
                 Thickness[
                  NCache[2/45, 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    RawBoxes[
                    TemplateBox[{
                    PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[0.65], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], True -> GraphicsBox[{
                    RGBColor[0.988235, 0.419608, 0.203922], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], "\"Click to copy to the clipboard\""},
                     "PrettyTooltipTemplate"]], 
                    RawBoxes[
                    TemplateBox[{
                    GraphicsBox[{
                    RGBColor[0, 
                    NCache[2/3, 0.6666666666666666], 0], 
                    Thickness[
                    NCache[2/45, 0.044444444444444446`]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "\"Copied\""}, 
                    "PrettyTooltipTemplate"]]], UpdateInterval -> 1, 
                    TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Template Input\"", "Text", FontFamily -> "Source Sans Pro",
                  FontSize -> 11, StripOnInput -> False], 
                "\"Format selection automatically using appropriate \
documentation styles\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2790153672590285854; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Template Input"; 
                    DefinitionNotebookClient`TemplateInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2790153672590285854]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True]}, 
              Background -> GrayLevel[16/17], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               GrayLevel[16/17], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Literal Input\"", "Text", FontFamily -> "Source Sans Pro", 
                 FontSize -> 11, StripOnInput -> False], 
                "\"Format selection as literal Wolfram Language code\""}, 
               "PrettyTooltipTemplate"], ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4138174468017918531; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Literal Input"; 
                    DefinitionNotebookClient`LiteralInput[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4138174468017918531]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True]}, 
              Background -> GrayLevel[16/17], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               GrayLevel[16/17], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            FrameBox[
             ButtonBox[
              TemplateBox[{
                StyleBox[
                "\"Insert Delimiter\"", "Text", FontFamily -> 
                 "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                "\"Insert example delimiter\""}, "PrettyTooltipTemplate"], 
              ButtonFunction :> 
              With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1887802176716758884; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "Insert Delimiter"; 
                    DefinitionNotebookClient`DelimiterInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1887802176716758884]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
              Dynamic[
                FEPrivate`If[
                 CurrentValue[Enabled], 
                 FEPrivate`If[
                  CurrentValue["MouseOver"], {
                  FontColor -> RGBColor[1., 1., 1.], 
                   TaggingRules -> {"ButtonHovering" -> True}}, {
                  FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                   TaggingRules -> {"ButtonHovering" -> False}}], {
                 FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                  TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                "System"], Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True], 
                "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                  "], "Byte", ColorSpace -> 
                  "RGB", ImageResolution -> 144, Interleaving -> True]}, 
              Background -> GrayLevel[16/17], Method -> "Queued", 
              ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
             Directive[
               GrayLevel[16/17], 
               AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
             False, StripOnInput -> False], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               TemplateBox[{
                 StyleBox[
                  
                  TemplateBox[{
                   "\"Tables\"", 
                    "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\
\[FilledDownTriangle]\""}, "RowDefault"], "Text", FontFamily -> 
                  "Source Sans Pro", FontSize -> 11, StripOnInput -> False], 
                 "\"Table functions\""}, "PrettyTooltipTemplate"], 
               ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                   "], "Byte", ColorSpace -> 
                   "RGB", ImageResolution -> 144, Interleaving -> True]}, 
               Background -> GrayLevel[16/17], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                GrayLevel[16/17], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert table with two columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5800166344906378520; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with two columns"; 
                    DefinitionNotebookClient`TableInsert[2]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5800166344906378520]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Insert table with three columns\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    533841403879783297; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert table with three columns"; 
                    DefinitionNotebookClient`TableInsert[3]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    533841403879783297]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Add a row to the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4413051590217973467; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Add a row to the selected table"; 
                    DefinitionNotebookClient`TableRowInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4413051590217973467]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Sort the selected table\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    9150037060110806081; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Sort the selected table"; 
                    DefinitionNotebookClient`TableSort[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    9150037060110806081]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Merge selected tables\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2347719643166780208; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Tables"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Merge selected tables"; 
                    DefinitionNotebookClient`TableMerge[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2347719643166780208]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Cells\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                   "], "Byte", ColorSpace -> 
                   "RGB", ImageResolution -> 144, Interleaving -> True]}, 
               Background -> GrayLevel[16/17], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                GrayLevel[16/17], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Insert comment for reviewer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2572781756330727330; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Insert comment for reviewer"; 
                    DefinitionNotebookClient`CommentInsert[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2572781756330727330]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as comments\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3646530685697756512; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as comments"; 
                    DefinitionNotebookClient`CommentToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3646530685697756512]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"Mark/unmark selected cells as excluded\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1866935765212102190; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Cells"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Mark/unmark selected cells as excluded"; 
                    DefinitionNotebookClient`ExclusionToggle[]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1866935765212102190]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"], 
            ActionMenuBox[
             FrameBox[
              ButtonBox[
               StyleBox[
                
                TemplateBox[{
                 "\"Documentation Tools\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], ButtonFunction :> 
               With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
                 Quiet[
                  
                  Block[{$ContextPath = RSNB`$cp$, 
                    ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                    DefinitionNotebookClient`$ButtonCodeID = None}, 
                   Internal`WithLocalSettings[
                    DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    3216557251994556740; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[Null]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    3216557251994556740]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                   Null]]], FrameMargins -> {{4, 4}, {0, 0}}, BaseStyle -> 
               Dynamic[
                 FEPrivate`If[
                  CurrentValue[Enabled], 
                  FEPrivate`If[
                   CurrentValue["MouseOver"], {
                   FontColor -> RGBColor[1., 1., 1.], 
                    TaggingRules -> {"ButtonHovering" -> True}}, {
                   FontColor -> RGBColor[1., 0.41568627450980394`, 0.], 
                    TaggingRules -> {"ButtonHovering" -> False}}], {
                  FontColor -> RGBColor[1., 0.853921568627451, 0.75], 
                   TaggingRules -> {"ButtonHovering" -> False}}], Evaluator -> 
                 "System"], Appearance -> {"Default" -> Image[CompressedData["

1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GPHr06BQMANmkGrJjx46WlpZyVAAUAYoTY8it
W7emTZsG0dXa2jofBoBsiCBQFqgGjyFAWYjK7u7ua9euoYU/UAQoDlGAbA6a
IRA3TJgw4c+fP1jjESgOlIW4B6shQP9C3IDLBLg5EPfAwwfZEEhIXr9+nWC6
AqqBhDNEIyQ1QmITEpIETYAASDhD4p0BDCg3hCou+U+9MKFW7FAlnVArxVIl
78ABhbkYGVBYnpAEqGgIfkBMaQ8Ao5poRw==
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqA4ANlgA6GfHp45euxpRAEZJNqyPdNjf8qJP5nMSAjoAhQ
nBhDPl8/8rvHDk07MgLKAtXgMQQoC1WcicMQmDiyOWiG4HcDmnuwGgL0L5Em
QBA8fJANwQxJ/AioHqIRkhohsUmSCRAEiXcGMKDcEKq4hIphQq3YoUo6oVaK
pUregQMKczEyoLA8IQlQ0RD8gJjSHgCjx6pq
                   "], "Byte", 
                   ColorSpace -> "RGB", ImageResolution -> 144, Interleaving -> 
                   True], "Pressed" -> Image[CompressedData["
1:eJy9lD0OgkAQhYk2lnbW3sLW0hbjASAiscEETIichlt5AxoagRgKEvTpE4KA
/GQ3fglkeDu8zM7+LPWTepgoiuLM8FI1d23b2mU7x8fOco6mZew31tkwDXul
TyEuPs8rfvQxJAfcxPiDSRzH9wLEY03SNM3zvDZrKNCHmCRJkmUZ9SiKrgWI
KWIUOR0mGKUShqHv++43UKAzoepTM2ENQRB4nue2AR2jrKfVBPNlDb8cSh/W
U/anasJONmfRBDnsM3/kbuRqspO9DoR95rorb8RNpFQisSeyVkfKPpG1Y6Wc
nRLBU1xF8D4ZhUSTbobc9k/SEjih
                   "], "Byte", ColorSpace -> 
                   "RGB", ImageResolution -> 144, Interleaving -> True]}, 
               Background -> GrayLevel[16/17], Method -> "Queued", 
               ImageSize -> {All, 20}, Evaluator -> Automatic], FrameStyle -> 
              Directive[
                GrayLevel[16/17], 
                AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> 
              False, StripOnInput -> False], {
             "\"Open Palette\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1266981032716546660; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = "Open Palette"; 
                    PacletResource`DefinitionNotebook`OpenDocumentationTools[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1266981032716546660]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Function Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    7312678540702684447; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Function Page"; 
                    PacletResource`DefinitionNotebook`NewFunctionPage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    7312678540702684447]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]], "\"New Guide Page\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8084030535806498779; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = 
                    "DocumentationTools"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "New Guide Page"; 
                    PacletResource`DefinitionNotebook`NewGuidePage[
                    ButtonNotebook[]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8084030535806498779]], 
                    DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
                  Null]]]}, Appearance -> None, Method -> "Queued"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
          AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              GrayLevel[16/17]}}, 
          GridBoxFrame -> {
           "Columns" -> False, "RowsIndexed" -> {1 -> GrayLevel[16/17]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.5}, 5}, "Rows" -> {{Automatic}}}, FrameStyle -> 
          GrayLevel[0.75]], "Grid"], ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            TagBox[
             GridBox[{{
                GraphicsBox[{
                  Thickness[0.016667], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                   
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 
                    20.19}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.56, 52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4.,
                     14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                   
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 
                    45.64}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    56., 14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 
                    43.68}}}]}, {
                    FaceForm[
                    RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                   False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    17.57, 22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 
                    16.28}}}]}, {
                    FaceForm[
                    GrayLevel[1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    30., 44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 
                    37.8}}}]}, {
                    FaceForm[
                    GrayLevel[1.]]}, StripOnInput -> False], 
                  StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    42.43, 22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 
                    35.85}}}]}, {
                    FaceForm[
                    GrayLevel[1.]]}, StripOnInput -> False]}, {
                 ImageSize -> {Automatic, 32}, 
                  ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.25], ImageSize -> 50, 
                  ImageSize -> {Automatic, 30}}], 
                StyleBox[
                 TagBox[
                  GridBox[{{
                    StyleBox[
                    "\"Paclet Resource\"", FontFamily -> "Source Sans Pro", 
                    FontWeight -> "SemiBold", StripOnInput -> False], 
                    StyleBox[
                    "\"DEFINITION NOTEBOOK\"", FontFamily -> 
                    "Source Sans Pro", FontTracking -> "SemiCondensed", 
                    FontVariations -> {"CapsType" -> "AllSmallCaps"}, 
                    StripOnInput -> False]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                   AutoDelete -> False, 
                   GridBoxDividers -> {
                    "ColumnsIndexed" -> {2 -> RGBColor[1., 1., 1.]}, 
                    "Rows" -> {{None}}}, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "Grid"], FontSize -> 24, FontColor -> RGBColor[1., 1., 1.], 
                 StripOnInput -> False]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"],
             "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
            TemplateBox[{
              StyleBox[
               
               TemplateBox[{
                "\"Paclet Repository\"", "\" \[RightGuillemet]  \""}, 
                "RowDefault"], "Text", FontColor -> RGBColor[1., 1., 1.], 
               StripOnInput -> False], 
              "https://resources.wolframcloud.com/PacletRepository"}, 
             "HyperlinkURL"]}, {
            TemplateBox[{
              
              TemplateBox[{
               "\"Style Guidelines\"", 
                "\"View general guidelines for authoring paclets\""}, 
               "PrettyTooltipTemplate"], Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5906117565281445171; 
               DefinitionNotebookClient`$ClickedButton = "Style Guidelines"; 
               DefinitionNotebookClient`ViewStyleGuidelines[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[5906117565281445171]]& , 
              "\"View general guidelines for authoring paclets\"", False}, 
             "OrangeButtonTemplate"], 
            TemplateBox[{
              TemplateBox[{
                TagBox[
                 GridBox[{{"\"Tools\"", 
                    PaneSelectorBox[{False -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{5, 2.5}, {5, 7.5}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5], True -> GraphicsBox[{
                    RGBColor[1., 1., 1.], 
                    AbsoluteThickness[1.], 
                    LineBox[{{0, 0}, {0, 10}, {10, 10}, {10, 0}, {0, 0}}], 
                    LineBox[{{2.5, 5}, {7.5, 5}}]}, ImageSize -> 9, 
                    PlotRangePadding -> 1.5]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[0]]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
                "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"],
               Annotation[
              DefinitionNotebookClient`$ButtonCodeID = 5074018684552945401; 
               DefinitionNotebookClient`$ClickedButton = "Tools"; 
               DefinitionNotebookClient`ToggleToolbar[
                 ButtonNotebook[]], 
               DefinitionNotebookClient`ButtonCodeID[5074018684552945401]]& , 
              "\"Toggle documentation toolbar\"", False}, 
             "OrangeButtonTemplate"], 
            TagBox[
             
             GridBox[{{"\"\"", "\"\""}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
              False, GridBoxDividers -> {
               "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}, 
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
              RGBColor[0.835294, 0.605882, 0.57451]], "Grid"], 
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{
                 TemplateBox[{"\"Check\"", 
                   TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                  "RowDefault"], "\"Check notebook for potential errors\""}, 
                "PrettyTooltipTemplate"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"Check notebook for potential errors\"", True}, 
              "OrangeButtonTemplate"], {
             "\"Definition Notebook\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    4301941258590251066; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Definition Notebook"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "DefinitionNotebook"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    4301941258590251066]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Paclet Files\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1312802444570235546; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Paclet Files"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "PacletFiles"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1312802444570235546]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    6325522174070009817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    6325522174070009817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], Delimiter, "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8900916902137752067; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Check"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`CheckPacletNotebook[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8900916902137752067]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Build\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Documentation\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    1579518736508902704; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "Documentation"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], "Documentation"]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    1579518736508902704]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"All\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5625167833203047250; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Build"; 
                    DefinitionNotebookClient`$ClickedAction = "All"; 
                    PacletResource`DefinitionNotebook`BuildPaclet[
                    ButtonNotebook[], All]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5625167833203047250]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ActionMenuBox[
             TemplateBox[{
               TemplateBox[{"\"Deploy\"", 
                 TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                "RowDefault"], Annotation[
               DefinitionNotebookClient`$ButtonCodeID = 1898445052439169298; 
                Null, 
                DefinitionNotebookClient`ButtonCodeID[1898445052439169298]]& ,
                "\"\"", True}, "OrangeButtonTemplate"], {
             "\"Locally on this computer\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    8714502586816766511; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Locally on this computer"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "Local"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    8714502586816766511]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"Publicly in the cloud\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    5593410685219912767; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "Publicly in the cloud"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "CloudPublic"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    5593410685219912767]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]], "\"In this session only\"" :> 
              With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
                Quiet[
                 
                 Block[{$ContextPath = RSNB`$cp$, 
                   ResourceSystemClient`$\
AsyncronousResourceInformationUpdates = False, 
                   DefinitionNotebookClient`$SuppressDynamicEvents = True, 
                   DefinitionNotebookClient`$ButtonCodeID = None}, 
                  Internal`WithLocalSettings[
                   DefinitionNotebookClient`$ButtonsDisabled = True; 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                    Annotation[
                    DefinitionNotebookClient`$ButtonCodeID = 
                    2850084946728613817; 
                    DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = 
                    HoldForm[
                    DefinitionNotebookClient`$ClickedButton = "Deploy"; 
                    DefinitionNotebookClient`$ClickedAction = 
                    "In this session only"; 
                    DefinitionNotebookClient`DisplayStripe[
                    ButtonNotebook[], 
                    DefinitionNotebookClient`DeployResource[
                    ButtonNotebook[], "KernelSession"]]]]], 
                    DefinitionNotebookClient`ButtonCodeID[
                    2850084946728613817]], 
                    CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; DefinitionNotebookClient`$ButtonsDisabled = False; 
                    Null]; Null]]]}, Appearance -> None, Method -> "Queued"], 
            
            ItemBox[
             StyleBox[
              DynamicBox[
               ToBoxes[
                CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
                StandardForm], Initialization :> (CurrentValue[
                  EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
                "")], "Text", 
              GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
             StripOnInput -> False], 
            DynamicBox[
             ToBoxes[
              If[
               CurrentValue[
                EvaluationNotebook[], {
                TaggingRules, "SubmissionReviewData", "Review"}, False], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit Update\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit changes to update your resource submission\""}, 
                   "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3196298050911436087; 
                   DefinitionNotebookClient`$ClickedButton = "SubmitUpdate"; 
                   With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepositoryUpdate[RSNB`nb], 
                    "ShowProgress" -> True]], 
                   DefinitionNotebookClient`ButtonCodeID[
                   3196298050911436087]]& , 
                  "\"Submit changes to update your resource submission\"", 
                  True}, "OrangeButtonTemplate"]], 
               RawBoxes[
                TemplateBox[{
                  TemplateBox[{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Thickness[0.06349], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBWIWIGZigIEX9mCqQd8Bwv+Bnc/A54CiHs5HV6/ngJUP
p2HmwdTp4FCHTvOhqYfZrw2lhdDk0fno6tHcD1PPwOSAnY+uns8BAE8cGz4=

                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False], 
                    StyleBox[{
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgB2IWIGZigAEJBwjNB6EblHHwX9ijqofxoeoYhKC0Bg4+
Hw4apk4Uap8aDr4QDhqqDu4uVRx8URw0TJ001D5lHHwJHDRUHYMclFbCwZfG
QUPVNSjgp+HmIWgAG/wcEg==
                    "]], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10EEKgCAQhWGpFtEyEAYGggQj6RKeoSMErbuCR0/IWfTgCcPwy7fR9XrO
u3fOTXWGOp2zM+ZvH2170nv+e2sFH0ijt45/XxJp9NgRPHYAb63kHhu9tf2H
eU8aPfbS9kxawAvxnrSCx3c3XzbS6JX4RFrAS34B53ckaw==
                    "]]}, {
                    FaceForm[
                    RGBColor[1., 1., 1.]]}, StripOnInput -> False]}, 
                    ImageSize -> 15, PlotRange -> {{0., 15.75}, {0., 16.5}}, 
                    AspectRatio -> 1.15], "\"Submit to Repository\""}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0}}, "ColumnsIndexed" -> {2 -> 0.5}, 
                    "Rows" -> {{0}}}], "Grid"], 
                    "\"Submit your paclet to the Wolfram Paclet \
Repository\""}, "PrettyTooltipTemplate"], Annotation[
                  DefinitionNotebookClient`$ButtonCodeID = 
                    3704832848557640569; 
                   DefinitionNotebookClient`$ClickedButton = "Submit"; 
                   With[{RSNB`nb = ButtonNotebook[]}, 
                    DefinitionNotebookClient`DisplayStripe[RSNB`nb, 
                    DefinitionNotebookClient`SubmitRepository[RSNB`nb], 
                    "ShowProgress" -> True]], 
                   DefinitionNotebookClient`ButtonCodeID[
                   3704832848557640569]]& , 
                  "\"Submit your paclet to the Wolfram Paclet Repository\"", 
                  True}, "OrangeButtonTemplate"]]], StandardForm], Evaluator -> 
             "System", SingleEvaluation -> True]}}, 
          GridBoxAlignment -> {
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
            "Rows" -> {{Center}}}, AutoDelete -> False, 
          GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
              RGBColor[0.670588, 0.211765, 0.14902], 
              RGBColor[0.47058823529411764`, 0., 0.00784313725490196]}}, 
          GridBoxFrame -> {
           "Columns" -> False, 
            "RowsIndexed" -> {
             1 -> RGBColor[0.670588, 0.211765, 0.14902], 2 -> 
              RGBColor[0.47058823529411764`, 0., 0.00784313725490196]}}, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {
           "Columns" -> {5, {0.9}, 5}, 
            "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 0.25}}, FrameStyle -> 
          RGBColor[0.670588, 0.211765, 0.14902]], "Grid"], 
        ButtonBoxOptions -> {Enabled -> Dynamic[
            Not[
             TrueQ[DefinitionNotebookClient`$ButtonsDisabled]], 
            TrackedSymbols :> {DefinitionNotebookClient`$ButtonsDisabled}]}, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{
               Thickness[0.016667], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  30.63}, {4., 43.68}, {15.31, 37.16}, {15.31, 24.1}}}]}, {
                 FaceForm[
                  RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.43,
                   7.14}, {31.13, 0.62}, {31.13, 13.67}, {42.43, 20.19}}}]}, {
                
                 FaceForm[
                  RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.56,
                   52.17}, {54.86, 45.64}, {43.56, 39.11}, {32.26, 
                  45.64}}}]}, {
                 FaceForm[
                  RGBColor[1., 0.41569, 0.058824, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  14.97}, {4., 28.02}, {28.87, 13.67}, {28.87, 0.62}}}]}, {
                 FaceForm[
                  RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30., 
                  60.}, {41.3, 53.47}, {16.44, 39.11}, {5.14, 45.64}}}]}, {
                 FaceForm[
                  RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{56., 
                  14.97}, {44.7, 8.44}, {44.69, 37.16}, {55.99, 43.68}}}]}, {
                 FaceForm[
                  RGBColor[0.98039, 0.66274, 0.25098, 1.]]}, StripOnInput -> 
                False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{17.57,
                   22.8}, {17.57, 35.85}, {28.87, 29.33}, {28.87, 16.28}}}]}, {
                 FaceForm[
                  GrayLevel[1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30., 
                  44.33}, {41.3, 37.8}, {30., 31.28}, {18.7, 37.8}}}]}, {
                 FaceForm[
                  GrayLevel[1.]]}, StripOnInput -> False], 
               StyleBox[{
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{42.43,
                   22.8}, {31.13, 16.28}, {31.13, 29.33}, {42.43, 35.85}}}]}, {
                 FaceForm[
                  GrayLevel[1.]]}, StripOnInput -> False]}, {
              ImageSize -> 12, ImageSize -> 50, 
               ImageSize -> {Automatic, 30}}], 
             "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (FrameBox[
        ButtonBox[
         StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
          "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
          Dynamic[
            FEPrivate`If[
             CurrentValue[Enabled], 
             GrayLevel[1], 
             RGBColor[0.917647, 0.802941, 0.787255]], Evaluator -> "System"], 
          StripOnInput -> False], ButtonFunction :> 
         With[{RSNB`nb$ = ButtonNotebook[]}, 
           If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
             ProgressIndicator[Appearance -> "Necklace"]]; 
           With[{RSNB`$cp$ = $ContextPath}, 
             Quiet[
              
              Block[{$ContextPath = RSNB`$cp$, 
                ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                False, DefinitionNotebookClient`$ButtonCodeID = None}, 
               Internal`WithLocalSettings[
                DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                   ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                   "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                 Annotation[
                 DefinitionNotebookClient`$ButtonCodeID = 3145484069433207908; 
                  DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                    ReleaseHold[
                    DefinitionNotebookClient`$ButtonCode = HoldForm[
                    #2[]]]], 
                  DefinitionNotebookClient`ButtonCodeID[3145484069433207908]],
                  DefinitionNotebookClient`$ButtonsDisabled = False; Null]; 
               Null]]]; 
           CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; 
           Null], FrameMargins -> {{5, 5}, {0, 0}}, 
         Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAoIKBiRJEB0Pq2Ng6BHkhCMgm1ZB+SeHlhkqrzdSQEVAE
KE6MIU1cnHM1ZOEaV8EQXAQoC1SDxxCgLJrtuBCyOWiGILsBPwKqxGoI0L9E
mgBB8PBBNgQzJPEjoHqIRkhqhMQmSSZAECTeGcCAckOo4hIqhgm1Yocq6YRa
KZYqeYdauZiK5QlJiIqG4AfElPYAYH5C2g==
             "], "Byte", ColorSpace -> 
             "RGB", ImageResolution -> 144, Interleaving -> True], "Hover" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAoIKBiRJEB0Pq2Ng6BHkhCMgm1ZB+SeHlhkqrzdSQEVAE
KE6MIU1cnHM1ZKEajVRX6SpDEJANEQTKAtXgMQQoC9VuqLJaQXa1uBQKAooA
xcEKkM1BMwTqBgMVdO3IyEAF4h6shgD9C3UDHhMgCOweePggGwINSUxfYCIF
WUg4QzRCUiMkNiEhSdgECAKHMyTeGcCAckOo4hIqhgm1Yocq6YRaKZYqeYda
uZiK5QlJiIqG4AfElPYAAjcuaw==
             "], "Byte", ColorSpace -> "RGB", 
             ImageResolution -> 144, Interleaving -> True], "Pressed" -> 
           Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFAcikHs/4QAMWqAoIKBiRJEB0M65BQWBQRCEJBNqiHbyso/PXuG5mugCFCc
GEMm6hve2bsPIv7t+Ytnu/dAEJANEQTKAtXgMQQoCxH5fPfekZi41eJSyAgo
AhSHKEA2B80QiBs+XL22VkYezQQIAooDZSHuwWoI0L8QN+AyAW4OxD3w8EE2
BBKSmL7AREA1kHCGaISkRkhsQkKSoAkQBAlnSLwzgAHlhlDFJVQME2rFDlXS
CbVSLFXyDrVyMRXLE5IQFQ3BD4gp7QFlfuGB
             "], "Byte", ColorSpace -> 
             "RGB", ImageResolution -> 144, Interleaving -> True]}, 
         Background -> 
         RGBColor[0.47058823529411764`, 0., 0.00784313725490196], Method -> 
         "Queued", ImageSize -> {All, 23}, Evaluator -> Automatic], 
        FrameStyle -> Directive[
          RGBColor[0.47058823529411764`, 0., 0.00784313725490196], 
          AbsoluteThickness[2]], FrameMargins -> -1, ContentPadding -> False, 
        StripOnInput -> False]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              RowBox[{
                AdjustmentBox[
                 TemplateBox[{
                   ActionMenuBox[
                    TagBox[
                    PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                    MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                    Method -> "Queued"], "\"View suggestions\""}, 
                  "PrettyTooltipTemplate"], BoxBaselineShift -> -0.5], 
                " "}]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -0.5}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["FormEditValuesButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TemplateBox[{
         TagBox[
          PaneBox[
           PaneSelectorBox[{False -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
N3kqZvY=
                 "], {{0, 50.}, {50., 0}}, {0, 255}, ColorFunction -> 
                 GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, PlotRange -> {{0, 50.}, {0, 50.}}],
              True -> GraphicsBox[
               TagBox[
                RasterBox[CompressedData["
1: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
DcvuuIyle//vxt/PCE6d
                 "], {{0, 50.}, {50., 0}}, {0, 255}, 
                 ColorFunction -> GrayLevel], 
                BoxForm`ImageTag[
                "Byte", ColorSpace -> "Grayscale", Interleaving -> False], 
                Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
               ImageSizeRaw -> {50., 50.}, 
               PlotRange -> {{0, 50.}, {0, 50.}}]}, 
            Dynamic[
             CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
            0], ImageSize -> {Automatic, 15}, ImageSizeAction -> 
           "ResizeToFit"], 
          MouseAppearanceTag["LinkHand"]], "\"Edit values\""}, 
        "PrettyTooltipTemplate"]& )}], 
   Cell[
    StyleData["FileManagerBMPIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9450980000000001, 0.764706, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29411800000000005`, 0.839216, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0,
              2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
             0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBmIQDQEiDhBawAGVr+Cwm1VIxP6ZBJyvW3ExfIKZlEPU
lJsKk3kUHNbt4rs6pUXaYdetrr+p2+UdTN5buLpPknF4tX098/M3cg56xw5Y
9eXLOszamGFlLSnnwPR3X/3nR7IOLM97NN6+lXGoSH+7jfusrANbyvry+j3S
DvZPZ+i8Oy/rkLYqISSIXdrhdFOnfdcsWQcfpitXNoVKOWQJq3+3NpF16Ftv
u1nlgKSDuxWzsv5pGYcaz+QtfVqSDg/fi29WtZZxWBTbOmX+FgmHrI+aDMcm
Szu8yWzfr5Yt4TDNuTvnebSMw6EPgoaqRhIOZ8/z+t7kBJqfY7eOd6u4Q+hH
t2cT62Ud5jg9Ny3jFHeI32r0cPovWYcgvy2rJwSJORTlCb+bainnsOOHCMPj
SlGHxcHhdqeN5Ryivu681TVXxOGVbF57m6ucA9eXThvPKGGHU1YysUtPyzo8
uaB0+6eckEMmMBRknso4OO1ZF7/BWtDBtPJU1q570g4cRQGHfKIFHDJWBHoY
dUs5PEh+6Sx+hd/B9HrmkqVGkvD4AQCmgKFd
             "], {{5.49393, 
             6.2940000000000005`}, {6.24061, 6.2940000000000005`}, {6.429096, 
             6.284750000000001}, {6.614185999999998, 6.34661}, {
             6.759240000000001, 6.467319999999999}, {6.890777, 
             6.587419999999998}, {6.962032, 6.759840000000002}, {
             6.953660000000001, 6.937759999999999}, {6.96995, 7.11698}, {
             6.9035910000000005`, 7.293840000000001}, {6.77343, 7.41811}, {
             6.613585999999999, 7.530479999999999}, {6.419682000000001, 
             7.58385}, {6.224849999999999, 7.56911}, {5.49393, 7.56911}}, {{
             5.49393, 5.8706}, {5.49393, 4.4308}, {6.31, 4.4308}, {6.509734, 
             4.41999}, {6.705573, 4.48902}, {6.854379999999999, 4.62269}, {
             6.9925049999999995`, 4.761840000000003}, {7.065081999999999, 
             4.953080000000002}, {7.05406, 5.14884}, {7.08081, 5.3499}, {
             7.011307, 5.551820000000001}, {6.866472, 5.693819999999999}, {
             6.721637, 5.83582}, {6.518383999999999, 5.90132}, {
             6.317889999999999, 5.8706}}, {{9.131169999999997, 8.}, {
             10.356000000000002`, 4.736610000000001}, {11.5814, 8.}, {
             12.221939999999998`, 8.}, {12.221939999999998`, 4.}, {
             11.727999999999998`, 4.}, {11.727999999999998`, 
             5.557409999999999}, {11.774239999999999`, 7.238630000000002}, {
             10.544139999999999`, 4.}, {10.16581, 4.}, {8.937809999999999, 
             7.231200000000001}, {8.986680000000002, 5.557409999999999}, {
             8.986680000000002, 4.}, {8.492740000000001, 4.}, {
             8.492740000000001, 8.}}, {{13.799369999999998`, 
             5.566080000000001}, {13.799369999999998`, 4.}, {
             13.305440000000003`, 4.}, {13.305440000000003`, 8.}, {14.68744, 
             8.}, {15.04065, 8.0207}, {15.387580000000002`, 
             7.899980000000001}, {15.65166, 7.6644999999999985`}, {15.88797, 
             7.431630000000002}, {16.01454, 7.109539999999999}, {16., 
             6.778090000000002}, {16.02146, 6.443669999999999}, {15.8971, 
             6.116339999999999}, {15.659, 5.88053}, {15.38536, 
             5.655040000000001}, {15.03595, 5.542569999999998}, {14.68216, 
             5.566080000000001}}, {{13.799369999999998`, 5.9969}, {
             14.687369999999998`, 5.9969}, {14.908019999999999`, 
             5.982140000000001}, {15.12579, 6.053599999999999}, {
             15.294799999999999`, 6.1962199999999985`}, {15.44357, 
             6.350040000000002}, {15.520309999999998`, 6.559620000000001}, {
             15.50604, 6.7731400000000015`}, {15.516169999999999`, 6.98493}, {
             15.43995, 7.19177}, {15.294799999999999`, 7.34633}, {15.13914, 
             7.49474}, {14.93073, 7.57494}, {14.71574, 7.56917}, {
             13.799339999999999`, 7.56917}}}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCDFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 3.5}, {17., 
            3.223860000000002}, {16.776139999999998`, 3.}, {16.5, 3.}, {4.5, 
            3.}, {4.223858, 3.}, {4., 3.223860000000002}, {4., 3.5}, {4., 
            17.5}, {4., 17.776142}, {4.223858, 18.}, {4.5, 18.}, {16.5, 
            18.}, {16.776139999999998`, 18.}, {17., 17.776142}, {17., 
            17.5}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{
            1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 
            0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 
            1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {
            1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, {{{11.76489, 10.215}, {11.80176, 10.266810000000001`}, {
             11.77555, 10.604633}, {11.58396, 10.907632000000001`}, {
             11.290009999999999`, 11.076163999999999`}, {10.99606, 
             11.244695}, {10.63778, 11.256947000000002`}, {10.333, 
             11.10889}, {11.05187, 11.20557}, {11.479730000000002`, 
             9.99811}, {10.727409999999999`, 9.33197}, {11.149809999999999`, 
             9.52223}, {11.50957, 9.82843}, {11.76489, 10.215}}, {{8.1958, 
             10.303830000000001`}, {8.202184, 9.241180000000002}, {
             8.904717999999999, 8.30847}, {9.924319999999998, 8.009}, {
             10.0459, 7.98489}, {11.0395, 8.27055}, {11.746269999999997`, 
             9.149949999999999}, {11.81152, 10.181730000000002`}, {11.44906, 
             9.569830000000001}, {10.80329, 9.1811}, {10.0929, 
             9.147189999999998}, {9.307032000000001, 9.191650000000001}, {
             8.59527, 9.625599999999999}, {8.1958, 10.303830000000001`}}, {{
             9.91321, 7.952940000000002}, {7.39209, 8.45477}, {7.04614, 
             13.89722}, {12.13989, 14.18054}, {11.451440000000002`, 
             14.616627999999999`}, {10.66164, 14.866693}, {9.84766, 
             14.90631}, {9.270579, 14.904569}, {8.706776999999999, 
             14.732987000000001`}, {8.22656, 14.41296}, {5.411620000000001, 
             12.47095}, {6.03, 7.93628}, {9.538089999999999, 7.93628}, {
             9.65967, 7.93628}, {9.784709999999999, 7.941830000000001}, {
             9.91321, 7.952940000000002}}, {{9.29089, 10.69141}, {9.25389, 
             10.639469999999998`}, {9.280137, 10.301669000000002`}, {9.471731,
              9.998700000000001}, {9.765674, 9.83019}, {10.05962, 
             9.661680000000002}, {10.417869999999999`, 9.649429999999999}, {
             10.72264, 9.797469999999999}, {10.00376, 9.7006}, {
             9.575790000000001, 10.908}, {10.3281, 11.574259999999999`}, {
             9.905787000000002, 11.384055}, {9.546119, 11.077912999999999`}, {
             9.29089, 10.69141}}, {{12.77489, 10.73059}, {12.771159999999998`,
              11.738362}, {12.10084, 12.621973}, {11.131339999999998`, 
             12.897090000000002`}, {11.009269999999999`, 
             12.921389999999999`}, {10.0158, 12.635689000000001`}, {9.309201, 
             11.756293000000001`}, {9.244139999999998, 10.72461}, {9.606552, 
             11.33644}, {10.25222, 11.725138000000001`}, {10.962520000000001`,
              11.759090000000002`}, {11.69498, 11.721043000000002`}, {
             12.366620000000001`, 11.339892}, {12.774899999999999`, 
             10.73059}}, {{11.51758, 12.969909999999999`}, {11.396, 
             12.969909999999999`}, {11.270959999999999`, 12.964357}, {
             11.14246, 12.95325}, {13.66357, 12.45142}, {13.741819999999997`, 
             7.11825}, {8.91577, 6.725830000000002}, {9.60423, 
             6.2897500000000015`}, {10.39402, 6.03966}, {11.207999999999998`, 
             6.}, {11.78508, 6.001780000000002}, {12.348869999999998`, 
             6.17338}, {12.82909, 6.493409999999999}, {15.644409999999999`, 
             8.435419999999999}, {15.025630000000001`, 12.969909999999999`}, {
             11.51758, 12.969909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerCSSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0,
              1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxdk3tMUwcUxmtZNl0M0Mel5T56wcyCDxwzSLvSlW9EGUKlDogymTY8hrjI
FHFs0SCyDIaADtRBZMjDuDpgbRgspLRDIqIgGW0zqnF00IVNRjMU0slkQ2B3
y/CPneTk5PfPSb7vOyc440jSO3wej6fk+p+5yLsameclYD7PUMVmKVZYe+By
JiIlOPN58h3eTwTae6cb1N8R+CFa5/P8qwG43ki+PJYlRgW/cJ3OG4B9WVFu
XZgIRiL3XH6FBI9J6/a5SCHaBqdOv1Qvhbb5d9J6VYDXmg4PEdcDse/+iG+R
UYA6e7dr7gqJoZsxxkMNAvR8knAuqoTCqDIjTPNAgNiYNNsXShql5XlL8uNC
tL9574h8koa0w3I3f6sIbwmbDDW7GGR5hyMVcjGCT/Ys/LyfQXxvIaMMIXDr
imc6azf7jOXuw/mZKhZxlmzvcJcIihuKXY2XZXDsnKH0aULc/fXdTX/UMsgO
nEiV7BVAGxF3I7mMxqmWRgVxyB8flGhSb8sptOeoogJ/9MNzmuhKf04P79/y
x1bafhCMFGZR54G1D/wwa0grKPs0AJOdar9HJn+Uk9qbs9UEHl30vbf8pwD2
+rkNA8fFMHgLPh75SIRjbPc2z6QIX95OUJxJJ/7bK0bO5jpbYqzkGY/ufsXm
7pdCNsF2PZ4XofSr9+bqxSSeLivT+5RiVHJ2iTMonHg6boi2iuG8lRtxupbG
X/Y6tmgDgUFda6GqgUHt6pTloAkCql+yzauKZDh/akF11MblWaFbFS5jofB5
uyrMKkH8luXgxS4WXzOV90McUixMOT+z84OwduaYwO1Z0R8E/Z7Q7xe1FGLX
v8+vWx2E8PSITa5rNJRtmr1p1SweWtfNu1sZqL0v+Ng537cXa6pDWmQoXVqz
Zc9FBs2W7nmXhoXT2HBhXEHjLL416bn8Npo2LpgGSUxJq3rGuXxXeHrziWv8
RAbmJ0fv5A1QQFxAePFvNGZto7kSC40c00hcwg4aNWt6nfaTDCbVmfqOZgpl
6p2WbKEM/QVPeGMDJFSh6YaHehkKO4fPejg9SYnftFUlyVASqnfE9Ekx5Ztx
8MX9MvSVJxtLWiRo5c6hxcFgorVjppwnwYcp2153jtHwxKam9HP/0U9demOp
iULNkEuQ6CIwFH8hyRFG4v//9jeFT3Hb
             "], CompressedData["
1:eJxdVGlQU1cUjtRRRAsJSyAkeXnv5UXEBRAELFT6iRSwg0QRRREEMyguCClY
QKUsLTXUEYG61G2wiFQLKorgiBsuuEWMoGg0kYhSKBVEZFNQoI8u/uiduXPm
3Jlzzne+851LKeKCVhpxOJxg9o5Yn9gtws4nDALcf5wded0ajwqVs0yiGYz+
dNAiLMAGg894VsVtUjgnTaMk5TbYlOWbxF0nxd9x/TagBfExs7ppDHQZtRe6
CLDyedu68O9o4MbTiswDAhgdlPgaS2jkpr73UDrYYsRoGikEujWbvP7JFpPO
OXxovEDhTHPY1pLJQniZaAuVFyl4U0amBWohfM90D9afpRDcVLS/Ol0E+c5M
H52BwnZFZdFDJzGq5iz4Rc7Q6HEv4I46IgZVvet0UiIN/q76catpAhdjeTZt
ehrHRKFRnhEErp4Pq07yliIosLwkN4iA47sZdo5lUgwtu709O5LATd66N/Yk
A4fPOnaa8gnoqsruH97AYKt9no/j92IcO/44IrGKwctlLRuWtovwlTbg0pMW
BjV1TW/dxCIoR4A/Z+DrF99vNleIV53aqGyd7KNvvGhtH/QyiNpeuNmSIrBZ
AmIuyZB1zgxru0WYahqd6qqSIbk0dG9niRgEf+287kAZ/PvnVsijCSTK2ZdB
Bi0+503shwmU8bK0vfsZBJnVtZoqJLgh3Os35MTiy/vCJlkjweOsSFHYOSne
39DmLzUiP/bP+fuQiD3uaK7bR8N0fMWvG8eSmJl6dIaij8I2K9c9Wwok//ZP
wStk2amqGgIr5J4fXEdRYDL9hH4TCMjUhiBNFQlNx+1r3q9EWK+2MjRfJSHK
SA6vuixEoLWi1+8yCYVVXBRRaYt0bbRmoIfE7j+uNCw9L0Dhktg1rsEUnPNn
zxkeLUDGmP0eOToKIraNSNIGC06PDc3YSEMjTXPqTLGGfgQPI0W+b+jkODtr
NIyvMfnykBRn/7yXeriVj1QPwmW+gMEJb7W8+Fs+Do3kz2RQ/nprY1qbFQw7
VD+EXmNgmN0eUJBghV69NiOBnd+YB04pPjWWKJhUa9f1OwMP3UzFNMISDXcX
iuObGMQ/hz9faYGTmunk5osM2gsXhnjdMcdLL85v81IYTFXxn2hCzPH25uaH
aoYBE+7Sv0rPw9g9/aapLP+37io/8TrIAyFkiZFLEfr4gWnacR5axEda/R/R
cAve1u1ewMOaUi9iYDmNWt16631tPIRQzXYPh1i9F5mFz08zh73UgZNdTCEl
O/zQpvEWiNDEhLRupv7RkcECLzynt11Pp1CvcjgaV2mJ9PbejhwV+dG3j6j1
NtpCoix+dd6rpxbwdy5JOltE4t1CdsFGW+Ba76SwnBckdjo96CsNMMfAaYk9
LaVwLGHCreU5PHR4CLvupbD7esl/9Z1+Lnp/btihaqagKW3hXDnAxbSJbhLt
YhqHi7oSM124yI8c/ib2Pg2OcUvrm/dmyL3KFpD/pz8uVg3Vua8ZkCJ3XFX9
Pb0ZYpI3FU0tZGBpwlMaL+KCqfyg6pkig/N8wbCXlIchf55gcYEMBEubwzMe
nKtPOcQ2yaCWTPj87ZA5lhx1vetpkKFsZN5TLKG8/fWRDY1sfDy/r7zJEhXB
hu1KtQyRzbW0fq8V8lawwsyXwfvCiYiTnnzk1e5OsI+VgZb0xCxu4GNidp1H
8WQZLr+piN4dZY3//5d/AbYWNr4=
             "], CompressedData["
1:eJxdlAtMU2cUx0uV1xDa8iiUtpeH0nt7L7IKkyJu+Ee7ollxgiiKOpBUp8YB
jhHRuOFjTkEUfKGIlPEGRUHCDAiCPHSohangxkBFBRUFBKcwGQhrp3PJvuTL
l5N8OTnn//+d4xQeGbiGzWKxgnRX/x7QTo2TXWIwt+psaMlsPryo1Xn9SQyM
Iu42Lb7Lh08il/hKxSALGY2H1bbw1f8bpaGSx/uGXbbFYFaxY9NeGj0rHn+z
XGWH4nOfBUWa0+Bf4e8Uldmh6Wnp8bZEKRQRPwgHR+yg+nzZQwMbKe749qky
PQRw3zzdySGHgom6eHPcSQEm+vwSGkEh+btR7yg3ewQsLDudzKaw0PPRBwOH
7HE1qLYg5x6J1pRo6VlaCAOr8hh5J4m5TmyLzGtC9JtXy1LbSQR15aY1bBdB
SF8ZSWNROBBekXtbJkbVwS3dHCWFV/JMrkG+GGkeWWXy4xT4R1tN1zkT8Elb
knH6DYUiUYh6diiBS6a7TbzUUgTq6wgk4D7p6IuBFinGV1w9sD+MQH3o4ZnP
fGm4zXp+xIJPoM28g78mhUaC9KDiw11iFIyycjwf0Him16dPBKVLDPuECQPt
za4/PcUidMqrh7VsBkq/r0c4C4To9WEV+o/9FxtmH/I2eMNA1PvQ095RhK66
Hcmu9xnsvcDBhpciSFcm1Q0VMIgtDkkdPC1GYZX4QVkUA/WpsKDALwlEpytD
aAcGRH7PfLcJAk7GLtqyizQCOTd7LMIdULe+dl91oK6+g3PsYpsd0CwIaBfe
kWL0ym+a5WzH9/2z/jmOKMkXj5+oorC9VBoca+yI8lN9lc52FKLUxMiuTId3
/ZPwCV5xrkZLwPZF+vEhZxLTvvcT+k0hsPhGv8v+BxI0P79aP7dfhI6a0ls5
3RKIdsSuqrkkxNhoopnxQwnCbSLVRIU9XsZ/vOACn0TKk9q7yysFyMhLOTMU
Q8Jd4ztvYrIAW47te71wjIQo1W88zNEOpks2DCONQrMO68Fttm/rUUqh0ckQ
Sdoip/v2LKMGKVpPPBbn9/Cxda9yM3c2De3L+8+LvuXjR33+XBplAwn343pt
sLs3oJx4RMMuR7AvL9oG5d3li711/jnr+9FaY+2McyPlRgy8273CpxPWyPz1
owEvQwZLZXShVZQVgiVjgXM6aZT6SgSzrlviSSLVb66h4bqH/3tzsCU0DkqT
JCWNaas8RtZ28BC7Ndd1nk7/xqaoST4ZPERu60912SRFSFuLRdwZHv645R/O
fU3BPjsmaGYmD17uSWO12yno7TjWy8OpnQEL0h11vOdyVi2Ks8TR+VnHArQk
FIxMHWNmhU/0fKeT0E/rxntWyFdYXkzM0s3THreCyAprrI43PuJfKHkfV9RV
rmzIl7zV844VuGY/5W35WQJrw78UmslW0OPpP5nEEVnLcLHKEu2LZjR3KkgU
RU9p/CKJh2v2Q9z9GhLnq+evuz7ChV6eT411/hQ/ZtWe5KJcq1sQsRQ2zrvs
FefBRfayiPUzX1FozNWRNcrBm9bYp5JN//LHRWmWUYtMRCPZtKb1lw4OrG8o
2gYbaMgqSY7ZEi6KQ0uE5/0ZuC8STPhM5SF+oKHItp4Be/hmIdPJg6p+kDfD
0BVnI4ZOvhq3fJfXFaV6vxlrJDSWJMjZruDXTiwt7bKGjsoweR8Dald29+1U
G/x/X/4Nxp4vbg==
             "]}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEFBwht4IDCb0Dwg3h/2248ZuDgafrm+xEp
eai4IZSWQ+OzwPkFU9UFyk4xoskzwM2D8VHtg/IZeOD8Bv7pMuWnONHM40Cz
D8pvMITzBeRyZTYeM0RTbwQ3D8ZHtQ/G14fzl0h9q07q1UczzwDNPgMHABhL
Lgc=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}}}, {{{16.75, 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {17., 13.}, {17., 
            4.25}, {17., 4.111930000000001}, {16.88807, 4.}, {16.75, 4.}}}]}, 
          
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{17., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {6.75, 
            16.}, {6.888071, 16.}, {7., 15.888071}, {7., 15.75}, {7., 15.}, {
            16.75, 15.}, {16.88807, 15.}, {17., 14.888071}, {17., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.898039]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerEmptyDirectoryIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIxIGZigAMHMNlg4IDCZ+CB8xv4p8uUn+J0KJiqLlB2
ihEqzgGlWVD5cHM4HATkcmU2HjNAU28INw/GR7UPxteH85dIfatO6tVHM88A
zT4YrYCd34DgB/H+tgWZ42n65vsRKXk0e+XQ+CxwPqr/YfIMcPNgfJh9ANTj
LzA=
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAEZBwitB6Eb9OF8AblcmY3H9FHlGQwcgnh/
2248pgvnQ/Sh8RkE4fwHh1WPzy0SQDNPAM0+KJ+BC87fcUqYw/opB5o8B9w8
GB/VPg40czmg7tVHMw/mTi40vjScv0TqW3VSrzSavAzcPBgfZh8Ae5IxSw==

            "]]}, 
          FaceForm[
           GrayLevel[0.898039]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYnlv+V0L0owcGMBAx8Fp+3QTt9WicD7LQy6N
K5tFHJruSTuD+HvWn2o9dV/YocezXr91ubbDwTBOsfbNwg6TXqSKnNbVduB8
9uJj9W0OB49F0wN1tvM48C7p9tVeyuFw4cns3LwebgdlY/EdNt84HD6IeQT8
ieByuJ/N0Xd6B6cDw0rfOXfyOR3mLPmZHFXN5eAxt0HtUBuHQ+4ea6Ow2dxQ
93A4cC5n1f91igfO1xO6VaQ31QDOd1KTtOS+jOD3lxZK83IYOhyIn2z6KpHT
IWBVrZWcMJAfm7Husge3g/3jQ40Tnhg55InPem1yScvh3uT21qjXRg5839Ta
nshoO9QxBM22eGjkwMSdcOpAprbD0Ydn1j87YeTw+7hTCccSbQfew+5Hpmww
ctgydfof/3vaDoYztSSm9hg5OL7vVQSFF3r4AgAQkIHZ
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGYCYu2bGwU79hs6bOc+WyqVqemw8ctC7lfGBg4F
4rNem1wScCjd8O98op6Bg9u5Q/PKIgQcfjY3Pr8nbOAwwXpp89f//A6z3P8l
PHip78AABgIOZVKZK/f8FYTzHd1XR13aKOhwYu6lg7+A6r/cXatzMVPQways
89VaRQGHosw/h7QtBR1Udv5p/xIt4JAnpi/WxiHooLO27YjtNAEHxekWnxy+
CDisWHDbW+qxgMPDa3dtrjIKOkx6kSpyWlfQ4ViGbKivgbiD5xejrqfTNB3O
bAi8lu8m7jB7pUD/kcuaDhteXMuu2iDuILNRbD4Tg5ZDRez+BHMdCaj7tBx6
t4Tc62swhPOnRUfxdk42dDjV9fAViH96jl5351JDBzUTTx3N95oOGjofGzZt
NHTIeHbSlPWSpsOp9Eq5O3sNHVbN8LJ/uEXTocpwivDbQ4YOOQ4tO4r6NB3Q
wxcAexGW5g==
            "]]}, 
          FaceForm[
           GrayLevel[1.]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerGIFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9450980000000001, 0.764706, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29411800000000005`, 0.839216, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {CompressedData["
1:eJxlkmtMUwcUxy+Cz20t7eU+2t57C04DZAkGZUWdYf9NpIjxscocoqKiEEtQ
OiQyIgpzW8IcakDdCji0WkGgIZEMQWVgREBBeUatU5GHgHagGErRCnYwIvuw
Dycnv5zz4ZzzOx6RcZqoaQRBLB6PiWz1N7g69SkRbKrJJ74joWxxORy2Uwlj
3cvd9jYpMpffuFPwh4A5EVbKuFGKcHObKGWAR9BEPyvFdHmsZZmdw5WMpKfi
Wgnuq2q6z9oVcK8qe96UK8GLE6J7jjdyxBy68JYwShBpj1iu65eh3v/hI/14
fcQj7rK9k0VYjSJL3S7BY2/e5BhisC9k5t+OzVKkLvLdkkYxuGb0DVfflWJ3
z3zH8a00LLNXLTuTTiLH3RJAPKcw917XeiLWDaWVwbsatBS6dL3f7N1GYaxL
c/KSFwXdrW/zE3Q0Sl4e7kj5hELsxDw/MlMcxpS1ELksdty56Z4oodD66fG4
S0vkeNW6OtJVT6FXPCN3f5MCaaWv3YhzNA4OZM13msPDW/xBad5lBrrGtNZ2
dwER+6NXpi6VIU+8Zd2TEmFy7xtyNG+vrCByBNSyYXWvnDkEekwTGQoFKBpH
Y0TgsaFi/IBrBfzrQy0g29llr1XPwy3ztoX3USKkZ2BWfg+HblNa9rNqJcK/
9yja9FiB9/4ift8B2xU5/Ks/ej3qKkwx+Ve8T81dfnIeDYeynI6cvK0cCsnm
QLOOR/SZhe8O1MpRvGf4lDWAh8GQcuiXUhl0bafHgr/i4bXPTzRcxOLC0qfR
5Z0cWrpHVGNvGFxPTnKySTj0+dYvWqBmwLb3zK0kFUjUVm/XDtIwbQvVeHbI
sKYlY/M7ZwYfen9eYCtgp1g178VFq4HBjLOeUZohGs3pK9oeaGnMs0w/3RvK
YNfK1OxwFQWzOr84mWahm/V1jA1uaFR4/pTUxMIr+k+2XksiqqjB26lTBvvB
mIqEISksJXpz8qgcRz87/8OwQwrT27ovE/QKZDakBFeNSeES//PHYj8OxX3G
kSNiEr8GJHxxoIHDmoXxtM2PhHnQGrIxiIe9XBWavp6E+DcuMaRs3M+zilqf
DBJrM4uzkkkBQceePLT2/ce3z5cX9l+lJ//9gfx/HDhYdbKfZad8ved/AFKJ
jN4=
             "], {{9.72359, 4.45312}, {9.264159999999999, 4.45312}, {
             9.264159999999999, 7.6084}, {9.72363, 7.6084}}, {{
             12.973590000000002`, 5.846680000000001}, {11.51221, 
             5.846680000000001}, {11.51221, 4.45312}, {11.05321, 4.45312}, {
             11.05321, 7.6084}, {13.21044, 7.6084}, {13.21044, 
             7.268550000000001}, {11.51221, 7.268550000000001}, {11.51221, 
             6.186549999999999}, {12.973630000000002`, 6.186549999999999}}}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerHTMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           FilledCurveBox[CompressedData["
1:eJy9VNEOgCAIxOhH+qU+wcde+v+3XG2tDkF06kabhsBxp2zx3CMTUUjfsRDd
65UD/yy5YQt/PC6Zx2ky6q1il4Pw7+FaJE+s5MHZXbYuJMz2ooG3OZGw25gH
GJC5Wb4uNiitv7qUw5BvHAwNVRGA7YIbqzU4QS//A9dwNtxb7cl0FNQvjba1
h3BxtoxAbktjs+oZkhPYrmpQ2gUPPRDZ
            "], CompressedData["
1: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
OX5uqqxh3pfIbFkbWfEr9saihrX5vcNPPDxXg/NbKJ0zUx0NLyWgBPN7erTs
f5TXKxbL3fdyUSs2S9yorqGmK/fMXS6u/9Up8iaG0jb/LfVYs+JRg8Bdl6Eh
McOLXZt5vXFI1gNdgjU86u+3qVIZK0oxHFUP0TDeUu3Y+1pcf/eCr6mlNSzK
M2Hcec7nldr9Sh4to6HRMHV940FWfNu8oVD2CpyvmL3Xekyz4sChMgO+8Hs6
fMjuFTvdirl+zsVT+D7IVyn6/nyuh/n1Fq+nHbZe7Ra90oqs5Q+rdfn7oVmO
jl69y4qtd690qMz32b97Usr3O63Yfe5FzJxiGopYDjdWlnL8b171GZKb4/2t
pF+KeVYMTXN37/xADVrw7WKRk6x4/eVt9DdvzROXrRjxZYjPpy8qKvIxa/tZ
0WxvlXRJX6l4JNuR+y9gf0LOyo9VnJs8Cfu5X053W91zS7yK7w56oLpWqNMn
Lhh1T0VEgO/86KpWzFLpgO6oqPl95eD4Qlbsp7s/d12FIs/PbUWhGwxkV1Sk
a5m2jE8OKyIJYwaeVvGrMB0px/9a5apP35xS8cD/yN9w+rPEXBdH7DumonnE
0EE9vf/ZxWTheVlxKuLdn76HVJwRx/Tbgu7jJz/5SPvZpsxPRvyh/5R1vUfF
qU6Fhu7i7/V5jlFh8isde/eLBTnOZjy5d7eKNbM2fqmQ1IrZf6cM/rlORRjh
2xl/qxE31qroHFMxpHw5Kx4/GTxm2RQVjAKtv5W3AotPTV8xQDXWK+21+XZm
fNJVxd1nsZ9HZrbi6sQKV281VHG4ddjsE24rMq/blXJnqGrML6/r+KUqn78i
DL5cXxP8C88ZXUbFnEIVX60J5ffuLlJ3YkEV15d3DfGmv5lQtED0L1XFQU7X
rZZcr7OJrGgP9fXO1HWsFV127skfQrv5gz3funL/1mkRpZ6ivUDW50krJh4c
Xqgl7cjJjkO7Xlghy90rC+1pU7dtSWXDvbODuvtlU3Fz9Phuf7LYkPPW1kxj
s6pYNvlkuroVbbje48rPWNqOoXFZwsL+2bLsqof/+32DE9a5lSJsGPohnSUx
UMXoZGrDw61sCJz3qtAVk4rue3NlKTLEhkbyh78ViFu+SrtknYT9sfEKYsuk
KdiJdkbBxycVfM446a3S24a5efMeLrVOQaj78tlstCOWP0WGlQpuNutdw0F7
5QnzsQVLFPRedanfpEE2ww8uVpCjQ770x8b8s4tc3lT2TLQNNeDb4thyBbLM
C86yQdxn+c0KppjXTByy2IYNG3ln2mfS1Y09tJn2hDvtvGhfis3U8cNpGxzj
kw7SaI+/8SVt78f/fp+y1eY+Q37Z0KHL+1GntyuIOZ7szCra7ZYU+DNop4Lu
Vxf/rvzBhhjC+yT7FazrMHzNTy87xD1ueqygP+HWrbR2jFnGFUb7YP2N1b5n
tuMHUXzSJ7R9CUAq2DGC0XeQv4oiXBZHmv+zTTJuff7Zo4c9jz826n/tibmT
F8/2UMGiu+9q+o21Q+DeFI6/z/q+rk+0+84vGuZ9leP5qe6YuxPt6FR3dbKG
nI9NeU23u0+2Y0CSr5fX7uN1iSuT7CjI1zi8/J+t+8+BChq8zrsva7Qd/Z5k
SLloAOeXw5ed73sxg2tkJdpxfV9kyV/ZjvcFibTaKyj0o818a0E7BD7fb8Xx
6n6oXC3FjsNZOsaVoz3r4sfg3VY7ehcoFhrRlPO/Zky7nqns+CzxO5z2Tdlp
drxMGtHmZk0FA+U9OZ755hwq+yyU87vke/5nPrRzrPW9VF7BMwmUGe0YV6b5
00sFFATvub80G+3vvR4syJRZQRYzgU2iDdX3HN3XxE/BPIlTP2w4db5rslIZ
FHjrC91m8KP0Cio/ZMDg+/hea5yscQoFF+genqSzgyTvar67TmS7H9WjpcUO
rSgRH+3DyTvfO8/vDRb8ddCJyYJ7a9pxmjDj2yYnks5LbV0Uwe+fk7uh/1In
knM7Je9sx8gLHV+bZjrRk9vwxmA7Qvo1WFN4khNbmm2x7uT4t+44aOqlWU6Y
jhJgz7JjXbnOo61TnLhNunBqhR2Ndl4PTMPfx/G17WvteBz2ovnvIU5kRAff
rLvsoNfE8OFOg18etyPw1oVvdUY4YTnRver6h3asHJtufV/aunv/Y0dU3/4r
c9HuHXl9wlKbAx9utJrUf6wTo5VUmc8VciDfsMZ9Ps1wYlrWKjeqlXKAg3/z
Pe0YCVSNHShbInjkh+lO+NWfOah+KwfcTU65dk91olHq7jWPRjnQazqZ4GS+
/4/BHfb3dKBRq5JEjk7ME/jU14HV9c8UOM7fR7oybn7VxwFGy7stxznhk3bH
qn5jHIiaXcQ2a7QThUZx4GIc+Pby8dJ3i5wQdzLrjgNECfWnxDpx7nqitvSN
A3tJYzfccOIoYVzjzw60+fVzYtrnvL84oAQHvjdIvJTiixP6cvvqQLUHRASc
788tzzWtmtqJojV6nTqfkfvlxGqvoLxOXClBYp1DQd2gxqm75+O8CwEuqCD8
a9NMv3g9vSUx6+5i3B/1Wt/3V52otaTGkyplFaypvS1VI9pP53fqXK0G75fe
//Gv3E7I6r3ZXAHJutda2jov60n/1G9S02WJDnB3t1g1ib9/vuLbpAxOAx+N
UJBa/JPNie1Pm4xfP15BticjFp3P4TT80UTP88o4kaz8kYnZxyo4R/i1IYTr
5HK3wjH8+97cFitpn6yoRNwYonjwkROn1vdId2qygivanR+DQ52YlDZV2Rj6
4+Ezy02IquTEhnu9l+7ZRH96MOfwv9WdOCRxkf6xSPCB2rP494NmPT9yb4+C
yeKXaPeShX+Q7798XZplYU7MvTd9zKgz3J8jRv9JQzt83ozhne/zfoTxk2gP
qX59zZgE7s+yzwv3zu7Ewj+vK43/TttU5XMBft9z++qEyn8UlC/OAEA7TPx/
MhW9xZGUcmLWzCwrl6T9Z+twsoCKLYRxKfi9Ou1lfHyyLubd+AcO5BFAU1jF
y3KBcbs2OOB1umfC52AVHzlc92Y5kKa6qeqZCiriCROLjnBgvfxZDdXArd0d
yJ/+WKXjdVXUvpa81rcWDtl130rSnjEv5JJ3NQeOP3t8u2YLFVdm9ci+KdRh
+E3iizmP+AK07yzccSdPTxU5VvxacbutA4fSjEpdjHaExP9xtMVf0m5zNO+X
T6scSCHzHqUiHy1thwNEg+tmtldBNnyw8ql/9uRp9Z8HXXJA0iMn2qk4/iVb
k+ikTvzJV7bv9loqSvy+Fe2XyYkTf2IGfKypGvmpCk5MHLlzQVVeX8TXKrTL
iaaCJ4mPGmVuYLuw34nADtU/TV7O8XgpmQYn6qRYPq3EUhUZ62jjIp7RT6Qu
NjLHShUp+X8neUM/wOHwo11z2qa5Az9xfc3ZN2vKZuKbbsU+rf/hxPLtRb8f
3U6b9OhrohOXScf27FUx5sfHpK+TKVjWv2Pz9ccZDzn947kvFxRctr0o8WXV
6bUvvaEdM56A6pyKMnGDvGqnVcAou3LwBdXA4fTjHYVH8u9rrBtUwuGrYIUQ
eNrZLmX96DYrmLtoCyO7ClmGeWmfkv1wUcWuXtz5QQq6SJy/rMK2M/eZKEVB
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
AP/nC/0B0DiClA==
            "]]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgAmIBKK1/V4WtUVTBgQEMBBx8fZvMlyRKO0wILlGZ/p/f
4e7s+wYXBcQdzDaENh19KOTwIOM4735rUYcNM2s2n/UVd3hiuv7VmjRhB43m
xU+u7pR2WLC2uXlvpohDvcGHO9UZCg4TxS89VDwj7uDy6+3rA5JKDvWNCg5t
etIOnEde/2I9reyQflnwwFklBYdQwTyjVT4qDhftwj7cjlByWF55XNMqSdnB
etUshVd9Kg6fVF7OOlmuBHWnmsPTT/KX8v0V4HwDkD+uSjusObqcQeK/qoPd
ZhWgX0QdlE3fJs2KVHZYoSR6TIxJwAHdvzA+mA5VdpDclqatf1LawfsEu+1s
ID/526a3W66KOxxgybt7llnJYeI1iRInDTEHp1kbM6x+yzvs21b363yViIPc
nblbb7+TdqgyuTr5Z7qoQwbX3Os3XMUdqr7FLFNrlHA4I5fB2qYj4vB/GsOf
4FnSDmbGQCAs6PBcvnbyMkUFB6HvEb8uqAo4aFy57P5AXcnhkAmPvOBloPxK
vp2SeioOfcrXHgU3CEPc3aDqkLM9NmNdsTicD/P/apmoFOt6VQe+22KpZi8U
HFazJeZ9F1J28PVy3D49RBnDvwBU6r8x
            "]]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJSIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQPel0vcf+u9IOWlZA1gl5hwPfzkxi+CqLwe+ST34X
dUjE4dSdGuVd7HIOEksku5cVCzucOHf7xpsOWYdnqSKndXWFHDTf8u4zmCnj
8Id1d+JtJ0GHTlce656Z0g6/Tr87eThJwOE9g3/UDh8phw0f9MQ/3uWHqP8p
4cAABgIOsY9OME9cKu7w4PVd+fdX+R2iEvo7p4SJOeikSj6KCBdwKNrvHLjA
X9SBybeF119f0GHtzVPe/9JFHDb93GEWwiPkcKgkarvjW2GHNuP9s5hdhKHm
ijj4vUz4O79ZxOG72d+b/SJicP7hZPvupRxiDjLGAZL/9wk7XM+wvODsK+ag
tLVz8u+/Qg5/SmzSFlwSc2BZPMmKMVfIYWFKUVZ6hrjDvvlS+nefCDpIqtRG
uepLOKypUP58Yr4g3D9KKtwzDqwVdFit1rGL/4Ckw6I5GeGKSwUdMo+csetv
lHII49PdNPe9oAMDyB/80g7nPN9Lx1cLOTCd39vuPU/a4cZ/yzPTxYUdnl3s
3bDiBZA/L1JowTNhB1h8uTyS85bfJeIAANoTu24=
             "], CompressedData["
1:eJxdVHsw1WkYPp0urBrOzeFw/M7vdo6yOSulyVL7dNnUFLnNKoWzSow22ZhI
cdxSg0I3EpJkrEoXlxShJiqXWjubFrUqbUTJanVUyv7s7vTHvjPffPO83zvP
+77zPu9H+W9zD+DzeDxP7kzcX9zhq0Krlcg6ojqd7yBF4vuj9j5JSjgebNau
6JaiKdGvv3ehEur0/NE5m02Q82Ta7pg+FsHBHd5+N00w1enOmbAfWKD5zePB
1aaIXtS0b3ofg6SzISM55abgZ+ub5/kyMPRsrLs3aorOplWfLLtpeA73yyfb
ytBxbEmv3WYag1aFY4XZMmh2rCGk7ymULixjYW2GxocViburKIQrYn9VHTCD
LsxguCyDwm/Fe4PCLc2RYmyXlcThqJUbyw80mcM7Ty8icD+Fh+y0uCMJcsyK
a7WPrKRQqI3nQi1gHzX2e9E4BXVkm1d6kQXESiqjch0N2xkKoQdNICVyYKyr
gUapaLZhoC8Bt/l/GLy2ZWBWv55c7EYgujlHnfITA8/rxYUuGgIZszX8ywSL
+OIPvEIpgYsbGcH5XSxujMzckBZvgfIdXXueN7FYYM0lHJKjc/K5+vQRFiXf
qcbcFXKc0Xi6Ww6xqPL4eu24kzl8ks801X5Qfsatk+K5kpUI9R4qOE/KcajH
5YXmkRISA2Go/ogcyfxoek2BEoNOybcvlFjAJefha9dNSlRmzls+EESghdHa
DM1Qgn+UGzBPAbX94GHDIhYhE3waBZJ//KSS2LK4OzHnVgU+JqxIkpcx6K41
zJnLJ9F9gMvM9c/7x0hIb+JBbSyN+4ss0mT6JFrSrZK92ii47s8MEZ1SQBov
P2yzlIKvVHw8rZnASZPBDaZ3SLgeLD22W0wgyNs/YF48CfeJ+Q/LYex1JNor
kURJNtm/qN4cbRkbPi3l3guYK2N7y83g8e2fVluqSUjox4KSchm2P/cKiyUp
JA24VRFTZbhG0navLlEg9ZQt5RamcGg0NnHyoaFZnH0xKMoEJhP1iBnk+85q
FliawD2czRzPYpBdqQ04/UIK/yun76ebsiDeJcT1xkhxQXqCr0lloT+xFwPG
CDk1qWbqLyzOpg8fCtYaoyrKJap7lEWnHyfUdgmc2zkh/sXiasbOZ0YqCYz8
Aw1ydRzf3bFgw1AxpjSkzYloZbFP77DzlRsiPHrtKulL4PQS6VOn8RKh/mWe
42yWhUpmP31XpxC9N4nOW5cYNClmOOryhGjcOi/2MhjQ7PSs+nNCbMvVVr+s
o7Gd5Bz5QoRZyXgloJFdf656Z78Q7Sknc4IeUEiVFadqtSIEbOYshoKNnOto
mhh7pB13dasolLNwtu4So8eDlxroSmHZU2KV4qoEuvkfO9KWkZ9x7aae69Kl
JLLCZpVacfHoHOdtCSCRbj3FfuYkMRLcVubGFpGIZN7cVqwW4Su3a3YXXpHA
Niv371OFSMhrLbnnTGHTreWkr04APaue7sAaCv01jWq3XAGMWtp6dPNpSG3i
1kfMFaC/cpl6QTUNvI3S3fpg9Ln/f/UnALedAXVvGcTGmFKOnUZo+/mb6w0l
LN7HBNeEewjQMDeo7wSUSK4YlfAYIVodXNoyapQQEVvlF9uF6Mqt6FJPUSE7
IqeAeSf6j1cFX/VThzlfSjDW+CBvHV+F0f3nF5Y9k8CvwvZJZr8SUWuL7VqP
G+P//+XfKeUiiA==
             "]}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerJPEGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9450980000000001, 0.764706, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29411800000000005`, 0.839216, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
             1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQAWIQnehv/cc0Utoh78Y2jc0P5R3KFu70U/aVxeDP2j1t
Av8tEQf7SMMY2QRZB6uXtY+z+4UdPNrbDepeyThMsytxrPUWcmioLXl1il3G
YQZIfZSgw4U7zoe+y0k7lHmxv/5fI+CQy7jw64enkg47Xp6vW8Ih4PDtZcUZ
h6USDleeZ2l/ExdwuHBx1bSSFHGHltA9EytZBBx45AWDlTTFHAq+zvmyrxDI
t/kup2cp6nDtUTBDj7ugQ1WXjFJenIhD1f0ft4y1hRxmJy5ec/+NsMOJuZcO
/ooXdmAAAxEHtfXnDBVmizgUXJ7/1+OjKJzfqmVaveCpqMO8/mznozeEHU7J
LUzzUBVzSDp8WTtVUtjh3gmbT+yLxRzamBUjD7QIOTy8ZPhcUlvc4QXDQRnb
f4IOj7NSwqOeiTvMkr4sPG2HINw/PoWhN8uPCjrszCk5558o6VCiMv3/hH2C
Do9KJq3VE5dySMpRPOHIKeRQ77G/VnaGlMOhlFUJIZOEHN4cV/spKC/t8OCw
6vG5RsIO8U6s7eIp0g4MJTP09YH+gMXXn6a7G3IvijgAAJv0uk0=
             "], {{
             8.27593, 5.600999999999999}, {8.27593, 4.0764499999999995`}, {
             7.7903, 4.0764499999999995`}, {7.7903, 7.970409999999999}, {
             9.149, 7.970409999999999}, {9.495699000000002, 
             7.990780000000001}, {9.836413, 7.8734}, {10.097, 
             7.643809999999998}, {10.32893, 7.4181300000000014`}, {
             10.453540000000002`, 7.104199999999999}, {10.43952, 
             6.780890000000001}, {10.46035, 6.45471}, {10.337919999999999`, 
             6.13566}, {10.10423, 5.90714}, {9.834327999999998, 
             5.687319999999998}, {9.491156, 5.57794}, {9.14383, 5.60102}}, {{
             8.27593, 6.020399999999999}, {9.149, 6.020399999999999}, {
             9.365609000000003, 6.0059000000000005`}, {9.579484000000003, 
             6.0753699999999995`}, {9.746219999999997, 6.2143999999999995`}, {
             9.892242000000001, 6.3635}, {9.967786000000002, 
             6.567780000000001}, {9.95391, 6.776010000000001}, {9.963729, 
             6.982559999999999}, {9.888697, 7.184149999999999}, {
             9.746219999999997, 7.334009999999999}, {9.592580000000002, 
             7.478730000000002}, {9.387888, 7.556730000000002}, {9.1769, 
             7.55095}, {8.2759, 7.55095}}, {{12.779349999999999`, 
             5.8757800000000024`}, {11.18246, 5.8757800000000024`}, {11.18246,
              4.495850000000001}, {13.037669999999999`, 4.495850000000001}, {
             13.037669999999999`, 4.0764499999999995`}, {10.69683, 
             4.0764499999999995`}, {10.69683, 7.970409999999999}, {13.01235, 
             7.970409999999999}, {13.01235, 7.5510100000000016`}, {11.18246, 
             7.5510100000000016`}, {11.18246, 6.29641}, {12.779349999999999`, 
             6.29641}}, CompressedData["
1:eJxlk2tMUwcYhos2RYXNnlLbCr1gClJ7enowKIg4eQUVNYgFB5F0Gmy8kCIQ
OorMxigbImZeQIMixcpFx7wEAaGwSbSiBfFSdU6wKAw3ZaZMhCETjbgds4k/
9iZfvjw/3zzfN0OXHrdxAovFmsfM+/1vAjHz/kLJgUQeZAL9yuGLNHj88NZH
RQSuOvjzz62nsSDmbuEX77ioxPFrh16qYSke0SmquKBtC+cbjWrEpZRsLY3g
YkaNIbnwOYV87+grgwQX5R4ubd8GCkvP2qtYIi4cLZas0TAVFE1rYr+ZzEVt
0C5HiooE33wgJXIjgebFIx02qxK59sc3z+V5IX9R0tM7BiWKK9tepP7IR/ze
4ZByjRKlLy8ONbgL8F2AamhnnBLL+grDRWuE4yxoFXwtrhchqKI+ZDRCiYrc
o9YdJ70xqOE/89qjRM+eRDrvoBj3nO29iukkBlLfnJfNkiLk6ZQXhnISzU37
OINZMnxLsUMVGSrkZK+9lCT0hU4R0BW/jIK849fVLE9fJGe61waNUJjdb9fE
8H1RUDY6u8+ixqZfpl3+2yrDidOTKwbkNEqOMnFK8ba105JYQSPbuN/N2S9B
qyam/swgDevw2M/Zp8T44IOVnsO2r/JBlCAwR+tOj3PVDZ1u2I3G6ci0PJ9A
MaR9NzxqbqvhHRl6t3qCBLWdF8J7TGp0aCdq/YslWNp+5ktPhRoFmbeemCkp
lnS7+zb8QKHY302v/0qKhs2H2d8vpzAzWNaZp5eix4+TU3RehTo/rKRMUtiy
OZ+MyVWopnldhgEJfn82ZDI7SHA5FtPUV2IUNrX9tDuNRA9TN6HOB9MrjZ/P
XUTijzSLqyDMGzUa5jCiSdi6Ey88bxGNs+OIMEm2/T9fESTyj83KXDdRgLIV
t6TJRhJsIakP3McHO+FTqq6bxLu/jL2lsV6gihrlpcEqBGcYLkXG8rA4oXFb
zHUVXOw5RHAzAeJtun/YJgrRGfHOrXYC5s/uTPFk+p74Myv3XguB212pwhIP
5n7bQx4+ekDA72b9GKll2FVgfszhYUHZluvTGH9PApiHoHkY6LeFyrvUcL3v
Y+KhkWNdUTOJxpvlDavafvvIvdv41VHrBdgtcDperab+x/OWRBleTxWN+/3A
/wB+8G7/
             "]}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerMXIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerNBIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQ3fTo+Izdx3QcQlPvix78r+KgN2HBD8Nv+g5/JioZ
rZmk4fBh0XqFsx7aDp/Ymc/vna7p8OfFlannD2k7bI7jeeoSrefwr2J91MwE
dYeItT4/lubpONysiZHW+qbiMOeIwoYiDwOHqR/fG+v1KDlM8HQ7dwgo337E
dppdiIzD+e/Bj5cC9bs/rBJZ5y7r8AmoTGaGpoNyTkXV0jfCDjnndTgDJms4
TD91W9DPW8rhmF7gXlMGVYcYBcePyUB51ry7Z4NzFR2u/VJaqAvU39DULWqa
oeBwaMUSP4dgGYe603P0uj3FHTbNfb/8WLeSQ15Y7bptStIOX70i2yyA7pv0
tsbe9J6QwzFv805HoPslpl7hzADKH0lZlRAC9F/Dwbwb2zzEHbafeblpBtD/
/AJnLj5OV3AQWrr3oDgwfKYaXP62PkfRAQBEtY9z
             "], {{14.80901, 
             9.345419999999999}, {13.743519999999998`, 9.70987}, {
             13.016919999999999`, 10.654219999999999`}, {13.952580000000003`, 
             10.306610000000001`}}, {{11.37113, 7.1364199999999975`}, {
             10.71228, 6.004419999999998}, {10.71228, 7.177}, {11.39769, 
             8.1788}}, {{9.82133, 12.979130000000001`}, {8.690819999999999, 
             13.38113}, {8.03666, 14.26438}, {9.224139999999998, 
             13.742750000000001`}}, {{11.738219999999997`, 13.74254}, {
             12.92535, 14.26367}, {12.27094, 13.381170000000001`}, {
             11.140869999999998`, 12.97931}}, {{13.176730000000001`, 
             12.69978}, {12.60295, 11.88607}, {12.63669, 13.113}, {13.30869, 
             14.019279999999998`}}, {{10.48084, 7.6483799999999995`}, {
             9.600349999999999, 8.933119999999999}, {10.48084, 10.12788}, {
             11.36133, 8.933119999999999}}, {{8.82607, 11.30619}, {8.782, 
             12.866109999999999`}, {10.24941, 12.343890000000002`}, {10.24941,
              10.82582}}, {{10.71228, 12.343890000000002`}, {12.17853, 
             12.866109999999999`}, {12.13679, 11.30619}, {10.71228, 
             10.82582}}, {{7.78548, 12.70037}, {7.653829999999999, 
             14.01924}, {8.325000000000001, 13.113}, {8.35872, 
             11.886630000000002`}}, {{10.113909999999999`, 
             10.394459999999999`}, {9.233909999999998, 9.200330000000001}, {
             7.73775, 9.64138}, {8.6871, 10.875230000000002`}}, {{9.56485, 
             8.17925}, {10.24941, 7.17699}, {10.24941, 6.00399}, {
             9.588669999999999, 7.136619999999999}}, {{10.847769999999999`, 
             10.394459999999999`}, {12.27461, 10.875230000000002`}, {
             13.223969999999998`, 9.64138}, {11.727799999999998`, 
             9.200330000000001}}, {{15.12577, 12.00872}, {14.018169999999998`,
              10.766060000000001`}, {12.710669999999999`, 
             11.251830000000004`}, {13.495080000000002`, 12.36425}}, {{
             10.4809, 15.38392}, {11.32134, 13.94576}, {10.48092, 12.872}, {
             9.640999999999998, 13.945920000000001`}}, {{5.83618, 12.00977}, {
             7.467, 12.364930000000001`}, {8.251059999999999, 
             11.251930000000003`}, {6.94357, 10.766800000000002`}}, {{7.00905,
              10.30738}, {7.94515, 10.65472}, {7.2182, 9.70992}, {
             6.152049999999999, 9.34592}}, {{6.25151, 8.900640000000001}, {
             7.36125, 9.27952}, {8.546149999999999, 8.93023}, {
             7.5544899999999995`, 8.616499999999998}}, {{7.776040000000001, 
             8.210890000000001}, {9.1027, 8.630609999999999}, {
             9.136519999999999, 7.219290000000001}, {7.60984, 
             6.5491399999999995`}}, {{11.82447, 7.218990000000002}, {11.85887,
              8.630529999999998}, {13.1852, 8.21038}, {13.3511, 
             6.548449999999999}}, {{13.40685, 8.61593}, {12.41507, 8.93009}, {
             13.600359999999998`, 9.2795}, {14.710359999999998`, 8.89981}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPacletInfoIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 17.5}, {18., 18.328427}, {
            17.328429999999997`, 19.}, {16.5, 19.}, {4.5, 19.}, {3.671573, 
            19.}, {3., 18.328427}, {3., 17.5}, {3., 3.5}, {3., 
            2.6715700000000027`}, {3.671573, 2.}, {4.5, 2.}, {16.5, 2.}, {
            17.328429999999997`, 2.}, {18., 2.6715700000000027`}, {18., 
            3.5}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {{{5., 12.}, {5., 11.}, {2., 11.}, {2., 12.}}, {{2., 
             10.}, {2., 9.}, {5., 9.}, {5., 10.}}, {{2., 14.}, {2., 13.}, {5.,
              13.}, {5., 14.}}, {{2., 8.}, {2., 7.}, {5., 7.}, {5., 8.}}, {{
             2., 6.}, {2., 5.}, {5., 5.}, {5., 6.}}, {{5., 18.}, {2., 18.}, {
             2., 17.}, {5., 17.}, {5., 18.}}, {{5., 4.}, {2., 4.}, {2., 3.}, {
             5., 3.}, {5., 4.}}, {{2., 16.}, {2., 15.}, {5., 15.}, {5., 
             16.}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}}, {{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}, {{0, 2, 
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {1, 
             3, 3}, {0, 1, 0}}}, {{{6., 13.5}, {6., 11.}, {10., 11.}, {10., 
             15.}, {7.5, 15.}, {6.671948, 14.999096000000002`}, {
             6.000903999999999, 14.328052}, {6., 13.5}}, {{9., 12.}, {7., 
             12.}, {7., 13.5}, {7.000358, 13.775994}, {7.224005999999999, 
             13.999642}, {7.5, 14.}, {9., 14.}}, {{13.5, 15.}, {11., 15.}, {
             11., 11.}, {15., 11.}, {15., 13.5}, {14.9991, 14.328052}, {
             14.32805, 14.999096000000002`}, {13.5, 15.}}, {{14., 12.}, {12., 
             12.}, {12., 14.}, {13.5, 14.}, {13.77599, 13.999642}, {
             13.999640000000001`, 13.775994}, {14., 13.5}}, {{6., 7.5}, {
             6.000903999999999, 6.671950000000001}, {6.671948, 6.0009}, {7.5, 
             6.}, {10., 6.}, {10., 10.}, {6., 10.}}, {{7., 9.}, {9., 9.}, {9.,
              7.}, {7.5, 7.}, {7.224005999999999, 7.000359999999999}, {
             7.000358, 7.22401}, {7., 7.5}}, {{11., 6.}, {13.5, 6.}, {
             14.32805, 6.0009}, {14.9991, 6.671950000000001}, {15., 7.5}, {
             15., 10.}, {11., 10.}}, {{12., 9.}, {14., 9.}, {14., 7.5}, {
             13.999640000000001`, 7.22401}, {13.77599, 7.000359999999999}, {
             13.5, 7.}, {12., 7.}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerPNGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9450980000000001, 0.764706, 0.]]], 
         StyleBox[{
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29411800000000005`, 0.839216, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}}, {{{5.529, 5.57807}, {5.529, 
             4.053519999999999}, {5., 4.053519999999999}, {5., 
             7.947459999999998}, {6.48, 7.947459999999998}, {6.852703, 
             7.9696}, {7.220449, 7.853290000000001}, {7.51264, 
             7.620859999999999}, {7.761139, 7.404469999999998}, {7.898312, 
             7.0872199999999985`}, {7.88574, 6.757950000000001}, {
             7.9057260000000005`, 6.425880000000001}, {7.770876, 
             6.103259999999999}, {7.520519999999999, 5.88419}, {7.218853, 
             5.661900000000001}, {6.848291000000001, 5.553469999999999}, {
             6.47438, 5.57807}}, {{5.529, 5.9974799999999995`}, {6.48, 
             5.9974799999999995`}, {6.713101, 5.9819900000000015`}, {
             6.943998000000001, 6.0508500000000005`}, {7.13054, 6.19148}, {
             7.287083999999999, 6.33478}, {7.370268000000001, 6.54129}, {
             7.35676, 6.753090000000002}, {7.365949999999999, 6.96311}, {
             7.283390000000001, 7.16676}, {7.13054, 7.311090000000002}, {
             6.957866, 7.457780000000001}, {6.736853000000001, 7.5351}, {
             6.51039, 7.528030000000001}, {5.529, 7.528030000000001}}, {{
             11.87171, 4.05348}, {11.3399, 4.05348}, {9.319080000000001, 
             7.05438}, {9.319080000000001, 4.05348}, {8.787279999999999, 
             4.05348}, {8.787279999999999, 7.947459999999998}, {
             9.319080000000001, 7.947459999999998}, {11.345, 
             4.933299999999999}, {11.345, 7.947459999999998}, {
             11.871730000000001`, 7.947459999999998}}, CompressedData["
1:eJxlkXtMU3cUx6soT4V7y6MV6QOYj97LvZUFWAdGv0EkmJkNyibo8LkRO8qs
DzYsCr7oWHRCFUQRplINtloxomFqRAU6FohjAXEK69RKwaLjNcwgxamXGNkf
O8nJySe/nOT8vp/gDRpl+lQej6fgemK+rQVI9GlzeMfycfKZvtxWK0dtIH80
NYfEvzdMCbokOV5qkw95dhPoG95R/srKoqm9gDUWEbB5FZv2JrFYE3/J2k4R
+LZwSufzOgZCh6/28Asf7Jz+VZNBxmBzb8q23TwCjk6zM+1gGBR3/7lo5t4F
e4NKFozQyBMpNsYtI6C1+7ieUNMwDLjou+wEZOur+tf2UWgdeTxgziXx5FzN
4P7dFOx+ouaetXykGiN/jVlEQWpp9YvW+MJquONa9kIGe1dieOtJP+jVS35W
/CbD4Tj56dQBf0Q9Hml0b5PhiT2vwADBJNdYXFqqKoQw1UfMkNTLcFN/78KJ
4kBIZywcFXtTMFz5YKwhPwjH50zJyDBR2J/5dNxEilHp9ezz3jgafJ/55VvT
JcgYT1lx/L0wfNNYu7RsphSeOndFvieDLZ91Zi/lSaEuuDVXbWEwsZblIUVa
4qP3z+5gEdWu1MYYJDjoOhSQQMgRcew7W2iDGD9+xG0elWPh1Rj1T3+KMF3f
ZWnu5/xc4QQdC8I7fxVfb1r+iWI2XnVs75s7zE7y1dWq6rsPWGRZZSKzRAQu
tcVnXjNwrs8fUu0Tw8291zHsxaCB+zaZLEYIcfG5IDMMvztDKpmNYhi7w12O
tNHIQWcJbRVhRc0XoYSGhnnagcayR0G4vu9BWawb/TbPU7NRpywNLrxH4ctz
6z5VzgvEhJ6PbRTSrPEu288LJ1lVOs1oShdgT8vY6Kz7FCjhkQ4Phz+aJVzg
3jTEiVE9nho/bFUd6t+5i0ZtlfYXWbQvbqRcWD7WQ+NM6LWXBRF8/HGWO1AX
BktReDZTSSLn+/hsgmbg0MQGT60moWtV/8XXMXAviipMPU8iq3286f5DBkbl
ZbdV9SROZbb4P4xkEd2X260eJCEt/qFCl8si31n64eoAPlY+FerrbrJwclpL
NvDRcHvboO1vFiUJhqNJd/7jvMWRa64vC0B6cvUQK2D+xx0eqpDMMcGkr3f8
Bvidex8=
             "]}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerSVGIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}, {{0, 
            2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{15., 10.}, {14., 
            10.}, {14.00113, 11.596388}, {12.921309999999998`, 12.991014}, {
            11.375490000000003`, 13.38965}, {11.62449, 14.3584}, {13.61224, 
            13.845852}, {15.00095, 12.052766}, {15., 10.}}, {{7., 10.}, {6., 
            10.}, {5.998837, 12.052669999999999`}, {7.387368, 
            13.845787000000001`}, {9.375000000000002, 14.3584}, {
            9.623999999999999, 13.38965}, {8.078326999999998, 
            12.990908999999998`}, {6.998712, 11.596276}, {7., 10.}}}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1,
              3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGCwBmIQDQG6DhBay2HribJ983dpO0x7xRSXBuQnfi7MXTFD
yyFv6fW05LNaDm8emUkd0NaCqteB0ho4+NoORUeiariA/AWGk1eI79FyEFb/
bi3yVN3hVPuCrC9VWg5ZsqG+AlvVHaQOHvv63kvLwWC3Oj93q7qDBnd8/Gsp
LYe77wNEXjirOwRx+r/4+l8Taq463L0QWhnOh9ijBFcPsUcJbp4k2B4luH2a
YHEluHsg+hTh7oWYqwT3Dypfx0HTatLp+hXycL6KuxWz8no5h3XOpqqR87Uc
3n5ay//6rrQDX1429/nTmg5rXj0tn/VHwiGP73oWPzcwPA9YKntJizlcWud0
yh/ont3cU0QiGEQcyoVrLn/p1IbzYfEE43e+adbhLtOD69cP3Gu6Yas+3PwJ
HzWmfviiD7f/l4dXlYSUAdx9gXtO3VqWoI/mfj00/6Hz9eHhk3AuJ/yFsz48
/Mwq4qdyt+rDw/eZnSWXANA9sPC/8WXBApGn+vD4Ca++wc3KYIAWfzC+OpwP
i3+Yelj6gJkHSz8w+2DpC+YeWPqDuRc1faLz9dDSt57D6Zb4V8/XAtPFlZnV
HgX6DrLMm67v1tdxCDii1CarZOCgvE94c9waXYcPPdu0Ot/oO8xWeGXHoKnv
0NCwNev6FH2HDr0V+TOFDRwsfOfLFujqOWx5VbxV9Le+w8b7wq9DVuo4PL2g
dPvnOX0HraKOHZaq2g7zbXSuzGrTc3iSfV6HE56+EfkTAK7YJ3o=
             "], {{14.5, 
             15.}, {14.223859999999998`, 15.}, {14., 14.776142}, {14., 
             14.5}, {14., 14.223858}, {14.223859999999998`, 14.}, {14.5, 
             14.}, {14.77614, 14.}, {15., 14.223858}, {15., 14.5}, {14.99981, 
             14.776065000000001`}, {14.77606, 14.999812}, {14.5, 15.}}, {{10.,
              14.}, {11., 14.}, {11., 15.}, {10., 15.}}, {{6.5, 15.}, {
             6.223858, 15.}, {6., 14.776142}, {6., 14.5}, {6., 14.223858}, {
             6.223858, 14.}, {6.5, 14.}, {6.776142000000001, 14.}, {7., 
             14.223858}, {7., 14.5}, {6.999812, 14.776065000000001`}, {
             6.776065000000001, 14.999812}, {6.5, 15.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxdVGdQVAcQPjFKc8yVd+/ae++wBE1QdAyCKMKnR4gUC02CikGKSrWhwKGG
UE4iAwEplkvEQrlRRAUkCAyC0jSIIKCAiAUpIqMIiIBIcuYHP7IzOzvfzM7O
fPvtt3M89jh4a7BYLCd1fqnrJD9mV+4SISdhMMnXQgBx+yPyrKYQCrK17mOS
ABPO4e+Mb5FYZLDeZo2JEMWRLafXZvGR+ok+rkGL0GLTa/hbJ4Gq9htRh+tF
6KBymplDBMwOduWZPRCjPs/1w005Aa/F5jPKWiToY8UUyw8SKMpoTijUpPE2
dDLf/jOBwTDlZP8CBgtuK7Jc+vggLNQTXzGw1S6/JB8joS8y1Q0rkuLZim9r
w+yEGLe+sbGap4fzNveZ3RkizHv00pE1Sw8FxZq9pX+I0R3kauc/Ww83nTIW
5yRKcO7QqF9utxSXHzRv7t9DwVLlkKcpl0I7zr1z3ITGI5lRUaRQinJXm9Sk
5zTidTXX5oYziDDybAjazCBmbFCj/w6N5fBR2dcwyM2iJ8/MopF0jzjA/koK
j106fz5eQSEgwdqqTkMKh0QdT90dEqzaWxfzcJKawtR7L5PvdWgMLzvelWpM
wS2j+I1/IYXdbZMpKTNpBG33PKliKPQrAmKXKWl4rQySdwRIwFxooCsMGXhq
seJXx4pRmC/mfgxhpvjrG0sfK3wZrLG7HW32UIjZC5X7o4MZPLW2HBVMEyL3
0JPo7pUM7Go0VyudBWBFmMonSmk4qQINJ6tI1B9Nj5llS0NuX/zzjBD1vv2a
ZEZnKKiWFrBfhZMIpK6TaS8l2KKsGtmixivif4rduEaC9TtLrgzfIzEwtiNq
QCWG1ti5XXk2ApSGXpIFWonRGaV90VUkxG3zleqLEOGH99/5KTVE2D7MTxfZ
irDjTqOB95gIxppa3b0cEWxzPN4rNSRIjghc4lMrRI/0SFLmNAqjcVdX53kJ
EX/CpUc4QCG5c8Nr96cCmIYmao+m0Jir+U1t/hEBEt859J2YwyDqi24jJD48
efzrAQWDTFFsZp4jCUX1UdL2hVrP+XJRZS4fQjO7T92zpdh2Nz4OEwRkV3w6
9ulIMa7cFBMuIxDXyHYe5Unhf+yWvh/Bg0lFyP3LxxmMW56d7zbEge6psivF
p9V7m+jItFjFAWdpUYnpYQrbslXlRv5shCz5eNdeT4Ko0wW/eM9gY/+kPjG3
TASr7MoslpCNilrz3+1LhShhfept4rPRrfNuP+eWANt25zSus2Uj3dHF/O9G
Em1jR31L8tmgZw651EzwkW2Q1hXK5uBGdE+Gh4yPNq2KN+MZHISiNdmghMAF
uZ/7ZS8ulo5sP9xgTiB/PtYvlvDw9HqLPv8zDxveBi/UGeaB9V8QmIh4ei2g
gcCmgzX3904np7B161wfk3E+0t2ik9PU/fKMRTJqK4lXjK20SI8Hz/z4S/pa
Ali1e76WneTixQm1MPUCGF3INxnV4MI7xtOtvUoIy4Khz02FnCn+dvucW4Mr
Oaj+OsWqVu3XksK4mQMFHJQOxXKHgyUgm/6qfT3IQXeihTDEkAKld+pi9R4u
xI7XqlrzKTh1ZigrnnMR2aUlqplOY+S8bt9WBQ+cq28E/WofKdRvqmc5gbSQ
OpKt9hv3a7UhugiEp+a4S8opmDfPMbkTx0dCJHdnmzmFMtN5NmFq3ukv/4lX
uUsQoZjUNkwlYeZ179g5XzFqnL2f8acJ8P9/+S9+xjWt
             "], {{9.87376, 
             4.758600000000001}, {10.95876, 7.970409999999999}, {11.50686, 
             7.970409999999999}, {10.097999999999999`, 4.076469999999999}, {
             9.6543, 4.076469999999999}, {8.248099999999997, 
             7.970409999999999}, {8.79353, 
             7.970409999999999}}, CompressedData["
1:eJxlkntMUwcUxrtOCjEotw9pQ5/AgHt7b33UigwMfEMGrUMKDBfpNoLlkdGw
YBdgk4kTgqaUh4ouIArqNiVDGUJAJq8xWEEXh1ZUJCAyYSIKm+8NEbcum+yP
neTk5HdOTnLyfcfTmBGbwmaxWEGO/Lv+E8vhezVYuieeh22cJfP8dhWiiCz5
zgNcvC9W9s6+q0J2wUC+cJ5A48hlk3aaQXXFEyNZQ8DVfKpo+AMGz6VWdm4o
gamW+lcnR2h0h9aljXIJvH7N9qEmmkb4KVsNS0SgPDjzjdw2JaKP6id0PMf+
L2Ftiykl/NkPWndsIZAYnxa7uJbCJ03mHwzPCdQrftqsUVG40nJhqrGCizP6
viTOjyQuzfiU2HN4cOIJQnqLSTwuXKdr3c2HdjCycyichLFngE45K4DQtPFR
qTcJwrsgQuzsjs658Q6TD4lva6fbvDYLF9hiNb/wbRKB31FsPLuMxOFwgzKj
xgP7ZraHrEkgoc1OX3TrcwmKzp22rn1IIlG9aaWSkmHrwYGUVXmO+4bOj5Hb
5MjXJNkz31HiM+13uVKRAqJEeVWrmsZ7AUSZk6sCUWRYl+cEDb7Ts7BqgQIn
wngdxWUMlm6oSJtrkSPEy9GRquCa8HjZV0My7Hu433SkWoXAvp3TT36VYkJ3
ec3+31RwaVi9q/+kBC/9Y2XkLbLpxTjpad5z/E9mgZNzunlufzAYdVY0F66W
4PuiznxNDwPGtHJJj7MUnMixazfSGRgG2scFVVIMJpfkWNwZWBxypqplKLh+
MHTyOI0Lfc3HjNtl+FL2hV2qoeHrLx/cbZLBr8QeWFupxIEjcXOZjrl2JGlq
vbMScaOlWw33pTAkB93U11EgONWfuv0uQVNpra9lAwX1PVt0VJMYFwWB9Q1i
Cv1ZHmlfr/NAqv+517z9KHTdiG+b6RYtcH+5MFGeK/xXHwqxbvY7S9nueNvv
aOHpGAqhF1OvTloFmKo8v3a4ncKLp1ljh2P4sHsNz+7wUCKgvuGtOD0PPfe5
q3walWjMHt51u5WLIrU4uSyGRqR509DHNi5U6yX3bp2gkb5XF97fzYWLy+07
D+ZoaM88mr9ynYtsdqWLOMrx/3f3HvqZw4P1bl1encO/wJv6kvLlPPTOHoq2
XGKQUJWEp47/zPAJ8me/osIzXbO+b/w/HssRfBOxxR2ZFStWdAXT/+OANyM+
mnUTLfj7kv8Cv3B4ZQ==
             "]}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerKernelIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.898039]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}}}, {{{19., 13.}, {19., 3.5}, {19., 
            3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 3.}, {7., 
            3.}, {7., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAQAWIQfW91mNqfJH0HgVL5hitmCg7uU76xxe/Qd3Awjdvl
2aPskHpf9OD/ZToOd9kVtnYaKznseaHtYfxNy2HHqje7lSRUHfas9Gjd6Krp
INZuvH8WUP6Ot9TiUhM1hyk3FSb3APXXsGYeW9Sp5rCT3yFL2FzB4a4KW+NU
Z2UHK6kD0QqM8g42tyySdOtUHSwEJrH6MEg5iBo0RpcD5cPAFos4cL+KflYC
1B+0wP+J5yRhhx8iDI8lgeYzaLeL3TzH6ZDB2rYmD2h/wdc5X/YZ8jsI/slX
tQa67wS77ezQ+cwOem8y2/cD3W+w2i48GiifGnvHjRnoP47iLz/2nuV06HRM
eHoB6H+zs9Z+FycKOyx++SalIMTQ4dRT+yX3/4k4pJqdUFE2N3CQOwkU+C/p
ILrO/WEVUH7NLIVXdgzyDgCwloC6
             "], {{14.356890000000002`, 
             8.80715}, {15.26808, 9.20715}, {14.75798, 8.51929}, {
             13.889980000000001`, 8.210630000000002}}, {{15.50572, 
             9.055660000000001}, {15.40481, 8.047169999999998}, {14.95886, 
             7.41475}, {14.98468, 8.353030000000002}}, {{14.69925, 8.2}, {
             14.66778, 7.05536}, {13.62143, 6.702780000000002}, {13.62143, 
             7.816750000000001}}, {{13.48092, 9.9899}, {14.09851, 8.93313}, {
             13.48093, 8.144059999999998}, {12.86377, 8.933209999999999}}, {{
             12.60539, 8.80729}, {13.07211, 8.2105}, {12.20383, 8.51926}, {
             11.69399, 9.207640000000001}}, {{13.34039, 7.816750000000001}, {
             13.34039, 6.702810000000001}, {12.293999999999999`, 
             7.055390000000001}, {12.262530000000002`, 8.2}}, {{11.97714, 
             8.353090000000002}, {12.00295, 7.415180000000001}, {11.55736, 
             8.047659999999999}, {11.456740000000002`, 9.055730000000002}}, {{
             10.16199, 7.578840000000001}, {11.359990000000002`, 
             7.839730000000001}, {11.93624, 7.021730000000002}, {10.97586, 
             6.66539}}, {{11.016440000000001`, 6.38067}, {11.74664, 
             6.651610000000002}, {11.18759, 5.92502}, {10.357750000000001`, 
             5.64171}}, {{10.419440000000002`, 5.365740000000002}, {11.27625, 
             5.65826}, {12.181249999999999`, 5.391480000000001}, {11.41413, 
             5.14879}}, {{11.429440000000001`, 3.6768399999999986`}, {
             11.551440000000001`, 4.897399999999999}, {12.526169999999999`, 
             5.205770000000001}, {12.55101, 4.16919}}, {{12.60754, 
             5.558840000000002}, {11.509590000000001`, 5.88251}, {12.20647, 
             6.788230000000002}, {13.253540000000001`, 6.435409999999999}}, {{
             13.34042, 3.2504900000000028`}, {12.833490000000001`, 
             4.117919999999998}, {12.814119999999999`, 4.925980000000001}, {
             13.34042, 4.15807}}, {{13.48096, 4.450240000000001}, {12.83467, 
             5.3932400000000005`}, {13.48096, 6.270240000000001}, {
             14.127249999999998`, 5.3932400000000005`}}, {{
             14.127959999999998`, 4.117769999999998}, {13.62153, 
             3.250720000000001}, {13.62153, 4.15807}, {14.147639999999999`, 
             4.925700000000001}}, {{13.708409999999999`, 6.435409999999999}, {
             14.755480000000002`, 6.788230000000002}, {15.45236, 5.88251}, {
             14.35436, 5.558840000000002}}, {{14.41041, 4.168940000000001}, {
             14.43565, 5.205680000000003}, {15.41, 4.897}, {
             15.531869999999998`, 3.6763200000000005`}}, {{
             15.547509999999999`, 5.1483599999999985`}, {14.780389999999999`, 
             5.391360000000001}, {15.68567, 5.65821}, {16.542669999999998`, 
             5.365090000000002}}, {{16.60379, 5.641249999999999}, {
             15.774359999999998`, 5.924939999999999}, {15.21554, 
             6.651240000000001}, {15.945540000000001`, 6.380030000000001}}, {{
             15.98616, 6.66484}, {15.025730000000001`, 7.021660000000001}, {
             15.602219999999999`, 7.8392}, {16.8, 7.578090000000001}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           FilledCurveBox[{CompressedData["
1:eJxTTMoPSmJiYGDYBsTMQMzIwszIDEUMjAxw9qjIgDtgkIgAAMeOBqk=
             "], {{
             1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1: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
             "], {{
             13.48089, 1.9509299999999996`}, {10.96851, 
             1.9509499999999989`}, {8.931845, 3.9876499999999986`}, {
             8.931859999999999, 6.500030000000001}, {8.931874999999998, 
             9.0124}, {10.96857, 11.049077}, {13.48094, 
             11.049069999999999`}, {15.993319999999999`, 
             11.049062999999999`}, {18.03, 9.01238}, {18.03, 6.5}, {18.03, 
             5.2935}, {17.55072, 4.1364199999999975`}, {16.6976, 
             3.2833000000000006`}, {15.84447, 2.4301899999999996`}, {
             14.687389999999999`, 1.95092}, {13.48089, 
             1.9509299999999996`}}}]}, 
          FaceForm[
           GrayLevel[0.537255]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerDocumentationIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJRIGZigAElBwht4IDCb0Dwg3h/2248ZuCwROpbdVKv
IlTcEEqj81ng/IKp6gJlpxjR5Bng5sH4qPZB+Qw8cH4D/3SZ8lOcaOZxoNkH
5TcYwfkCcrkyG48Zoak3hpsH46PaB+Prw/kQf+ujmWeAZp+BAwACrS35
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}}}, {{{18., 14.}, {3., 14.}, {
            3., 15.75}, {3., 15.888071}, {3.111929, 16.}, {3.25, 16.}, {7.75, 
            16.}, {7.888071, 16.}, {8., 15.888071}, {8., 15.75}, {8., 15.}, {
            17.75, 15.}, {17.88807, 15.}, {18., 14.888071}, {18., 14.75}}}]}, 
          
          FaceForm[
           GrayLevel[0.898039]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 13.}, {19., 
            3.5}, {19., 3.223860000000002}, {18.776139999999998`, 3.}, {18.5, 
            3.}, {10., 3.}, {10., 4.}, {3.25, 4.}, {3.111929, 4.}, {3., 
            4.111930000000001}, {3., 4.25}, {3., 13.}, {19., 13.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
            3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJxIGZigAFjBz2T65lLlqo6wPg3sjzuJGdyOqScifU+
8d/I4YfNDutscxaHy/P/eghWGjmssHqStoORwUF81muTS5cMofoYHNzOHZpX
VqEB5xclVx0Sqld3YNgxSVYaqD7rccfWH1vUHDR2RAQ2azI7/Oxdb7sZyC8A
qeNnh/On8l37b2mjBlf/OtxKfp6pOsK8oNkWO/+ro9mn4TC3Qe1QW7shnP+p
eva/N88NHTY4m6pGAtVH7n7rVGxr5NC6y2OhTou6w+0v6fZBMUYO61+Lv2k7
q+agNdFFf3GCkQPPGS7XXefVHNgWT7JiTDVy+CqUPLPuoprDUYUNRRmZRg4S
YH+rOSxymH9i8h4jh/5/07MvAvk7g60i/gPDa/Hx97m/vNUc0MMXAJkejkw=

            "]]}, 
          FaceForm[
           GrayLevel[0.537255]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {1, 3, 3}, {0, 1, 0}}}, {{{17.823529999999998`, 11.11765}, {
            17.82332, 11.280000000000001`}, {17.691760000000002`, 
            11.411556}, {17.52941, 11.411760000000001`}, {12.235289999999999`,
             11.411760000000001`}, {12.072940000000001`, 11.411551}, {
            11.941389999999998`, 11.279996}, {11.94118, 11.11765}, {11.94118, 
            2.8823499999999953`}, {11.941899999999999`, 
            2.8372400000000013`}, {11.95332, 2.792939999999998}, {
            11.974490000000001`, 2.7531}, {12.044599999999999`, 
            3.002019999999998}, {12.270819999999999`, 3.1746100000000013`}, {
            12.52941, 3.176470000000002}, {17.823529999999998`, 
            3.176470000000002}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 
             4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {
             0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
              0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 
             1, 0}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.04675, 6.052660000000001}, {
             14.98306, 6.096589999999999}, {14.9068, 6.11858}, {
             14.829500000000001`, 6.115309999999999}, {14.83814, 6.15225}, {
             14.84931, 6.188549999999999}, {14.862930000000002`, 6.22396}, {
             14.989640000000001`, 6.231980000000002}, {15.1139, 
             6.186519999999998}, {15.20552, 6.09862}, {15.130299999999998`, 
             6.077719999999999}, {15.121929999999999`, 6.073559999999999}, {
             15.04675, 6.052660000000001}}, {{16.107940000000003`, 
             7.377000000000001}, {16.689980000000002`, 6.79499}, {16.77984, 
             5.8828700000000005`}, {16.32256, 5.198469999999999}, {
             15.865280000000002`, 4.5140699999999985`}, {14.988219999999998`, 
             4.247999999999999}, {14.227759999999998`, 4.562980000000001}, {
             13.4673, 4.87796}, {13.03524, 5.686269999999999}, {13.19582, 
             6.493559999999999}, {13.356390000000001`, 7.30086}, {14.06488, 
             7.882300000000001}, {14.88799, 7.882300000000001}, {15.34556, 
             7.88232}, {15.784389999999998`, 7.70055}, {16.107940000000003`, 
             7.377000000000001}}, CompressedData["
1:eJxlU31MzHEcvvKWRnSX7+9XXaULdfr+7kShOD3GSpzcctRizcupVja3y+at
MJQQtVO3it6U90Niul4c5b2oE5bJEpGGpdKLzNuvf/zjj88+e/Zsn8+z59nj
vmFL2CZrgUAwk5/h3f4gu8pgkaHuVqNJO1mEKd8euo17zaGj/ZXKJ5TAVTX7
g206B1JW+SIhjCArV2GxTePALpCcWczjbpVDp+gQj1s/SMwrCaoNGRN2pnCI
9rk6ZFpNUPyz5NVZEYeuz7f9PeII0vXhH9lCCrYnL7t/A8HH83YVjjIKdeCW
6WELCRx26Lc+8aXo/jpLJn5IMPfAdL9dKgrZkllkeTADfdrJZEUSRWbrHPOA
kcGYqY+v/1pDsbjKVhr4iMGNGMPIc/4UGVcU16a0MQiRdg7oCcW7p/ft43sY
bB47VBjjQaFL3laRuoJFwGjNlW0FFO/XHr5YZ2Zxn+wTZ5ZS2ChOrCqoZ7Ho
i7LoWy5Fl29T2I4TLExWBW5BqRSFxx6MU0ezyB0xMqFvO0WEZt6bFRwLRUhl
dG8ehYTLKvcQs9B2Jz9S1/D3dx88hT8M/EpX7bv3liLf/vTNmmYGz1zuNjhU
Ulx3k0ruHGaw7rjfJ3f+n9EfM4LlDEqG/dvP62ku1irqCMbqVLXKKoqOaF7J
G4ISq+pRwj6Kl8LehY0dBE8ifPPyKAdrtrGwiOdFkraJFzLlSLGvLT66keCy
kNrFNMihnKkjA33/48Ra4QSvKjm2V6R+vbuZ9zdH854a5ehkM262JjE4oLES
mfpleH2rrKlEzUJvMSRIQ2VI7C1VxUc6oty8JLa+gkN3s+bozlQneNGevWU5
HAw9fKDznRHVxF4qjuOgbj2mjSwVQ3IoKuiqksP3QUfGTuOC5ZPSln56Tv/x
jvd0yy7y/k3zsTGKI53RbloZELGHIvRCUoBrghMaZs854/nFG4gTeQ62sAgv
2+gxMd0bAst6c7WAgVN+lLRe643Mtb8X/Rg/CRZJy9DuAIpIeYru1C8hvEKa
lWZe3w9XmX+XrxDO49u4DL4PW41HWmL5PvwFn0hNig==
             "], {{
             14.929780000000001`, 6.679259999999999}, {14.99634, 
             6.637309999999998}, {15.059230000000001`, 6.58981}, {15.11778, 
             6.537259999999998}, {15.13069, 6.72777}, {15.13348, 
             6.918830000000002}, {15.12614, 7.109630000000001}, {15.0175, 
             7.005190000000001}, {15.00081, 6.98846}, {14.888, 
             6.879850000000001}, {14.90472, 6.82555}, {14.929780000000001`, 
             6.679309999999999}, {14.929780000000001`, 
             6.679309999999999}}, CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fq/zLPT0QYOjyLEt19cIOGgUm/w4Q6QH8NRFHCI
R9pBfUHnhoc/9R1mxZ9lbLKUdXh/ZI248009hxjjn2mzpeUcdr48X7dkh66D
zQ7r7O1/5Rx6X3J62xToODQUu035libnsG5mzeazc7UdJhznCTk2X8bhvOd7
6fjTWg5zpC8LT7sh5TAr5YnOm5laDgpbOyf/tpVwkFpcGmKqqO1wQi9wr6mA
mMNXV6foc6naDhsy7xV2nRN3sBBdabDtgrbDsSkei6YXSjqw/HKZpxKr43Bj
XqTQgmdSDiBjZLt0HDy2+h9PVpNxMOuL6PZ/qOOgJTH1CqeHrIP6VTvZ/khd
h3XMz3s0dOUcIu6+snxZq+tg8kpR6q6jrMOaFQdNePp1HY6JNclM+SDj8Dux
5UPGZl0Hn797VnqwyjgIlMo3XGHTc7CadLreA+ifblHTGW2Ceg51QW8vf9wh
47BQ44L6pxQ9h1UVyp9PxMs6fFs1lXN/iZ7Dr1vG3kwmMg7qntd99lXqOdz6
8MUrkk3aIcvjTvLLYj2HOeVzFinflHQIm7967Y3/eg4JKluexryScFjkMP/E
5Cn6DkElKtP/C0g49MYuqsqWMHCYsOCH4TM/cYdN13fb32M2cPiRpKF+66qY
w8zGUz++39R3MDqyUS8vWcxB694Jm0/L9R1SPhfmrvgh6vCsR+Mtb52+A0vx
lx9734o6+L9M+Ds/GMHnnnFg7W5NhPolBbZc14P1HOZ92fdxq7qYg+D9zkj9
MKD58xyd/y8Rdqg71sqsKGngcM2SLWX9dhEHI+apH98D08+WnLX6QrPEHCoj
VpieBfKPPTyz/hkwfQEAdeMU4A==
             "], {{13.11765, 
             9.647049999999998}, {16.647060000000003`, 9.647049999999998}, {
             16.647060000000003`, 10.23529}, {13.11765, 10.23529}}, {{
             13.11765, 8.47058}, {16.647060000000003`, 8.47058}, {
             16.647060000000003`, 9.058810000000001}, {13.11765, 
             9.058810000000001}}}]}, {
           EdgeForm[
            CapForm["Butt"]], 
           EdgeForm[
            JoinForm[{"Miter", 10.}]], 
           EdgeForm[
            Thickness[0.]], 
           EdgeForm[
            GrayLevel[0.65098]], 
           FaceForm[
            GrayLevel[0.65098]]}]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTIFFIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{16.5, 2.}, {4.5, 2.}, {
            3.6719479999999995`, 2.0009000000000015`}, {3.0009040000000002`, 
            2.671949999999999}, {3., 3.5}, {3., 17.5}, {3.0009040000000002`, 
            18.328052}, {3.6719479999999995`, 18.999096}, {4.5, 19.}, {16.5, 
            19.}, {17.32805, 18.999096}, {17.9991, 18.328052}, {18., 17.5}, {
            18., 3.5}, {17.9991, 2.671949999999999}, {17.32805, 
            2.0009000000000015`}, {16.5, 2.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1,
             0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}}}, {{{4.5, 18.}, {16.5, 
            18.}, {16.7764, 18.}, {17., 17.7764}, {17., 17.5}, {17., 3.5}, {
            17., 3.223600000000001}, {16.7764, 3.}, {16.5, 3.}, {4.5, 3.}, {
            4.2236, 3.}, {4., 3.223600000000001}, {4., 3.5}, {4., 17.5}, {4., 
            17.7764}, {4.2236, 18.}, {4.5, 18.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{
            13.57129, 13.35693}, {12.979560000000001`, 13.357063}, {12.49995, 
            13.836817}, {12.49999, 14.42855}, {12.50003, 15.020283}, {
            12.97972, 15.499966}, {13.57145, 15.50001}, {14.16318, 
            15.500053999999999`}, {14.64294, 15.020443}, {14.643069999999998`,
             14.428709999999999`}, {14.64252, 13.837011}, {14.16299, 
            13.357481}, {13.57129, 13.35693}}}]}, 
          FaceForm[
           RGBColor[0.9450980000000001, 0.764706, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 
             1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {
             1, 3, 3}, {0, 1, 0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQA2IQDQHaDhBaBUrLwflMqqxiB1xkHfqslzZ//a/swDGp
nC91hozDK6c1/ziMVRzk9CzfTbGTcXDybGQ1aFVxMD/16+yRJ9IO0/3DeMKv
qzj49F44f+W1tMOvuqw9JdaqDiElKtP/B8g4cF9fXGDbpepQ7sX++r+PosOa
7tsZDPlaDlpmz0qPFCo6LLn7ItluhZbDCuWG2UdXKzoc+zk7oOOClgPLpuu7
7d8pOqwFqb+v5dA0cbrpRgMlh7hMyZXf32g5ZBpWzPhWquTwQsBCKOOBloPc
wy0PXNcrOahcexTMsEfLQazH6xXLFhUHG6B36vM0HWb3ZzsfvaHmYPF5taXD
Bm2H0KxvDtoC6g4Nuutj8l9rO/yrWB81M0HdIUQimqOIQ8eh91rgVZaN6g7M
IHf803boWTgnI5xRw6HF+/ic9C/aDpogh3poOEREub2yPart8N/u8aHGAg2I
/+q1HSZyJXM73tOGuL9e1WGzZnjFdG4dhzh+taPH9VUdOIoCDvkA+TbZ22Mz
zqk42Knvza+5q+2w7MOCm6X1Kg5FdzRl16zXdhAo6wptNlBxOM+v3OIere3w
xJB56kdg/KDHJwAEHLkm
             "], {{8.415530000000002, 11.}, {
             12.638179999999998`, 11.}, {11.68506, 12.668}, {
             10.791059999999998`, 11.72708}, {10.62513, 11.553912}, {10.36001,
              11.522025000000001`}, {10.15775, 11.65091}, {9.221229999999998, 
             12.254909999999999`}}}]}, 
          FaceForm[
           RGBColor[0.29411800000000005`, 0.839216, 0.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3,
              3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 
             3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBWIQLa1/V4WNUd+BAQyUHE4vdN32+a8onN8kXsuaWSbq
0Dcp/LkEkB/vLrOp8YuIg1PC0wtK0koOK1Zbi92eIuLwJrN9v5q3ksNH/ugq
E1MRB5UzW/5qVys5HBENWLH8v7CDSnqiv/UeJai5IlBaGZXfYABXP0nJaM2j
hQZw8wQLOEKzDhnA7TsRva4u55YB3D2K9tI78z4ZwN173f9/5Of/Bmj+MXRA
9a+hQ4sCu+oZF324ei/5XQv2terDzcuMsRCYtFUfbl/LzG31qU/14e4pfOjg
IcZgAHcvxFwDuH9Q+ED/wtTDwgNmHiy8YPbBwhPmHlh4w9wLiw/0+AMALQSV
4A==
             "], {{5.996060000000001, 10.}, {15.00394, 10.}, {15.00394, 
             16.}, {5.996060000000001, 16.}}}]}, 
          FaceForm[
           RGBColor[0.709804, 0.803922, 0.87451]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}}}, {{{7.476430000000001, 7.56917}, {6.447, 7.56917}, {
             6.447, 4.}, {6.027209999999999, 4.}, {6.027209999999999, 
             7.56917}, {5., 7.56917}, {5., 8.}, {7.476430000000001, 8.}}, {{
             8.85472, 4.}, {8.43225, 4.}, {8.43225, 8.}, {8.85472, 8.}}, {{
             11.84251, 5.766640000000002}, {10.49879, 5.766640000000002}, {
             10.49879, 4.}, {10.07679, 4.}, {10.07679, 8.}, {12.06027, 8.}, {
             12.06027, 7.56917}, {10.49879, 7.56917}, {10.49879, 
             6.197459999999998}, {11.84251, 6.197459999999998}}, {{
             14.782259999999999`, 5.766640000000002}, {13.43854, 
             5.766640000000002}, {13.43854, 4.}, {13.01654, 4.}, {13.01654, 
             8.}, {15., 8.}, {15., 7.56917}, {13.43854, 7.56917}, {13.43854, 
             6.197459999999998}, {14.782259999999999`, 6.197459999999998}}}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerUnknownIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
              1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
             0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
             0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
             0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {
             0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
             0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
             0}}}, {CompressedData["
1:eJxTTMoPSmViYGBQB2IQHTjbYud9Rz2HG+e+Bz9eyu5wzDjjxfwJBg4r1tVM
e87I4uCr4XJA8Y2BwwHdUzkTOFkcdLZvkRKyN3QoCExr9tnE6sC86fpu+zRD
hx2SeQeeu3M4rLfdrOLw1cAhQPK/3eMmdofDjRN0EibpO2wou936rIrLYef9
hRoX9A0dElo+ZDw+wevAAAINhg4bLnt4P33LA+c7vPFZ+HmXgINTwtMLStGG
DueSkj4XvhVw2NV8Y6ZTvYHDHR7zB5+TReHqWwI95zY8E4bz+yK6/RkNxBy2
nijbN1/JwOHa0VyTBnMJBz7dTXPf8xs6NKzbllRfKeuwM9gq4n+9oYPHmqPL
GSQQfD52p00NnvIOohMTRfNtDB0ObH95vq5FHm6+ptWk0/Ucqgj7JFf01Mer
OrzdrfTj/i1dhw2gcJBVhsgzaENpDYdWLdPqBaoaDi8M4uMagPLXQe76ruRw
R1N2zf9kVYg725UdFrTM3FbfKu+wepbCKzsGGQe2AxVsvLKyDkvMCov2H1Z0
cOnOef57pQjUXBmHDd23MxjyORy8zTsdE0Rh9rI4vH5kJnXgtgqcvy7luJvC
PnWHDztvdf0FxvfB5+2Chw6rw+Xr7oUsOcShBefPWPvV1em1hkNA7/Q8oWYu
uH++mC8UYHwu5NDGrBh5QEQXLj/v0sFf9t+14forlT+fkLfRg/MB09PfBQ==

             "], {{16.686, 7.765140000000002}, {16.00777, 
             6.803710000000001}, {16.04777, 8.25342}, {16.841960000000004`, 
             9.32471}}, {{14.986, 8.997559999999998}, {16.38884, 9.61328}, {
             15.61564, 8.57028}, {14.28, 8.0957}}, {{12.01489, 8.998}, {
             12.720699999999999`, 8.09516}, {11.38452, 8.57026}, {
             10.611329999999999`, 9.614259999999998}}, {{10.952150000000001`, 
             8.253860000000001}, {10.99215, 6.80415}, {10.31441, 
             7.766060000000001}, {10.1589, 9.32466}}, {{8.01074, 6.94966}, {
             9.938229999999999, 7.369580000000001}, {10.86475, 6.05415}, {
             9.319580000000002, 5.481}}, {{9.397, 4.937999999999999}, {
             10.50345, 5.348640000000001}, {9.643999999999998, 
             4.231930000000002}, {8.38424, 3.8017600000000016`}}, {{10.04153, 
             2.939460000000004}, {8.50174, 3.275400000000001}, {9.81326, 
             3.723149999999997}, {11.21365, 3.3105600000000024`}}, {{12.0264, 
             3.6294000000000004`}, {10.25809, 4.15089}, {11.38016, 
             5.608890000000001}, {13.066440000000002`, 5.04102}}, {{13.22659, 
             5.550790000000001}, {11.544459999999999`, 6.118169999999999}, {
             11.49222, 7.961920000000001}, {13.22659, 7.34474}}, {{12.50759, 
             9.23779}, {13.5, 10.937499999999998`}, {14.49341, 9.23779}, {
             13.5, 7.968750000000002}}, {{13.77346, 7.34473}, {
             15.506369999999999`, 7.961910000000001}, {15.457, 6.11816}, {
             13.77341, 5.550780000000001}}, {{13.93361, 5.04102}, {15.61989, 
             5.608890000000001}, {16.741960000000002`, 4.15089}, {
             14.973650000000001`, 3.6294000000000004`}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]]}, ImageSize -> {20., 20.}, 
        PlotRange -> {{0., 20.}, {0., 20.}}, AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerWLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
              3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
             3}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 
             3, 3}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
             3}}}, {CompressedData["
1:eJxllAtMk1cUxyvSCSgOaUtftP2+rxT5KAXFqUVE/tOCVREVg07GBGFA6iwG
EAEHuimE1SG+R1ScgFJBqCAL4Mx4jIGOKuqc4nyhNgMVxmM8dFMHaxfDEj3J
yc0v59yce3L/55BRm0NirBgMxjKzW07H992OJc52wa2q6nr1bzKE/lhyKnil
C5xrFMZNqW44sng08pGPCwx1K0IL+XKsqptdGTooRWyB92hGjQJUPeu79ekU
jim/f1io9EDbperCqCAKT2dv1XX/I4eClAxvaidAbdVfTzvujlPBYG2YRaDd
mBnRXesBZsvemSltEsxx6Ts3nKCAXD3LaXm2GOFh9rrPc7wwZN0UfG6pAJNr
011kGQrkje3b/moeF/n6a1PPd7mDDt/bNFLCweUd6oYMezfEF9+OjY6ZhtSC
4LQtx2SIfz7JqPWdgrq1hqC/Wigw/jMb3OQZTp7RSMZ56vwXYk8fx3c46bbj
4IebHfFgElGtWy1Dj/PEqtv3nJDVs+q8mDkdyQd51ms8+fBsCY15yKGxZX10
XkkHH2yV+YbMA2OpFWFHHMTIfW/ASd2owDO15xgpkiBIbxcoM8f1vRHrNFEE
Znz5ccqQNY2fFjcfUg8S2JArbqjVTMdX7bvnXNJJseJwP1/X6IIby6McPkpz
ha6/uZybRKGy/AOaaaBhena4asp+Aoy1VdHSARr9fuGJ9zUELtjR/qWB7hAr
41SaCvE7/Jn6fvSzRTSsbHdLos8KwTm7+PG2YWfEWqxLhF8t9f4WwOGTlQ+9
J4lBt3Ul8F7zMBznH6Iyx6e0JQs0tlw0ZoiUcZkitEXmqNlGLjaG2F2oU0lQ
cWDvA2Y3D3ZanzzTRgKa/b3p/qECPHlV+ucNexJZ83cKaV8+vOJPTvghmYSX
cldDxGsuvk4YdWU3kchgai4WlTrBSp7tdKePRL1wst0uby72DM0tdEigcPB0
ub7nDhfVneG7y7opSAsVT0LyeTgaVtPOXSeFdt+SwKtWPPSY5ggafaVY9MQs
zDMsPI1hX1b4UZjad/Wudi4Lz93MQoohoev8Zs2iRDaMnI5OagGJm0ULWkV6
DlQve3sabUn8/MUfI33XnLDjYtZEspVASlxvzWQ/Dp5eHM6U1UuwzPKvAWzk
h54oM6SKsDDpeGCYHRvNCw2ajmlCrGf7Dcy04cH8WmN9mRAs5kvVt2xnpAYM
NBy+IkTbtpmHWPYEmoyFATVJQhSZxnJLeAQKHkUF2McKIXdk3RyQEfh9e3YR
IoTj88SYdyWPGylE5WnR6NEcEpR3uWlPkBAjQ3qKE+v6RtcMhCsdDjCD6HF+
8Uup/ESxFDZmea7MF2BGuipI9+l0PJ+g1pqa+fCxpBNueBmubRk9wIdk2mpK
1/E/uxYX3Ft2lB7PP7Qz3kuT7o4z8hOdadeFqF5aqcxfIkeXpeFR0Zu6Hrib
aJ4Ycx+PK1oFI6CRZaPMdL9FwqzKzQPFrvCn9CrHOine3k//Ak892E8=
             "], {{
             9.617389999999999, 11.266640000000002`}, {9.355364000000002, 
             11.506809}, {9.073421, 11.7243}, {8.7746, 11.91677}, {8.7746, 
             11.91677}, {8.66219, 12.48534}, {8.587309999999999, 12.73394}, {
             9.09304, 13.23107}, {9.16793, 13.30761}, {9.65491, 
             13.785590000000001`}, {9.687847, 12.945878}, {9.675329, 
             12.104999}, {9.61741, 11.266640000000002`}}, {{8.50275, 
             9.731640000000002}, {9.072936000000002, 9.76756}, {9.631433, 
             9.558930000000002}, {10.038419999999999`, 9.15798}, {
             9.701419999999999, 9.06244}, {9.66393, 9.043289999999999}, {
             9.32679, 8.947599999999998}, {9.042788, 9.148219999999998}, {
             8.700315999999999, 9.24909}, {8.352910000000001, 9.23443}, {
             8.391562, 9.40336}, {8.441624, 9.56948}, {8.50275, 
             9.731640000000002}}}]}, 
          FaceForm[
           RGBColor[0.8666670000000001, 0.066667, 0.]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerXMLIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 
             1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
             0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
             0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
             1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{6.726999999999999, 6.01648}, {
             7.884519999999999, 4.}, {7.323999999999999, 4.}, {
             6.443760000000001, 5.560419999999999}, {5.55859, 4.}, {5., 4.}, {
             6.160519999999999, 6.01648}, {5.027529999999999, 8.}, {
             5.580260000000001, 8.}, {6.44373, 6.4670000000000005`}, {7.30133,
              8.}, {7.858, 8.}}, {{10.21241, 4.736269999999999}, {9.04211, 
             8.}, {8.43231, 8.}, {8.43231, 4.}, {8.90442, 4.}, {8.90442, 
             5.558230000000002}, {8.85815, 7.23077}, {10.03149, 4.}, {
             10.392400000000002`, 4.}, {11.56769, 7.239559999999999}, {
             11.52338, 5.558230000000002}, {11.52338, 4.}, {
             11.995480000000002`, 4.}, {11.995480000000002`, 8.}, {
             11.382750000000001`, 8.}}, {{13.303540000000002`, 4.43079}, {
             13.303540000000002`, 8.}, {12.82854, 8.}, {12.82854, 4.}, {15., 
             4.}, {15., 4.43079}}}]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerTXTIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3,
             3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIJIGYC4j0TK5/wfzN0yHv0pK49SddhVzbnzwXvDR22
KF8tr2vUdbg50+m56TNDh13zgyfMn6vrkJfn4x9xy9BhkQBje8BWXSitDRU3
ctiXlXpIv1XbweqZTXL8JyOHn7eMvZlctB0eremY9eK/kQMDGGhDaWMoLQDn
F+88GNA+lduhOatZ+CJQ/fPVT5LLGTkcLp14LurfC9PPAaXR+Rxw9Qn2QS5t
U5nh5jEsOFxTyciAZh+Mbwjni+woNffvNUSo70m/cOG/Idw87PbC+LoOfF4z
Mn8D1T+bLHr4qqKuQ8bv8LBZfwwdhGSmFwY76zqghzcABAZ3MA==
            "]]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
             0}}}, {{{4., 3.}, {4., 18.}, {13., 18.}, {17., 14.}, {17., 3.}, {
            4., 3.}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1,
             0}, {0, 1, 0}}}, {{{13., 18.}, {13., 14.5}, {12.99992, 
            14.367367999999999`}, {13.052580000000003`, 14.240146}, {
            13.146359999999998`, 14.146362}, {13.240149999999998`, 
            14.052577}, {13.36737, 13.999922999999999`}, {13.5, 14.}, {17., 
            14.}, {17., 15.}, {14., 18.}}}]}, 
          FaceForm[
           GrayLevel[0.65098]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{14., 
            17.293}, {16.293, 15.}, {14., 15.}, {14., 17.293}}}]}, 
          FaceForm[
           GrayLevel[1.]]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 
            1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
            0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0,
             2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
            0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0,
             1, 0}}}, CompressedData["
1:eJx10DEKgDAQRNFFbexTWGyhSwgp9hA5g0cQrL1/Z8Bs4cAIYXjwhZDjes57
FpG1n6WfSeLb27c2Volz+/dhBxtxrIPL2Ar/oQtZg16JsQ879Gyxx3vEuygx
3iPs0Fdi7NHb2EycoA8b9EqMfWovO5kdXA==
            "]]}, 
          FaceForm[
           RGBColor[0.3372549999999999, 0.8352940000000001, 0.988235]]]}, 
        ImageSize -> {20., 20.}, PlotRange -> {{0., 20.}, {0., 20.}}, 
        AspectRatio -> Automatic]& )}], 
   Cell[
    StyleData["FileManagerFileOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TagBox[
         PaneBox[#, ImageSize -> {Full, Automatic}], 
         EventHandlerTag[{{"MouseClicked", 1} :> If[
             FileExistsQ[#2], 
             SystemOpen[#2], 
             DefinitionNotebookClient`FancyMessageDialog[
             "Paclet", "File not found: " <> ToString[#2]]], Method -> 
           "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]], 
        MouseAppearanceTag["LinkHand"]]& )}], 
   Cell[
    StyleData["FileManagerFile", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{60, Inherited}, {0, 0}}, Deployed -> True, Evaluatable -> 
    True, CellGroupingRules -> {"SectionGrouping", 100}, 
    CellFrameMargins -> {{5, 5}, {2, 2}}, 
    CellFrameLabelMargins -> {{0, Inherited}, {Inherited, Inherited}}, 
    ContextMenu -> {
      MenuItem["Open", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, ShowStringCharacters -> 
    False, Background :> FEPrivate`If[
      CurrentValue["MouseOver"], 
      GrayLevel[0.92], 
      GrayLevel[0.99]]], 
   Cell[
    StyleData[
    "FileManagerDirectory", StyleDefinitions -> StyleData["FileManagerFile"]],
     ShowGroupOpener -> "Inline", Evaluatable -> False, CellEventActions -> 
    None, CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerDirectoryIconTemplate"]], Background -> 
        None], None}, {None, None}}, ContextMenu -> {
      MenuItem["Open/Close Group", 
       KernelExecute[SelectionMove[
          EvaluationCell[], All, Cell]; FrontEndTokenExecute[
          EvaluationNotebook[], "OpenCloseGroup"]], MenuEvaluator -> 
       Automatic, Method -> "Queued"], 
      MenuItem["Open Directory", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeOpen[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Un/Mark as Excluded", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeExclusionToggle[EvaluationCell[]]"]]\
, MenuEvaluator -> Automatic, Method -> "Queued"], 
      MenuItem["Copy Path to Clipboard", 
       KernelExecute[
        ToExpression[
        "DefinitionNotebookClient`FileTreeCopy[EvaluationCell[]]"]], 
       MenuEvaluator -> Automatic, Method -> "Queued"]}, Background -> 
    GrayLevel[0.99]], 
   Cell[
    StyleData[
    "FileManagerEmptyDirectory", StyleDefinitions -> 
     StyleData["FileManagerDirectory"]], CellFrameLabels -> {{
       Cell[
        BoxData[
         TemplateBox[{}, "FileManagerEmptyDirectoryIconTemplate"]], 
        Background -> None], None}, {None, None}}], 
   Cell[
    StyleData["FileManagerBottomSpacer"], ShowCellBracket -> False], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb$ = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb$, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb$, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.906]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   
   Cell[
    StyleData["ExampleImage"], PageWidth :> First[{650}], 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.855, 0.396, 0.145], 
       RGBColor[0.02, 0.286, 0.651]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.969, 0.467, 0.], 
       GrayLevel[0.467]]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         TemplateBox[{
           StyleBox[
           "\"excluded\"", "ExcludedCellLabel", StripOnInput -> False], 
           "\"Excluded cells will not appear anywhere in the published \
resource except for the definition notebook\""}, "PrettyTooltipTemplate"]], 
        "ExcludedCellLabel"]}, {None, None}}, StyleMenuListing -> None, 
    Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["ExcludedCellLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    9, FontWeight -> Plain, FontSlant -> Italic, FontColor -> 
    RGBColor[0.9, 0.4, 0.4, 0.5], Background -> None], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.982, 0.942, 0.871]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.905, 0.926, 0.956]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.934, 0.954, 0.879]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["FormObjectCell"], CellMargins -> {{66, 66}, {16, 5}}], 
   Cell[
    StyleData["LocalFileInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`file = SystemDialogInput["FileOpen"], RSNB`cell = 
             ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["LocalDirectoryInput", StyleDefinitions -> StyleData["Input"]], 
    CellFrameLabels -> {{None, 
       Cell[
        BoxData[
         ButtonBox[
         "\"Choose\"", FrameMargins -> {{5, 5}, {0, 0}}, 
          BaseStyle -> {"Panel", FontSize -> 12}, Evaluator -> Automatic, 
          Method -> "Queued", ButtonFunction :> 
          With[{RSNB`file = SystemDialogInput["Directory"], RSNB`cell = 
             ParentCell[
               EvaluationCell[]]}, 
            If[
            RSNB`file =!= $Canceled, 
             SelectionMove[RSNB`cell, All, CellContents]; NotebookWrite[
               Notebooks[RSNB`cell], 
               RowBox[{"File", "[", 
                 ToBoxes[RSNB`file], "]"}]]]], Appearance :> 
          FEPrivate`FrontEndResource[
           "FEExpressions", "GrayButtonNinePatchAppearance"]]]]}, {
      None, None}}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.459, 0.459, 0.459]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["Input"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["Code"], CellProlog :> First[{
       Quiet[
        (Block[{$ContextPath}, Once[
           ReleaseHold[
            CurrentValue[#, {TaggingRules, "CompatibilityTest"}]], 
           "KernelSession"]; If[$VersionNumber >= 12.2, 
           Needs["DefinitionNotebookClient`"], 
           Needs["ResourceSystemClient`DefinitionNotebook`"]]; 
         DefinitionNotebookClient`LoadDefinitionNotebook["Paclet", #]; 
         Null]& )[
         InputNotebook[]]]}]], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    GrayLevel[
      Rational[16, 17]]]}, Visible -> False, FrontEndVersion -> 
  "13.0 for Mac OS X x86 (64-bit) (October 31, 2021)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"4e49e908-06cc-449b-bb7a-966ca9cdab96"
]

